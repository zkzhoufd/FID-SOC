// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module tv (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        img_in_address0,
        img_in_ce0,
        img_in_q0,
        img_out_address0,
        img_out_ce0,
        img_out_we0,
        img_out_d0
);

parameter    ap_ST_fsm_state1 = 3'd1;
parameter    ap_ST_fsm_pp0_stage0 = 3'd2;
parameter    ap_ST_fsm_state7 = 3'd4;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [13:0] img_in_address0;
output   img_in_ce0;
input  [31:0] img_in_q0;
output  [13:0] img_out_address0;
output   img_out_ce0;
output   img_out_we0;
output  [15:0] img_out_d0;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg img_in_ce0;
reg img_out_ce0;
reg img_out_we0;

(* fsm_encoding = "none" *) reg   [2:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [14:0] indvar_flatten_reg_115;
reg   [7:0] i_0_reg_126;
reg   [7:0] j_0_reg_137;
wire   [0:0] icmp_ln22_fu_175_p2;
reg   [0:0] icmp_ln22_reg_415;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_block_state2_pp0_stage0_iter0;
wire    ap_block_state3_pp0_stage0_iter1;
wire    ap_block_state4_pp0_stage0_iter2;
wire    ap_block_state5_pp0_stage0_iter3;
wire    ap_block_state6_pp0_stage0_iter4;
wire    ap_block_pp0_stage0_11001;
reg   [0:0] icmp_ln22_reg_415_pp0_iter1_reg;
reg   [0:0] icmp_ln22_reg_415_pp0_iter2_reg;
reg   [0:0] icmp_ln22_reg_415_pp0_iter3_reg;
wire   [14:0] add_ln22_fu_181_p2;
reg    ap_enable_reg_pp0_iter0;
wire   [7:0] select_ln26_1_fu_207_p3;
reg   [7:0] select_ln26_1_reg_424;
reg   [13:0] img_out_addr_reg_434;
reg   [13:0] img_out_addr_reg_434_pp0_iter1_reg;
reg   [13:0] img_out_addr_reg_434_pp0_iter2_reg;
reg   [13:0] img_out_addr_reg_434_pp0_iter3_reg;
wire   [7:0] j_fu_243_p2;
reg   [31:0] img_in_load_reg_444;
wire   [31:0] p_Val2_s_fu_249_p1;
reg   [31:0] p_Val2_s_reg_451;
wire   [7:0] tmp_V_fu_252_p4;
reg   [7:0] tmp_V_reg_456;
wire   [22:0] tmp_V_1_fu_262_p1;
reg   [22:0] tmp_V_1_reg_462;
wire   [0:0] or_ln26_fu_278_p2;
reg   [0:0] or_ln26_reg_467;
wire   [0:0] and_ln26_fu_284_p2;
reg   [0:0] and_ln26_reg_472;
reg   [0:0] and_ln26_reg_472_pp0_iter3_reg;
wire   [0:0] and_ln28_fu_290_p2;
reg   [0:0] and_ln28_reg_476;
reg   [0:0] p_Result_s_reg_480;
wire   [15:0] p_Val2_5_fu_395_p3;
reg   [15:0] p_Val2_5_reg_485;
wire    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state2;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg   [7:0] ap_phi_mux_i_0_phi_fu_130_p4;
wire    ap_block_pp0_stage0;
reg   [15:0] ap_phi_mux_storemerge1_phi_fu_153_p6;
wire   [15:0] ap_phi_reg_pp0_iter0_storemerge1_reg_148;
reg   [15:0] ap_phi_reg_pp0_iter1_storemerge1_reg_148;
reg   [15:0] ap_phi_reg_pp0_iter2_storemerge1_reg_148;
reg   [15:0] ap_phi_reg_pp0_iter3_storemerge1_reg_148;
reg   [15:0] ap_phi_reg_pp0_iter4_storemerge1_reg_148;
wire   [15:0] p_Val2_6_fu_408_p3;
wire   [63:0] zext_ln26_1_fu_237_p1;
wire   [0:0] icmp_ln23_fu_193_p2;
wire   [7:0] i_fu_187_p2;
wire   [14:0] tmp_9_fu_215_p3;
wire   [7:0] select_ln26_fu_199_p3;
wire   [15:0] zext_ln24_fu_223_p1;
wire   [15:0] zext_ln26_fu_227_p1;
wire   [15:0] add_ln26_fu_231_p2;
wire   [0:0] icmp_ln26_1_fu_272_p2;
wire   [0:0] icmp_ln26_fu_266_p2;
wire   [0:0] grp_fu_164_p2;
wire   [0:0] grp_fu_170_p2;
wire   [24:0] mantissa_V_fu_302_p4;
wire   [8:0] zext_ln339_fu_315_p1;
wire   [8:0] add_ln339_fu_318_p2;
wire   [7:0] sub_ln1311_fu_332_p2;
wire   [0:0] isNeg_fu_324_p3;
wire  signed [8:0] sext_ln1311_fu_337_p1;
wire  signed [8:0] ush_fu_341_p3;
wire  signed [31:0] sext_ln1311_1_fu_349_p1;
wire  signed [24:0] sext_ln1311_2_fu_353_p1;
wire   [62:0] zext_ln682_fu_311_p1;
wire   [62:0] zext_ln1287_fu_357_p1;
wire   [24:0] r_V_fu_361_p2;
wire   [0:0] tmp_fu_373_p3;
wire   [62:0] r_V_1_fu_367_p2;
wire   [15:0] zext_ln662_fu_381_p1;
wire   [15:0] tmp_s_fu_385_p4;
wire   [15:0] result_V_1_fu_403_p2;
wire    ap_block_pp0_stage0_00001;
wire    ap_CS_fsm_state7;
reg   [2:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
reg    ap_condition_175;

// power-on initialization
initial begin
#0 ap_CS_fsm = 3'd1;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
end

pic_detec_fcmp_32wdI #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
pic_detec_fcmp_32wdI_U47(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(img_in_q0),
    .din1(32'd1077936128),
    .ce(1'b1),
    .opcode(5'd3),
    .dout(grp_fu_164_p2)
);

pic_detec_fcmp_32wdI #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
pic_detec_fcmp_32wdI_U48(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(img_in_load_reg_444),
    .din1(32'd3225419776),
    .ce(1'b1),
    .opcode(5'd5),
    .dout(grp_fu_170_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_condition_pp0_exit_iter0_state2) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp0_exit_iter0_state2)) begin
                ap_enable_reg_pp0_iter1 <= (1'b1 ^ ap_condition_pp0_exit_iter0_state2);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter4 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        if (((icmp_ln22_reg_415_pp0_iter1_reg == 1'd0) & (1'd1 == and_ln26_fu_284_p2))) begin
            ap_phi_reg_pp0_iter3_storemerge1_reg_148 <= 16'd3;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter3_storemerge1_reg_148 <= ap_phi_reg_pp0_iter2_storemerge1_reg_148;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        if ((1'b1 == ap_condition_175)) begin
            ap_phi_reg_pp0_iter4_storemerge1_reg_148 <= 16'd65533;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter4_storemerge1_reg_148 <= ap_phi_reg_pp0_iter3_storemerge1_reg_148;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln22_reg_415 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        i_0_reg_126 <= select_ln26_1_reg_424;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        i_0_reg_126 <= 8'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln22_fu_175_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        indvar_flatten_reg_115 <= add_ln22_fu_181_p2;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        indvar_flatten_reg_115 <= 15'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln22_fu_175_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        j_0_reg_137 <= j_fu_243_p2;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        j_0_reg_137 <= 8'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln22_reg_415_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        and_ln26_reg_472 <= and_ln26_fu_284_p2;
        or_ln26_reg_467 <= or_ln26_fu_278_p2;
        p_Val2_s_reg_451 <= p_Val2_s_fu_249_p1;
        tmp_V_1_reg_462 <= tmp_V_1_fu_262_p1;
        tmp_V_reg_456 <= {{p_Val2_s_fu_249_p1[30:23]}};
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        and_ln26_reg_472_pp0_iter3_reg <= and_ln26_reg_472;
        icmp_ln22_reg_415_pp0_iter2_reg <= icmp_ln22_reg_415_pp0_iter1_reg;
        icmp_ln22_reg_415_pp0_iter3_reg <= icmp_ln22_reg_415_pp0_iter2_reg;
        img_out_addr_reg_434_pp0_iter2_reg <= img_out_addr_reg_434_pp0_iter1_reg;
        img_out_addr_reg_434_pp0_iter3_reg <= img_out_addr_reg_434_pp0_iter2_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'd0 == and_ln26_reg_472) & (icmp_ln22_reg_415_pp0_iter2_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        and_ln28_reg_476 <= and_ln28_fu_290_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_reg_pp0_iter1_storemerge1_reg_148 <= ap_phi_reg_pp0_iter0_storemerge1_reg_148;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        ap_phi_reg_pp0_iter2_storemerge1_reg_148 <= ap_phi_reg_pp0_iter1_storemerge1_reg_148;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln22_reg_415 <= icmp_ln22_fu_175_p2;
        icmp_ln22_reg_415_pp0_iter1_reg <= icmp_ln22_reg_415;
        img_out_addr_reg_434_pp0_iter1_reg <= img_out_addr_reg_434;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln22_reg_415 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        img_in_load_reg_444 <= img_in_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln22_fu_175_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        img_out_addr_reg_434 <= zext_ln26_1_fu_237_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'd0 == and_ln28_fu_290_p2) & (1'd0 == and_ln26_reg_472) & (icmp_ln22_reg_415_pp0_iter2_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        p_Result_s_reg_480 <= p_Val2_s_reg_451[32'd31];
        p_Val2_5_reg_485 <= p_Val2_5_fu_395_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln22_fu_175_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        select_ln26_1_reg_424 <= select_ln26_1_fu_207_p3;
    end
end

always @ (*) begin
    if ((icmp_ln22_fu_175_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state2 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state2 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state7) | ((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln22_reg_415 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        ap_phi_mux_i_0_phi_fu_130_p4 = select_ln26_1_reg_424;
    end else begin
        ap_phi_mux_i_0_phi_fu_130_p4 = i_0_reg_126;
    end
end

always @ (*) begin
    if (((1'd0 == and_ln28_reg_476) & (1'd0 == and_ln26_reg_472_pp0_iter3_reg) & (icmp_ln22_reg_415_pp0_iter3_reg == 1'd0))) begin
        ap_phi_mux_storemerge1_phi_fu_153_p6 = p_Val2_6_fu_408_p3;
    end else begin
        ap_phi_mux_storemerge1_phi_fu_153_p6 = ap_phi_reg_pp0_iter4_storemerge1_reg_148;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        img_in_ce0 = 1'b1;
    end else begin
        img_in_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        img_out_ce0 = 1'b1;
    end else begin
        img_out_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln22_reg_415_pp0_iter3_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        img_out_we0 = 1'b1;
    end else begin
        img_out_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((icmp_ln22_fu_175_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone)) & ~((ap_enable_reg_pp0_iter4 == 1'b1) & (ap_enable_reg_pp0_iter3 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone)))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((((icmp_ln22_fu_175_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone)) | ((ap_enable_reg_pp0_iter4 == 1'b1) & (ap_enable_reg_pp0_iter3 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone)))) begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln22_fu_181_p2 = (indvar_flatten_reg_115 + 15'd1);

assign add_ln26_fu_231_p2 = (zext_ln24_fu_223_p1 + zext_ln26_fu_227_p1);

assign add_ln339_fu_318_p2 = ($signed(zext_ln339_fu_315_p1) + $signed(9'd385));

assign and_ln26_fu_284_p2 = (or_ln26_fu_278_p2 & grp_fu_164_p2);

assign and_ln28_fu_290_p2 = (or_ln26_reg_467 & grp_fu_170_p2);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd2];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_condition_175 = ((1'd0 == and_ln26_reg_472) & (icmp_ln22_reg_415_pp0_iter2_reg == 1'd0) & (1'd1 == and_ln28_fu_290_p2));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_phi_reg_pp0_iter0_storemerge1_reg_148 = 'bx;

assign i_fu_187_p2 = (8'd1 + ap_phi_mux_i_0_phi_fu_130_p4);

assign icmp_ln22_fu_175_p2 = ((indvar_flatten_reg_115 == 15'd16384) ? 1'b1 : 1'b0);

assign icmp_ln23_fu_193_p2 = ((j_0_reg_137 == 8'd128) ? 1'b1 : 1'b0);

assign icmp_ln26_1_fu_272_p2 = ((tmp_V_1_fu_262_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln26_fu_266_p2 = ((tmp_V_fu_252_p4 != 8'd255) ? 1'b1 : 1'b0);

assign img_in_address0 = zext_ln26_1_fu_237_p1;

assign img_out_address0 = img_out_addr_reg_434_pp0_iter3_reg;

assign img_out_d0 = ap_phi_mux_storemerge1_phi_fu_153_p6;

assign isNeg_fu_324_p3 = add_ln339_fu_318_p2[32'd8];

assign j_fu_243_p2 = (select_ln26_fu_199_p3 + 8'd1);

assign mantissa_V_fu_302_p4 = {{{{1'd1}, {tmp_V_1_reg_462}}}, {1'd0}};

assign or_ln26_fu_278_p2 = (icmp_ln26_fu_266_p2 | icmp_ln26_1_fu_272_p2);

assign p_Val2_5_fu_395_p3 = ((isNeg_fu_324_p3[0:0] === 1'b1) ? zext_ln662_fu_381_p1 : tmp_s_fu_385_p4);

assign p_Val2_6_fu_408_p3 = ((p_Result_s_reg_480[0:0] === 1'b1) ? result_V_1_fu_403_p2 : p_Val2_5_reg_485);

assign p_Val2_s_fu_249_p1 = img_in_load_reg_444;

assign r_V_1_fu_367_p2 = zext_ln682_fu_311_p1 << zext_ln1287_fu_357_p1;

assign r_V_fu_361_p2 = mantissa_V_fu_302_p4 >> sext_ln1311_2_fu_353_p1;

assign result_V_1_fu_403_p2 = (16'd0 - p_Val2_5_reg_485);

assign select_ln26_1_fu_207_p3 = ((icmp_ln23_fu_193_p2[0:0] === 1'b1) ? i_fu_187_p2 : ap_phi_mux_i_0_phi_fu_130_p4);

assign select_ln26_fu_199_p3 = ((icmp_ln23_fu_193_p2[0:0] === 1'b1) ? 8'd0 : j_0_reg_137);

assign sext_ln1311_1_fu_349_p1 = ush_fu_341_p3;

assign sext_ln1311_2_fu_353_p1 = ush_fu_341_p3;

assign sext_ln1311_fu_337_p1 = $signed(sub_ln1311_fu_332_p2);

assign sub_ln1311_fu_332_p2 = (8'd127 - tmp_V_reg_456);

assign tmp_9_fu_215_p3 = {{select_ln26_1_fu_207_p3}, {7'd0}};

assign tmp_V_1_fu_262_p1 = p_Val2_s_fu_249_p1[22:0];

assign tmp_V_fu_252_p4 = {{p_Val2_s_fu_249_p1[30:23]}};

assign tmp_fu_373_p3 = r_V_fu_361_p2[32'd24];

assign tmp_s_fu_385_p4 = {{r_V_1_fu_367_p2[39:24]}};

assign ush_fu_341_p3 = ((isNeg_fu_324_p3[0:0] === 1'b1) ? sext_ln1311_fu_337_p1 : add_ln339_fu_318_p2);

assign zext_ln1287_fu_357_p1 = $unsigned(sext_ln1311_1_fu_349_p1);

assign zext_ln24_fu_223_p1 = tmp_9_fu_215_p3;

assign zext_ln26_1_fu_237_p1 = add_ln26_fu_231_p2;

assign zext_ln26_fu_227_p1 = select_ln26_fu_199_p3;

assign zext_ln339_fu_315_p1 = tmp_V_reg_456;

assign zext_ln662_fu_381_p1 = tmp_fu_373_p3;

assign zext_ln682_fu_311_p1 = mantissa_V_fu_302_p4;

endmodule //tv

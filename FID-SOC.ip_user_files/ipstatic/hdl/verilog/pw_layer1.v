// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module pw_layer1 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        in_stream_V_V_dout,
        in_stream_V_V_empty_n,
        in_stream_V_V_read,
        out_stream_V_V_din,
        out_stream_V_V_full_n,
        out_stream_V_V_write,
        pw_weights_scale,
        dw12pw1_scale_V_dout,
        dw12pw1_scale_V_empty_n,
        dw12pw1_scale_V_read,
        pw12gru_scale_V_din,
        pw12gru_scale_V_full_n,
        pw12gru_scale_V_write,
        tmp_scalepw,
        pw_weight1_V_address0,
        pw_weight1_V_ce0,
        pw_weight1_V_q0,
        bn_bias1_V_address0,
        bn_bias1_V_ce0,
        bn_bias1_V_q0
);

parameter    ap_ST_fsm_state1 = 54'd1;
parameter    ap_ST_fsm_state2 = 54'd2;
parameter    ap_ST_fsm_state3 = 54'd4;
parameter    ap_ST_fsm_state4 = 54'd8;
parameter    ap_ST_fsm_state5 = 54'd16;
parameter    ap_ST_fsm_state6 = 54'd32;
parameter    ap_ST_fsm_state7 = 54'd64;
parameter    ap_ST_fsm_pp0_stage0 = 54'd128;
parameter    ap_ST_fsm_state10 = 54'd256;
parameter    ap_ST_fsm_pp1_stage0 = 54'd512;
parameter    ap_ST_fsm_state13 = 54'd1024;
parameter    ap_ST_fsm_pp2_stage0 = 54'd2048;
parameter    ap_ST_fsm_state18 = 54'd4096;
parameter    ap_ST_fsm_pp3_stage0 = 54'd8192;
parameter    ap_ST_fsm_state36 = 54'd16384;
parameter    ap_ST_fsm_state37 = 54'd32768;
parameter    ap_ST_fsm_state38 = 54'd65536;
parameter    ap_ST_fsm_state39 = 54'd131072;
parameter    ap_ST_fsm_state40 = 54'd262144;
parameter    ap_ST_fsm_state41 = 54'd524288;
parameter    ap_ST_fsm_state42 = 54'd1048576;
parameter    ap_ST_fsm_state43 = 54'd2097152;
parameter    ap_ST_fsm_pp4_stage0 = 54'd4194304;
parameter    ap_ST_fsm_state50 = 54'd8388608;
parameter    ap_ST_fsm_state51 = 54'd16777216;
parameter    ap_ST_fsm_state52 = 54'd33554432;
parameter    ap_ST_fsm_state53 = 54'd67108864;
parameter    ap_ST_fsm_state54 = 54'd134217728;
parameter    ap_ST_fsm_state55 = 54'd268435456;
parameter    ap_ST_fsm_state56 = 54'd536870912;
parameter    ap_ST_fsm_state57 = 54'd1073741824;
parameter    ap_ST_fsm_state58 = 54'd2147483648;
parameter    ap_ST_fsm_state59 = 54'd4294967296;
parameter    ap_ST_fsm_state60 = 54'd8589934592;
parameter    ap_ST_fsm_state61 = 54'd17179869184;
parameter    ap_ST_fsm_state62 = 54'd34359738368;
parameter    ap_ST_fsm_state63 = 54'd68719476736;
parameter    ap_ST_fsm_state64 = 54'd137438953472;
parameter    ap_ST_fsm_state65 = 54'd274877906944;
parameter    ap_ST_fsm_state66 = 54'd549755813888;
parameter    ap_ST_fsm_state67 = 54'd1099511627776;
parameter    ap_ST_fsm_state68 = 54'd2199023255552;
parameter    ap_ST_fsm_state69 = 54'd4398046511104;
parameter    ap_ST_fsm_state70 = 54'd8796093022208;
parameter    ap_ST_fsm_state71 = 54'd17592186044416;
parameter    ap_ST_fsm_state72 = 54'd35184372088832;
parameter    ap_ST_fsm_state73 = 54'd70368744177664;
parameter    ap_ST_fsm_state74 = 54'd140737488355328;
parameter    ap_ST_fsm_state75 = 54'd281474976710656;
parameter    ap_ST_fsm_state76 = 54'd562949953421312;
parameter    ap_ST_fsm_state77 = 54'd1125899906842624;
parameter    ap_ST_fsm_state78 = 54'd2251799813685248;
parameter    ap_ST_fsm_pp5_stage0 = 54'd4503599627370496;
parameter    ap_ST_fsm_state94 = 54'd9007199254740992;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [7:0] in_stream_V_V_dout;
input   in_stream_V_V_empty_n;
output   in_stream_V_V_read;
output  [7:0] out_stream_V_V_din;
input   out_stream_V_V_full_n;
output   out_stream_V_V_write;
input  [31:0] pw_weights_scale;
input  [31:0] dw12pw1_scale_V_dout;
input   dw12pw1_scale_V_empty_n;
output   dw12pw1_scale_V_read;
output  [31:0] pw12gru_scale_V_din;
input   pw12gru_scale_V_full_n;
output   pw12gru_scale_V_write;
input  [31:0] tmp_scalepw;
output  [3:0] pw_weight1_V_address0;
output   pw_weight1_V_ce0;
input  [7:0] pw_weight1_V_q0;
output  [3:0] bn_bias1_V_address0;
output   bn_bias1_V_ce0;
input  [7:0] bn_bias1_V_q0;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg in_stream_V_V_read;
reg out_stream_V_V_write;
reg dw12pw1_scale_V_read;
reg pw12gru_scale_V_write;
reg pw_weight1_V_ce0;
reg bn_bias1_V_ce0;

(* fsm_encoding = "none" *) reg   [53:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire   [5:0] mask_table2_address0;
reg    mask_table2_ce0;
wire   [51:0] mask_table2_q0;
wire   [5:0] one_half_table3_address0;
reg    one_half_table3_ce0;
wire   [52:0] one_half_table3_q0;
reg    in_stream_V_V_blk_n;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter1;
wire    ap_block_pp0_stage0;
reg   [0:0] icmp_ln47_reg_2119;
reg    out_stream_V_V_blk_n;
reg    ap_enable_reg_pp5_iter14;
wire    ap_block_pp5_stage0;
reg   [0:0] icmp_ln97_reg_2385;
reg   [0:0] icmp_ln97_reg_2385_pp5_iter13_reg;
reg    dw12pw1_scale_V_blk_n;
reg    pw12gru_scale_V_blk_n;
wire    ap_CS_fsm_state78;
reg   [3:0] w_0_reg_470;
reg   [6:0] indvar_flatten_reg_482;
reg   [3:0] iw_0_reg_493;
reg   [3:0] om_0_reg_504;
reg   [6:0] indvar_flatten12_reg_515;
reg   [3:0] iw4_0_reg_526;
reg   [3:0] om5_0_reg_537;
reg   [6:0] indvar_flatten24_reg_548;
reg   [3:0] iw6_0_reg_559;
reg   [3:0] om7_0_reg_570;
reg   [6:0] indvar_flatten36_reg_581;
reg   [3:0] iw8_0_reg_592;
reg   [31:0] tmp_min_1_reg_603;
reg   [31:0] tmp_max_1_reg_615;
reg   [3:0] om9_0_reg_627;
reg   [6:0] indvar_flatten48_reg_638;
reg   [3:0] iw10_0_reg_649;
reg   [3:0] om11_0_reg_660;
wire   [31:0] grp_fu_675_p2;
reg   [31:0] reg_721;
wire    ap_CS_fsm_state5;
wire    ap_block_state79_pp5_stage0_iter0;
wire    ap_block_state80_pp5_stage0_iter1;
wire    ap_block_state81_pp5_stage0_iter2;
wire    ap_block_state82_pp5_stage0_iter3;
wire    ap_block_state83_pp5_stage0_iter4;
wire    ap_block_state84_pp5_stage0_iter5;
wire    ap_block_state85_pp5_stage0_iter6;
wire    ap_block_state86_pp5_stage0_iter7;
wire    ap_block_state87_pp5_stage0_iter8;
wire    ap_block_state88_pp5_stage0_iter9;
wire    ap_block_state89_pp5_stage0_iter10;
wire    ap_block_state90_pp5_stage0_iter11;
wire    ap_block_state91_pp5_stage0_iter12;
wire    ap_block_state92_pp5_stage0_iter13;
reg    ap_block_state93_pp5_stage0_iter14;
reg    ap_block_pp5_stage0_11001;
wire    ap_CS_fsm_state39;
wire    ap_CS_fsm_state43;
wire    ap_CS_fsm_state73;
wire    ap_CS_fsm_state77;
reg    ap_enable_reg_pp5_iter6;
reg   [0:0] icmp_ln97_reg_2385_pp5_iter5_reg;
wire   [31:0] tmp_y_V_q0;
reg   [31:0] reg_730;
reg    ap_enable_reg_pp2_iter2;
wire    ap_block_state14_pp2_stage0_iter0;
wire    ap_block_state15_pp2_stage0_iter1;
wire    ap_block_state16_pp2_stage0_iter2;
wire    ap_block_state17_pp2_stage0_iter3;
wire    ap_block_pp2_stage0_11001;
reg   [0:0] icmp_ln63_reg_2154;
reg   [0:0] icmp_ln63_reg_2154_pp2_iter1_reg;
wire    ap_block_state19_pp3_stage0_iter0;
wire    ap_block_state20_pp3_stage0_iter1;
wire    ap_block_state21_pp3_stage0_iter2;
wire    ap_block_state22_pp3_stage0_iter3;
wire    ap_block_state23_pp3_stage0_iter4;
wire    ap_block_state24_pp3_stage0_iter5;
wire    ap_block_state25_pp3_stage0_iter6;
wire    ap_block_state26_pp3_stage0_iter7;
wire    ap_block_state27_pp3_stage0_iter8;
wire    ap_block_state28_pp3_stage0_iter9;
wire    ap_block_state29_pp3_stage0_iter10;
wire    ap_block_state30_pp3_stage0_iter11;
wire    ap_block_state31_pp3_stage0_iter12;
wire    ap_block_state32_pp3_stage0_iter13;
wire    ap_block_state33_pp3_stage0_iter14;
wire    ap_block_state34_pp3_stage0_iter15;
wire    ap_block_state35_pp3_stage0_iter16;
wire    ap_block_pp3_stage0_11001;
wire   [31:0] tmp_y_V_q1;
reg    ap_enable_reg_pp3_iter4;
reg   [0:0] icmp_ln70_reg_2208;
reg   [0:0] icmp_ln70_reg_2208_pp3_iter3_reg;
wire   [31:0] y_q0;
reg   [31:0] reg_736;
reg    ap_enable_reg_pp4_iter2;
wire    ap_block_state44_pp4_stage0_iter0;
wire    ap_block_state45_pp4_stage0_iter1;
wire    ap_block_state46_pp4_stage0_iter2;
wire    ap_block_state47_pp4_stage0_iter3;
wire    ap_block_state48_pp4_stage0_iter4;
wire    ap_block_state49_pp4_stage0_iter5;
wire    ap_block_pp4_stage0_11001;
reg   [0:0] icmp_ln77_reg_2284;
reg   [0:0] icmp_ln77_reg_2284_pp4_iter1_reg;
wire   [31:0] y_q1;
reg    ap_enable_reg_pp5_iter2;
reg   [0:0] icmp_ln97_reg_2385_pp5_iter1_reg;
reg   [31:0] tmp_40_reg_2080;
reg    ap_block_state1;
wire    ap_CS_fsm_state2;
wire   [2:0] add_ln42_fu_744_p2;
reg   [2:0] add_ln42_reg_2096;
wire    ap_CS_fsm_state6;
wire   [7:0] sub_ln42_fu_774_p2;
reg   [7:0] sub_ln42_reg_2101;
wire   [3:0] add_ln42_1_fu_780_p2;
wire    ap_CS_fsm_state7;
wire   [0:0] icmp_ln42_fu_800_p2;
wire   [0:0] icmp_ln42_1_fu_806_p2;
wire   [0:0] icmp_ln47_fu_812_p2;
wire    ap_block_state8_pp0_stage0_iter0;
reg    ap_block_state9_pp0_stage0_iter1;
reg    ap_block_pp0_stage0_11001;
wire   [3:0] w_fu_818_p2;
reg   [3:0] w_reg_2123;
reg    ap_enable_reg_pp0_iter0;
wire   [0:0] icmp_ln54_fu_829_p2;
reg   [0:0] icmp_ln54_reg_2128;
wire    ap_CS_fsm_pp1_stage0;
wire    ap_block_state11_pp1_stage0_iter0;
wire    ap_block_state12_pp1_stage0_iter1;
wire    ap_block_pp1_stage0_11001;
wire   [6:0] add_ln54_fu_835_p2;
reg    ap_enable_reg_pp1_iter0;
wire   [3:0] select_ln58_fu_853_p3;
reg   [3:0] select_ln58_reg_2137;
wire   [3:0] select_ln58_1_fu_861_p3;
reg   [3:0] select_ln58_1_reg_2142;
wire   [3:0] om_fu_869_p2;
wire   [0:0] icmp_ln63_fu_914_p2;
wire    ap_CS_fsm_pp2_stage0;
reg   [0:0] icmp_ln63_reg_2154_pp2_iter2_reg;
wire   [6:0] add_ln63_fu_920_p2;
reg    ap_enable_reg_pp2_iter0;
wire   [3:0] select_ln66_fu_938_p3;
reg   [3:0] select_ln66_reg_2163;
wire   [3:0] select_ln66_2_fu_946_p3;
reg   [3:0] select_ln66_2_reg_2169;
wire   [3:0] om_1_fu_954_p2;
reg   [6:0] tmp_y_V_addr_1_reg_2187;
reg   [6:0] tmp_y_V_addr_1_reg_2187_pp2_iter2_reg;
wire   [7:0] x_V_3_1_q0;
reg  signed [7:0] x_V_3_load_reg_2198;
reg  signed [7:0] pw_weight1_V_load_reg_2203;
wire   [0:0] icmp_ln70_fu_1012_p2;
wire    ap_CS_fsm_pp3_stage0;
reg   [0:0] icmp_ln70_reg_2208_pp3_iter1_reg;
reg   [0:0] icmp_ln70_reg_2208_pp3_iter2_reg;
reg   [0:0] icmp_ln70_reg_2208_pp3_iter4_reg;
reg   [0:0] icmp_ln70_reg_2208_pp3_iter5_reg;
reg   [0:0] icmp_ln70_reg_2208_pp3_iter6_reg;
reg   [0:0] icmp_ln70_reg_2208_pp3_iter7_reg;
reg   [0:0] icmp_ln70_reg_2208_pp3_iter8_reg;
reg   [0:0] icmp_ln70_reg_2208_pp3_iter9_reg;
reg   [0:0] icmp_ln70_reg_2208_pp3_iter10_reg;
reg   [0:0] icmp_ln70_reg_2208_pp3_iter11_reg;
reg   [0:0] icmp_ln70_reg_2208_pp3_iter12_reg;
reg   [0:0] icmp_ln70_reg_2208_pp3_iter13_reg;
reg   [0:0] icmp_ln70_reg_2208_pp3_iter14_reg;
reg   [0:0] icmp_ln70_reg_2208_pp3_iter15_reg;
wire   [6:0] add_ln70_fu_1018_p2;
reg    ap_enable_reg_pp3_iter0;
wire   [3:0] select_ln73_fu_1036_p3;
reg   [3:0] select_ln73_reg_2217;
reg   [3:0] select_ln73_reg_2217_pp3_iter1_reg;
reg   [3:0] select_ln73_reg_2217_pp3_iter2_reg;
wire   [3:0] select_ln73_1_fu_1044_p3;
reg   [3:0] select_ln73_1_reg_2222;
reg   [3:0] select_ln73_1_reg_2222_pp3_iter1_reg;
reg   [3:0] select_ln73_1_reg_2222_pp3_iter2_reg;
wire   [3:0] om_2_fu_1057_p2;
wire  signed [63:0] sext_ln544_fu_1101_p1;
reg  signed [63:0] sext_ln544_reg_2244;
reg  signed [63:0] sext_ln544_reg_2244_pp3_iter4_reg;
reg  signed [63:0] sext_ln544_reg_2244_pp3_iter5_reg;
reg  signed [63:0] sext_ln544_reg_2244_pp3_iter6_reg;
reg  signed [63:0] sext_ln544_reg_2244_pp3_iter7_reg;
reg  signed [63:0] sext_ln544_reg_2244_pp3_iter8_reg;
reg  signed [63:0] sext_ln544_reg_2244_pp3_iter9_reg;
reg  signed [63:0] sext_ln544_reg_2244_pp3_iter10_reg;
reg  signed [63:0] sext_ln544_reg_2244_pp3_iter11_reg;
reg  signed [63:0] sext_ln544_reg_2244_pp3_iter12_reg;
reg  signed [63:0] sext_ln544_reg_2244_pp3_iter13_reg;
reg  signed [63:0] sext_ln544_reg_2244_pp3_iter14_reg;
reg  signed [63:0] sext_ln544_reg_2244_pp3_iter15_reg;
wire   [31:0] grp_fu_686_p1;
reg   [31:0] tmp_8_reg_2254;
wire   [31:0] grp_fu_689_p1;
reg   [31:0] tmp_7_reg_2259;
reg   [31:0] tmp_9_reg_2264;
reg    ap_enable_reg_pp3_iter10;
wire   [31:0] grp_fu_671_p2;
reg   [31:0] tmp_1_reg_2269;
wire   [31:0] bitcast_ln89_2_fu_1106_p1;
reg   [31:0] bitcast_ln89_2_reg_2274;
wire   [0:0] icmp_ln89_5_fu_1114_p2;
reg   [0:0] icmp_ln89_5_reg_2279;
wire   [0:0] icmp_ln77_fu_1120_p2;
wire    ap_CS_fsm_pp4_stage0;
reg   [0:0] icmp_ln77_reg_2284_pp4_iter2_reg;
reg   [0:0] icmp_ln77_reg_2284_pp4_iter3_reg;
reg   [0:0] icmp_ln77_reg_2284_pp4_iter4_reg;
wire   [6:0] add_ln77_fu_1126_p2;
reg    ap_enable_reg_pp4_iter0;
wire   [3:0] select_ln80_fu_1144_p3;
reg   [3:0] select_ln80_reg_2293;
wire   [3:0] select_ln80_1_fu_1152_p3;
reg   [3:0] select_ln80_1_reg_2298;
wire   [3:0] om_3_fu_1160_p2;
reg   [6:0] y_addr_3_reg_2310;
reg   [6:0] y_addr_3_reg_2310_pp4_iter2_reg;
reg   [6:0] y_addr_3_reg_2310_pp4_iter3_reg;
wire   [31:0] tmp_max_fu_1298_p3;
reg   [31:0] tmp_max_reg_2316;
reg   [31:0] tmp_max_reg_2316_pp4_iter4_reg;
wire   [0:0] or_ln81_fu_1353_p2;
reg   [0:0] or_ln81_reg_2326;
wire   [0:0] icmp_ln81_2_fu_1359_p2;
reg   [0:0] icmp_ln81_2_reg_2332;
wire   [0:0] icmp_ln81_3_fu_1365_p2;
reg   [0:0] icmp_ln81_3_reg_2337;
wire   [0:0] icmp_ln83_fu_1389_p2;
reg   [0:0] icmp_ln83_reg_2342;
wire   [0:0] icmp_ln83_1_fu_1395_p2;
reg   [0:0] icmp_ln83_1_reg_2347;
wire   [31:0] tmp_min_3_fu_1416_p3;
reg    ap_enable_reg_pp4_iter5;
wire   [31:0] tmp_min_5_fu_1438_p3;
wire   [0:0] grp_fu_698_p2;
reg   [0:0] tmp_16_reg_2362;
wire    ap_CS_fsm_state51;
wire   [31:0] tmp_min_2_fu_1496_p3;
reg   [31:0] tmp_min_2_reg_2367;
wire    ap_CS_fsm_state52;
wire   [31:0] select_ln89_fu_1588_p3;
reg   [31:0] select_ln89_reg_2374;
wire    ap_CS_fsm_state53;
wire   [31:0] grp_fu_681_p2;
reg   [31:0] shrink_reg_2379;
wire    ap_CS_fsm_state69;
wire   [0:0] icmp_ln97_fu_1595_p2;
wire    ap_CS_fsm_pp5_stage0;
reg   [0:0] icmp_ln97_reg_2385_pp5_iter2_reg;
reg   [0:0] icmp_ln97_reg_2385_pp5_iter3_reg;
reg   [0:0] icmp_ln97_reg_2385_pp5_iter4_reg;
reg   [0:0] icmp_ln97_reg_2385_pp5_iter6_reg;
reg   [0:0] icmp_ln97_reg_2385_pp5_iter7_reg;
reg   [0:0] icmp_ln97_reg_2385_pp5_iter8_reg;
reg   [0:0] icmp_ln97_reg_2385_pp5_iter9_reg;
reg   [0:0] icmp_ln97_reg_2385_pp5_iter10_reg;
reg   [0:0] icmp_ln97_reg_2385_pp5_iter11_reg;
reg   [0:0] icmp_ln97_reg_2385_pp5_iter12_reg;
wire   [6:0] add_ln97_fu_1601_p2;
reg    ap_enable_reg_pp5_iter0;
wire   [3:0] select_ln100_fu_1619_p3;
reg   [3:0] select_ln100_reg_2394;
wire   [3:0] select_ln100_1_fu_1627_p3;
reg   [3:0] select_ln100_1_reg_2399;
wire   [3:0] om_4_fu_1635_p2;
reg   [0:0] p_Result_15_reg_2416;
reg   [0:0] p_Result_15_reg_2416_pp5_iter8_reg;
wire   [63:0] grp_fu_695_p1;
reg   [63:0] x_assign_reg_2422;
reg   [63:0] x_assign_reg_2422_pp5_iter9_reg;
wire   [0:0] icmp_ln849_fu_1705_p2;
reg   [0:0] icmp_ln849_reg_2427;
reg   [0:0] icmp_ln849_reg_2427_pp5_iter9_reg;
wire   [0:0] icmp_ln849_1_fu_1711_p2;
reg   [0:0] icmp_ln849_1_reg_2433;
reg   [0:0] icmp_ln849_1_reg_2433_pp5_iter9_reg;
wire   [62:0] trunc_ln368_fu_1733_p1;
reg   [62:0] trunc_ln368_reg_2448;
wire   [63:0] bitcast_ln849_fu_1801_p1;
reg   [63:0] bitcast_ln849_reg_2453;
wire   [31:0] grp_fu_692_p1;
reg   [31:0] outprepare_reg_2463;
wire   [31:0] reg_V_fu_1822_p1;
reg   [31:0] reg_V_reg_2468;
reg   [0:0] p_Result_19_reg_2473;
wire   [7:0] trunc_ln283_fu_1855_p1;
reg   [7:0] trunc_ln283_reg_2478;
wire   [0:0] icmp_ln278_fu_1867_p2;
reg   [0:0] icmp_ln278_reg_2484;
wire   [0:0] icmp_ln282_fu_1883_p2;
reg   [0:0] icmp_ln282_reg_2490;
wire   [0:0] icmp_ln285_fu_1895_p2;
reg   [0:0] icmp_ln285_reg_2495;
wire  signed [8:0] sh_amt_2_fu_1901_p2;
reg  signed [8:0] sh_amt_2_reg_2500;
wire   [0:0] and_ln284_fu_1945_p2;
reg   [0:0] and_ln284_reg_2505;
wire   [7:0] select_ln285_fu_1957_p3;
reg   [7:0] select_ln285_reg_2510;
wire   [0:0] and_ln295_fu_1977_p2;
reg   [0:0] and_ln295_reg_2515;
wire   [7:0] outprepare_int_V_fu_2064_p3;
reg   [7:0] outprepare_int_V_reg_2520;
reg    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state8;
wire    ap_CS_fsm_state10;
wire    ap_block_pp1_stage0_subdone;
reg    ap_condition_pp1_exit_iter0_state11;
reg    ap_enable_reg_pp1_iter1;
wire    ap_CS_fsm_state13;
wire    ap_block_pp2_stage0_subdone;
reg    ap_condition_pp2_exit_iter0_state14;
reg    ap_enable_reg_pp2_iter1;
reg    ap_enable_reg_pp2_iter3;
wire    ap_CS_fsm_state18;
wire    ap_block_pp3_stage0_subdone;
reg    ap_condition_pp3_exit_iter0_state19;
reg    ap_enable_reg_pp3_iter1;
reg    ap_enable_reg_pp3_iter2;
reg    ap_enable_reg_pp3_iter3;
reg    ap_enable_reg_pp3_iter5;
reg    ap_enable_reg_pp3_iter6;
reg    ap_enable_reg_pp3_iter7;
reg    ap_enable_reg_pp3_iter8;
reg    ap_enable_reg_pp3_iter9;
reg    ap_enable_reg_pp3_iter11;
reg    ap_enable_reg_pp3_iter12;
reg    ap_enable_reg_pp3_iter13;
reg    ap_enable_reg_pp3_iter14;
reg    ap_enable_reg_pp3_iter15;
reg    ap_enable_reg_pp3_iter16;
wire    ap_block_pp4_stage0_subdone;
reg    ap_condition_pp4_exit_iter0_state44;
reg    ap_enable_reg_pp4_iter1;
reg    ap_enable_reg_pp4_iter3;
reg    ap_enable_reg_pp4_iter4;
reg    ap_block_pp5_stage0_subdone;
reg    ap_condition_pp5_exit_iter0_state79;
reg    ap_enable_reg_pp5_iter1;
reg    ap_enable_reg_pp5_iter3;
reg    ap_enable_reg_pp5_iter4;
reg    ap_enable_reg_pp5_iter5;
reg    ap_enable_reg_pp5_iter7;
reg    ap_enable_reg_pp5_iter8;
reg    ap_enable_reg_pp5_iter9;
reg    ap_enable_reg_pp5_iter10;
reg    ap_enable_reg_pp5_iter11;
reg    ap_enable_reg_pp5_iter12;
reg    ap_enable_reg_pp5_iter13;
reg   [6:0] tmp_y_V_address0;
reg    tmp_y_V_ce0;
reg    tmp_y_V_we0;
reg   [6:0] tmp_y_V_address1;
reg    tmp_y_V_ce1;
reg    tmp_y_V_we1;
reg   [2:0] x_V_3_1_address0;
reg    x_V_3_1_ce0;
reg    x_V_3_1_we0;
reg   [7:0] x_V_3_1_d0;
reg   [6:0] y_address0;
reg    y_ce0;
reg    y_we0;
reg   [31:0] y_d0;
reg   [6:0] y_address1;
reg    y_ce1;
reg    y_we1;
reg   [2:0] phi_ln42_reg_447;
reg   [3:0] phi_ln42_1_reg_459;
reg   [3:0] ap_phi_mux_w_0_phi_fu_474_p4;
reg   [3:0] ap_phi_mux_iw_0_phi_fu_497_p4;
wire    ap_block_pp1_stage0;
reg   [3:0] ap_phi_mux_iw4_0_phi_fu_530_p4;
wire    ap_block_pp2_stage0;
reg   [3:0] ap_phi_mux_iw6_0_phi_fu_563_p4;
wire    ap_block_pp3_stage0;
reg   [3:0] ap_phi_mux_iw8_0_phi_fu_596_p4;
wire    ap_block_pp4_stage0;
reg   [31:0] ap_phi_mux_tmp_min_1_phi_fu_607_p4;
reg   [31:0] ap_phi_mux_tmp_max_1_phi_fu_619_p4;
reg   [3:0] ap_phi_mux_iw10_0_phi_fu_653_p4;
wire  signed [63:0] sext_ln42_fu_795_p1;
wire   [63:0] zext_ln51_fu_824_p1;
wire  signed [63:0] sext_ln180_fu_908_p1;
wire   [63:0] zext_ln66_fu_960_p1;
wire   [63:0] zext_ln215_2_fu_1001_p1;
wire   [63:0] zext_ln66_1_fu_988_p1;
wire   [63:0] zext_ln73_fu_1052_p1;
wire  signed [63:0] sext_ln80_fu_1199_p1;
wire  signed [63:0] sext_ln100_fu_1674_p1;
wire   [63:0] zext_ln498_fu_1727_p1;
reg    ap_block_pp5_stage0_01001;
wire   [31:0] grp_fu_2071_p3;
reg   [31:0] grp_fu_675_p0;
reg   [31:0] grp_fu_675_p1;
wire    ap_CS_fsm_state36;
wire    ap_CS_fsm_state40;
wire    ap_CS_fsm_state70;
wire    ap_CS_fsm_state74;
wire    ap_CS_fsm_state54;
wire  signed [31:0] grp_fu_686_p0;
wire   [63:0] grp_fu_692_p0;
reg   [31:0] grp_fu_698_p0;
reg   [31:0] grp_fu_698_p1;
wire    ap_CS_fsm_state50;
wire   [6:0] tmp_48_fu_750_p3;
wire   [4:0] tmp_49_fu_762_p3;
wire   [7:0] zext_ln42_fu_758_p1;
wire   [7:0] zext_ln42_1_fu_770_p1;
wire   [7:0] zext_ln42_2_fu_786_p1;
wire   [7:0] add_ln42_2_fu_790_p2;
wire   [0:0] icmp_ln55_fu_847_p2;
wire   [3:0] iw_fu_841_p2;
wire   [5:0] tmp_51_fu_882_p3;
wire   [7:0] tmp_50_fu_875_p3;
wire   [7:0] zext_ln180_fu_889_p1;
wire   [7:0] sub_ln180_fu_893_p2;
wire   [7:0] zext_ln180_33_fu_899_p1;
wire   [7:0] add_ln180_fu_902_p2;
wire   [0:0] icmp_ln64_fu_932_p2;
wire   [3:0] iw_1_fu_926_p2;
wire   [5:0] tmp_fu_971_p3;
wire   [7:0] p_shl_cast_fu_964_p3;
wire   [7:0] zext_ln215_fu_978_p1;
wire   [7:0] zext_ln215_1_fu_992_p1;
wire   [7:0] sub_ln215_fu_982_p2;
wire   [7:0] add_ln215_fu_995_p2;
wire   [0:0] icmp_ln71_fu_1030_p2;
wire   [3:0] iw_2_fu_1024_p2;
wire   [5:0] tmp_53_fu_1075_p3;
wire   [7:0] tmp_52_fu_1068_p3;
wire   [7:0] zext_ln544_fu_1082_p1;
wire   [7:0] sub_ln544_fu_1086_p2;
wire   [7:0] zext_ln544_1_fu_1092_p1;
wire   [7:0] add_ln544_fu_1095_p2;
wire   [22:0] trunc_ln89_fu_1110_p1;
wire   [0:0] icmp_ln78_fu_1138_p2;
wire   [3:0] iw_3_fu_1132_p2;
wire   [5:0] tmp_55_fu_1173_p3;
wire   [7:0] tmp_54_fu_1166_p3;
wire   [7:0] zext_ln80_fu_1180_p1;
wire   [7:0] zext_ln80_1_fu_1190_p1;
wire   [7:0] sub_ln80_fu_1184_p2;
wire   [7:0] add_ln80_fu_1193_p2;
wire   [31:0] bitcast_ln87_1_fu_1204_p1;
wire   [7:0] tmp_24_fu_1208_p4;
wire   [22:0] trunc_ln87_1_fu_1218_p1;
wire   [0:0] icmp_ln87_3_fu_1228_p2;
wire   [0:0] icmp_ln87_2_fu_1222_p2;
wire   [0:0] or_ln87_1_fu_1234_p2;
wire   [7:0] tmp_26_fu_1246_p4;
wire   [0:0] icmp_ln89_4_fu_1255_p2;
wire   [0:0] or_ln89_2_fu_1261_p2;
wire   [0:0] and_ln89_2_fu_1266_p2;
wire   [0:0] grp_fu_704_p2;
wire   [0:0] and_ln87_1_fu_1240_p2;
wire   [0:0] and_ln89_3_fu_1272_p2;
wire   [0:0] xor_ln87_fu_1278_p2;
wire   [0:0] and_ln89_4_fu_1284_p2;
wire   [31:0] select_ln89_1_fu_1290_p3;
wire   [31:0] bitcast_ln81_fu_1306_p1;
wire   [31:0] bitcast_ln81_1_fu_1323_p1;
wire   [7:0] tmp_30_fu_1309_p4;
wire   [22:0] trunc_ln81_fu_1319_p1;
wire   [0:0] icmp_ln81_1_fu_1347_p2;
wire   [0:0] icmp_ln81_fu_1341_p2;
wire   [7:0] tmp_31_fu_1327_p4;
wire   [22:0] trunc_ln81_1_fu_1337_p1;
wire   [31:0] bitcast_ln83_fu_1371_p1;
wire   [7:0] tmp_33_fu_1375_p4;
wire   [22:0] trunc_ln83_fu_1385_p1;
wire   [0:0] or_ln81_1_fu_1401_p2;
wire   [0:0] and_ln81_fu_1405_p2;
wire   [0:0] grp_fu_709_p2;
wire   [0:0] and_ln81_1_fu_1410_p2;
wire   [0:0] or_ln83_fu_1423_p2;
wire   [0:0] and_ln83_fu_1427_p2;
wire   [0:0] grp_fu_714_p2;
wire   [0:0] and_ln83_1_fu_1432_p2;
wire   [31:0] bitcast_ln87_fu_1445_p1;
wire   [7:0] tmp_15_fu_1449_p4;
wire   [22:0] trunc_ln87_fu_1459_p1;
wire   [0:0] icmp_ln87_1_fu_1469_p2;
wire   [0:0] icmp_ln87_fu_1463_p2;
wire   [0:0] or_ln87_fu_1475_p2;
wire   [31:0] xor_ln88_fu_1486_p2;
wire   [0:0] and_ln87_fu_1481_p2;
wire   [31:0] tmp_min_fu_1492_p1;
wire   [31:0] bitcast_ln89_fu_1505_p1;
wire   [31:0] bitcast_ln89_1_fu_1523_p1;
wire   [7:0] tmp_20_fu_1509_p4;
wire   [22:0] trunc_ln89_1_fu_1519_p1;
wire   [0:0] icmp_ln89_1_fu_1546_p2;
wire   [0:0] icmp_ln89_fu_1540_p2;
wire   [7:0] tmp_21_fu_1526_p4;
wire   [22:0] trunc_ln89_2_fu_1536_p1;
wire   [0:0] icmp_ln89_3_fu_1564_p2;
wire   [0:0] icmp_ln89_2_fu_1558_p2;
wire   [0:0] or_ln89_fu_1552_p2;
wire   [0:0] or_ln89_1_fu_1570_p2;
wire   [0:0] and_ln89_fu_1576_p2;
wire   [0:0] and_ln89_1_fu_1582_p2;
wire   [0:0] icmp_ln98_fu_1613_p2;
wire   [3:0] iw_4_fu_1607_p2;
wire   [5:0] tmp_57_fu_1648_p3;
wire   [7:0] tmp_56_fu_1641_p3;
wire   [7:0] zext_ln100_fu_1655_p1;
wire   [7:0] sub_ln100_fu_1659_p2;
wire   [7:0] zext_ln100_1_fu_1665_p1;
wire   [7:0] add_ln100_fu_1668_p2;
wire   [31:0] bitcast_ln475_fu_1679_p1;
wire   [63:0] p_Val2_s_fu_1691_p1;
wire   [10:0] tmp_V_4_fu_1695_p4;
wire   [5:0] index_V_fu_1717_p4;
wire   [63:0] zext_ln209_fu_1744_p1;
wire   [63:0] p_Result_17_fu_1748_p3;
wire   [63:0] p_Val2_19_fu_1754_p2;
wire   [51:0] tmp_V_5_fu_1760_p1;
wire   [51:0] xor_ln1309_fu_1764_p2;
wire   [11:0] tmp_58_fu_1776_p4;
wire   [51:0] xs_sig_V_fu_1770_p2;
wire   [63:0] p_Result_16_fu_1737_p3;
wire   [63:0] p_Result_18_fu_1786_p3;
wire   [63:0] select_ln849_fu_1794_p3;
wire   [0:0] xor_ln849_fu_1805_p2;
wire   [0:0] and_ln849_fu_1810_p2;
wire   [7:0] p_Result_s_fu_1837_p4;
wire   [22:0] trunc_ln270_fu_1851_p1;
wire   [30:0] trunc_ln262_fu_1825_p1;
wire   [8:0] exp_V_fu_1847_p1;
wire  signed [8:0] sh_amt_fu_1873_p2;
wire   [5:0] tmp_38_fu_1907_p4;
wire   [23:0] tmp_28_fu_1859_p3;
wire  signed [23:0] sext_ln281_fu_1879_p1;
wire   [23:0] lshr_ln286_fu_1923_p2;
wire   [0:0] or_ln282_fu_1933_p2;
wire   [0:0] icmp_ln284_fu_1889_p2;
wire   [0:0] xor_ln282_fu_1939_p2;
wire   [0:0] and_ln285_fu_1951_p2;
wire   [7:0] trunc_ln286_fu_1929_p1;
wire   [0:0] or_ln284_fu_1965_p2;
wire   [0:0] icmp_ln295_fu_1917_p2;
wire   [0:0] xor_ln284_fu_1971_p2;
wire   [0:0] tmp_39_fu_1986_p3;
wire  signed [31:0] sext_ln294_fu_1983_p1;
wire   [7:0] sext_ln294cast_fu_2001_p1;
wire   [7:0] shl_ln297_fu_2005_p2;
wire   [7:0] select_ln295_fu_2010_p3;
wire   [0:0] xor_ln285_fu_2023_p2;
wire   [0:0] and_ln285_2_fu_2028_p2;
wire   [7:0] select_ln288_fu_1993_p3;
wire   [7:0] select_ln278_fu_2016_p3;
wire   [0:0] xor_ln278_fu_2041_p2;
wire   [0:0] and_ln282_fu_2046_p2;
wire   [7:0] select_ln285_2_fu_2033_p3;
wire   [7:0] select_ln282_fu_2051_p3;
wire   [7:0] sub_ln461_fu_2058_p2;
reg    grp_fu_675_ce;
wire    ap_CS_fsm_state3;
wire    ap_CS_fsm_state4;
wire    ap_CS_fsm_state37;
wire    ap_CS_fsm_state38;
wire    ap_CS_fsm_state41;
wire    ap_CS_fsm_state42;
wire    ap_CS_fsm_state71;
wire    ap_CS_fsm_state72;
wire    ap_CS_fsm_state75;
wire    ap_CS_fsm_state76;
reg    grp_fu_692_ce;
reg    grp_fu_695_ce;
reg   [4:0] grp_fu_698_opcode;
wire    ap_block_pp4_stage0_00001;
wire    ap_CS_fsm_state94;
reg   [53:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
reg    ap_idle_pp1;
wire    ap_enable_pp1;
reg    ap_idle_pp2;
wire    ap_enable_pp2;
reg    ap_idle_pp3;
wire    ap_enable_pp3;
reg    ap_idle_pp4;
wire    ap_enable_pp4;
reg    ap_idle_pp5;
wire    ap_enable_pp5;

// power-on initialization
initial begin
#0 ap_CS_fsm = 54'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp5_iter14 = 1'b0;
#0 ap_enable_reg_pp5_iter6 = 1'b0;
#0 ap_enable_reg_pp2_iter2 = 1'b0;
#0 ap_enable_reg_pp3_iter4 = 1'b0;
#0 ap_enable_reg_pp4_iter2 = 1'b0;
#0 ap_enable_reg_pp5_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp1_iter0 = 1'b0;
#0 ap_enable_reg_pp2_iter0 = 1'b0;
#0 ap_enable_reg_pp3_iter0 = 1'b0;
#0 ap_enable_reg_pp3_iter10 = 1'b0;
#0 ap_enable_reg_pp4_iter0 = 1'b0;
#0 ap_enable_reg_pp4_iter5 = 1'b0;
#0 ap_enable_reg_pp5_iter0 = 1'b0;
#0 ap_enable_reg_pp1_iter1 = 1'b0;
#0 ap_enable_reg_pp2_iter1 = 1'b0;
#0 ap_enable_reg_pp2_iter3 = 1'b0;
#0 ap_enable_reg_pp3_iter1 = 1'b0;
#0 ap_enable_reg_pp3_iter2 = 1'b0;
#0 ap_enable_reg_pp3_iter3 = 1'b0;
#0 ap_enable_reg_pp3_iter5 = 1'b0;
#0 ap_enable_reg_pp3_iter6 = 1'b0;
#0 ap_enable_reg_pp3_iter7 = 1'b0;
#0 ap_enable_reg_pp3_iter8 = 1'b0;
#0 ap_enable_reg_pp3_iter9 = 1'b0;
#0 ap_enable_reg_pp3_iter11 = 1'b0;
#0 ap_enable_reg_pp3_iter12 = 1'b0;
#0 ap_enable_reg_pp3_iter13 = 1'b0;
#0 ap_enable_reg_pp3_iter14 = 1'b0;
#0 ap_enable_reg_pp3_iter15 = 1'b0;
#0 ap_enable_reg_pp3_iter16 = 1'b0;
#0 ap_enable_reg_pp4_iter1 = 1'b0;
#0 ap_enable_reg_pp4_iter3 = 1'b0;
#0 ap_enable_reg_pp4_iter4 = 1'b0;
#0 ap_enable_reg_pp5_iter1 = 1'b0;
#0 ap_enable_reg_pp5_iter3 = 1'b0;
#0 ap_enable_reg_pp5_iter4 = 1'b0;
#0 ap_enable_reg_pp5_iter5 = 1'b0;
#0 ap_enable_reg_pp5_iter7 = 1'b0;
#0 ap_enable_reg_pp5_iter8 = 1'b0;
#0 ap_enable_reg_pp5_iter9 = 1'b0;
#0 ap_enable_reg_pp5_iter10 = 1'b0;
#0 ap_enable_reg_pp5_iter11 = 1'b0;
#0 ap_enable_reg_pp5_iter12 = 1'b0;
#0 ap_enable_reg_pp5_iter13 = 1'b0;
end

dw_layer1_mask_taIfE #(
    .DataWidth( 52 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
mask_table2_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(mask_table2_address0),
    .ce0(mask_table2_ce0),
    .q0(mask_table2_q0)
);

dw_layer1_one_halJfO #(
    .DataWidth( 53 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
one_half_table3_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(one_half_table3_address0),
    .ce0(one_half_table3_ce0),
    .q0(one_half_table3_q0)
);

pw_layer1_tmp_y_V #(
    .DataWidth( 32 ),
    .AddressRange( 96 ),
    .AddressWidth( 7 ))
tmp_y_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(tmp_y_V_address0),
    .ce0(tmp_y_V_ce0),
    .we0(tmp_y_V_we0),
    .d0(32'd0),
    .q0(tmp_y_V_q0),
    .address1(tmp_y_V_address1),
    .ce1(tmp_y_V_ce1),
    .we1(tmp_y_V_we1),
    .d1(grp_fu_2071_p3),
    .q1(tmp_y_V_q1)
);

pw_layer1_x_V_3_1 #(
    .DataWidth( 8 ),
    .AddressRange( 8 ),
    .AddressWidth( 3 ))
x_V_3_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(x_V_3_1_address0),
    .ce0(x_V_3_1_ce0),
    .we0(x_V_3_1_we0),
    .d0(x_V_3_1_d0),
    .q0(x_V_3_1_q0)
);

pw_layer1_tmp_y_V #(
    .DataWidth( 32 ),
    .AddressRange( 96 ),
    .AddressWidth( 7 ))
y_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(y_address0),
    .ce0(y_ce0),
    .we0(y_we0),
    .d0(y_d0),
    .q0(y_q0),
    .address1(y_address1),
    .ce1(y_ce1),
    .we1(y_we1),
    .d1(tmp_max_reg_2316),
    .q1(y_q1)
);

kws_fadd_32ns_32nwdI #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
kws_fadd_32ns_32nwdI_U239(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_7_reg_2259),
    .din1(tmp_9_reg_2264),
    .ce(1'b1),
    .dout(grp_fu_671_p2)
);

kws_fmul_32ns_32neOg #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
kws_fmul_32ns_32neOg_U240(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_675_p0),
    .din1(grp_fu_675_p1),
    .ce(grp_fu_675_ce),
    .dout(grp_fu_675_p2)
);

kws_fdiv_32ns_32nGfk #(
    .ID( 1 ),
    .NUM_STAGE( 16 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
kws_fdiv_32ns_32nGfk_U241(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(32'd1123942400),
    .din1(select_ln89_reg_2374),
    .ce(1'b1),
    .dout(grp_fu_681_p2)
);

kws_sitofp_32s_32OgC #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
kws_sitofp_32s_32OgC_U242(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_686_p0),
    .ce(1'b1),
    .dout(grp_fu_686_p1)
);

kws_sitofp_32ns_3KfY #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
kws_sitofp_32ns_3KfY_U243(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(reg_730),
    .ce(1'b1),
    .dout(grp_fu_689_p1)
);

kws_fptrunc_64ns_Aem #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 64 ),
    .dout_WIDTH( 32 ))
kws_fptrunc_64ns_Aem_U244(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_692_p0),
    .ce(grp_fu_692_ce),
    .dout(grp_fu_692_p1)
);

kws_fpext_32ns_64Bew #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
kws_fpext_32ns_64Bew_U245(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(reg_721),
    .ce(grp_fu_695_ce),
    .dout(grp_fu_695_p1)
);

kws_fcmp_32ns_32nHfu #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
kws_fcmp_32ns_32nHfu_U246(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_698_p0),
    .din1(grp_fu_698_p1),
    .ce(1'b1),
    .opcode(grp_fu_698_opcode),
    .dout(grp_fu_698_p2)
);

kws_fcmp_32ns_32nHfu #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
kws_fcmp_32ns_32nHfu_U247(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(reg_721),
    .din1(y_q0),
    .ce(1'b1),
    .opcode(5'd4),
    .dout(grp_fu_704_p2)
);

kws_fcmp_32ns_32nHfu #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
kws_fcmp_32ns_32nHfu_U248(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_max_reg_2316),
    .din1(ap_phi_mux_tmp_max_1_phi_fu_619_p4),
    .ce(1'b1),
    .opcode(5'd2),
    .dout(grp_fu_709_p2)
);

kws_fcmp_32ns_32nHfu #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
kws_fcmp_32ns_32nHfu_U249(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_max_reg_2316),
    .din1(ap_phi_mux_tmp_min_1_phi_fu_607_p4),
    .ce(1'b1),
    .opcode(5'd4),
    .dout(grp_fu_714_p2)
);

kws_mac_muladd_8sLf8 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
kws_mac_muladd_8sLf8_U250(
    .din0(x_V_3_load_reg_2198),
    .din1(pw_weight1_V_load_reg_2203),
    .din2(reg_730),
    .dout(grp_fu_2071_p3)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_condition_pp0_exit_iter0_state8) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((icmp_ln42_1_fu_806_p2 == 1'd1) & (icmp_ln42_fu_800_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state7))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_condition_pp0_exit_iter0_state8))) begin
            ap_enable_reg_pp0_iter1 <= (1'b1 ^ ap_condition_pp0_exit_iter0_state8);
        end else if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end else if (((icmp_ln42_1_fu_806_p2 == 1'd1) & (icmp_ln42_fu_800_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state7))) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp1_stage0_subdone) & (1'b1 == ap_condition_pp1_exit_iter0_state11) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
            ap_enable_reg_pp1_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state10)) begin
            ap_enable_reg_pp1_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp1_stage0_subdone) & (1'b1 == ap_condition_pp1_exit_iter0_state11))) begin
            ap_enable_reg_pp1_iter1 <= (1'b1 ^ ap_condition_pp1_exit_iter0_state11);
        end else if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter1 <= ap_enable_reg_pp1_iter0;
        end else if ((1'b1 == ap_CS_fsm_state10)) begin
            ap_enable_reg_pp1_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp2_stage0_subdone) & (1'b1 == ap_condition_pp2_exit_iter0_state14) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
            ap_enable_reg_pp2_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state13)) begin
            ap_enable_reg_pp2_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp2_exit_iter0_state14)) begin
                ap_enable_reg_pp2_iter1 <= (1'b1 ^ ap_condition_pp2_exit_iter0_state14);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp2_iter1 <= ap_enable_reg_pp2_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter2 <= ap_enable_reg_pp2_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter3 <= ap_enable_reg_pp2_iter2;
        end else if ((1'b1 == ap_CS_fsm_state13)) begin
            ap_enable_reg_pp2_iter3 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp3_stage0_subdone) & (1'b1 == ap_condition_pp3_exit_iter0_state19) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
            ap_enable_reg_pp3_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state18)) begin
            ap_enable_reg_pp3_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp3_exit_iter0_state19)) begin
                ap_enable_reg_pp3_iter1 <= (1'b1 ^ ap_condition_pp3_exit_iter0_state19);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp3_iter1 <= ap_enable_reg_pp3_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter10 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            ap_enable_reg_pp3_iter10 <= ap_enable_reg_pp3_iter9;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter11 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            ap_enable_reg_pp3_iter11 <= ap_enable_reg_pp3_iter10;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter12 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            ap_enable_reg_pp3_iter12 <= ap_enable_reg_pp3_iter11;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter13 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            ap_enable_reg_pp3_iter13 <= ap_enable_reg_pp3_iter12;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter14 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            ap_enable_reg_pp3_iter14 <= ap_enable_reg_pp3_iter13;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter15 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            ap_enable_reg_pp3_iter15 <= ap_enable_reg_pp3_iter14;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter16 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            ap_enable_reg_pp3_iter16 <= ap_enable_reg_pp3_iter15;
        end else if ((1'b1 == ap_CS_fsm_state18)) begin
            ap_enable_reg_pp3_iter16 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            ap_enable_reg_pp3_iter2 <= ap_enable_reg_pp3_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            ap_enable_reg_pp3_iter3 <= ap_enable_reg_pp3_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            ap_enable_reg_pp3_iter4 <= ap_enable_reg_pp3_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            ap_enable_reg_pp3_iter5 <= ap_enable_reg_pp3_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            ap_enable_reg_pp3_iter6 <= ap_enable_reg_pp3_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter7 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            ap_enable_reg_pp3_iter7 <= ap_enable_reg_pp3_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter8 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            ap_enable_reg_pp3_iter8 <= ap_enable_reg_pp3_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter9 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            ap_enable_reg_pp3_iter9 <= ap_enable_reg_pp3_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp4_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp4_stage0_subdone) & (1'b1 == ap_condition_pp4_exit_iter0_state44) & (1'b1 == ap_CS_fsm_pp4_stage0))) begin
            ap_enable_reg_pp4_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state43)) begin
            ap_enable_reg_pp4_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp4_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp4_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp4_exit_iter0_state44)) begin
                ap_enable_reg_pp4_iter1 <= (1'b1 ^ ap_condition_pp4_exit_iter0_state44);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp4_iter1 <= ap_enable_reg_pp4_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp4_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp4_stage0_subdone)) begin
            ap_enable_reg_pp4_iter2 <= ap_enable_reg_pp4_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp4_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp4_stage0_subdone)) begin
            ap_enable_reg_pp4_iter3 <= ap_enable_reg_pp4_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp4_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp4_stage0_subdone)) begin
            ap_enable_reg_pp4_iter4 <= ap_enable_reg_pp4_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp4_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp4_stage0_subdone)) begin
            ap_enable_reg_pp4_iter5 <= ap_enable_reg_pp4_iter4;
        end else if ((1'b1 == ap_CS_fsm_state43)) begin
            ap_enable_reg_pp4_iter5 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp5_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp5_stage0_subdone) & (1'b1 == ap_condition_pp5_exit_iter0_state79) & (1'b1 == ap_CS_fsm_pp5_stage0))) begin
            ap_enable_reg_pp5_iter0 <= 1'b0;
        end else if (((pw12gru_scale_V_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state78))) begin
            ap_enable_reg_pp5_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp5_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp5_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp5_exit_iter0_state79)) begin
                ap_enable_reg_pp5_iter1 <= (1'b1 ^ ap_condition_pp5_exit_iter0_state79);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp5_iter1 <= ap_enable_reg_pp5_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp5_iter10 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp5_stage0_subdone)) begin
            ap_enable_reg_pp5_iter10 <= ap_enable_reg_pp5_iter9;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp5_iter11 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp5_stage0_subdone)) begin
            ap_enable_reg_pp5_iter11 <= ap_enable_reg_pp5_iter10;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp5_iter12 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp5_stage0_subdone)) begin
            ap_enable_reg_pp5_iter12 <= ap_enable_reg_pp5_iter11;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp5_iter13 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp5_stage0_subdone)) begin
            ap_enable_reg_pp5_iter13 <= ap_enable_reg_pp5_iter12;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp5_iter14 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp5_stage0_subdone)) begin
            ap_enable_reg_pp5_iter14 <= ap_enable_reg_pp5_iter13;
        end else if (((pw12gru_scale_V_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state78))) begin
            ap_enable_reg_pp5_iter14 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp5_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp5_stage0_subdone)) begin
            ap_enable_reg_pp5_iter2 <= ap_enable_reg_pp5_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp5_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp5_stage0_subdone)) begin
            ap_enable_reg_pp5_iter3 <= ap_enable_reg_pp5_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp5_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp5_stage0_subdone)) begin
            ap_enable_reg_pp5_iter4 <= ap_enable_reg_pp5_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp5_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp5_stage0_subdone)) begin
            ap_enable_reg_pp5_iter5 <= ap_enable_reg_pp5_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp5_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp5_stage0_subdone)) begin
            ap_enable_reg_pp5_iter6 <= ap_enable_reg_pp5_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp5_iter7 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp5_stage0_subdone)) begin
            ap_enable_reg_pp5_iter7 <= ap_enable_reg_pp5_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp5_iter8 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp5_stage0_subdone)) begin
            ap_enable_reg_pp5_iter8 <= ap_enable_reg_pp5_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp5_iter9 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp5_stage0_subdone)) begin
            ap_enable_reg_pp5_iter9 <= ap_enable_reg_pp5_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        indvar_flatten12_reg_515 <= 7'd0;
    end else if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (icmp_ln63_fu_914_p2 == 1'd0))) begin
        indvar_flatten12_reg_515 <= add_ln63_fu_920_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        indvar_flatten24_reg_548 <= 7'd0;
    end else if (((1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0) & (icmp_ln70_fu_1012_p2 == 1'd0))) begin
        indvar_flatten24_reg_548 <= add_ln70_fu_1018_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp4_stage0_11001) & (ap_enable_reg_pp4_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage0) & (icmp_ln77_fu_1120_p2 == 1'd0))) begin
        indvar_flatten36_reg_581 <= add_ln77_fu_1126_p2;
    end else if ((1'b1 == ap_CS_fsm_state43)) begin
        indvar_flatten36_reg_581 <= 7'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp5_stage0_11001) & (ap_enable_reg_pp5_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp5_stage0) & (icmp_ln97_fu_1595_p2 == 1'd0))) begin
        indvar_flatten48_reg_638 <= add_ln97_fu_1601_p2;
    end else if (((pw12gru_scale_V_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state78))) begin
        indvar_flatten48_reg_638 <= 7'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        indvar_flatten_reg_482 <= 7'd0;
    end else if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln54_fu_829_p2 == 1'd0))) begin
        indvar_flatten_reg_482 <= add_ln54_fu_835_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp5_stage0_11001) & (ap_enable_reg_pp5_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp5_stage0) & (icmp_ln97_reg_2385 == 1'd0))) begin
        iw10_0_reg_649 <= select_ln100_1_reg_2399;
    end else if (((pw12gru_scale_V_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state78))) begin
        iw10_0_reg_649 <= 4'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        iw4_0_reg_526 <= 4'd0;
    end else if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (icmp_ln63_reg_2154 == 1'd0))) begin
        iw4_0_reg_526 <= select_ln66_2_reg_2169;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        iw6_0_reg_559 <= 4'd0;
    end else if (((1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0) & (icmp_ln70_reg_2208 == 1'd0))) begin
        iw6_0_reg_559 <= select_ln73_1_reg_2222;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp4_stage0_11001) & (ap_enable_reg_pp4_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage0) & (icmp_ln77_reg_2284 == 1'd0))) begin
        iw8_0_reg_592 <= select_ln80_1_reg_2298;
    end else if ((1'b1 == ap_CS_fsm_state43)) begin
        iw8_0_reg_592 <= 4'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        iw_0_reg_493 <= 4'd0;
    end else if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln54_reg_2128 == 1'd0))) begin
        iw_0_reg_493 <= select_ln58_1_reg_2142;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp5_stage0_11001) & (ap_enable_reg_pp5_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp5_stage0) & (icmp_ln97_fu_1595_p2 == 1'd0))) begin
        om11_0_reg_660 <= om_4_fu_1635_p2;
    end else if (((pw12gru_scale_V_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state78))) begin
        om11_0_reg_660 <= 4'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        om5_0_reg_537 <= 4'd0;
    end else if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (icmp_ln63_fu_914_p2 == 1'd0))) begin
        om5_0_reg_537 <= om_1_fu_954_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        om7_0_reg_570 <= 4'd0;
    end else if (((1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0) & (icmp_ln70_fu_1012_p2 == 1'd0))) begin
        om7_0_reg_570 <= om_2_fu_1057_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp4_stage0_11001) & (ap_enable_reg_pp4_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage0) & (icmp_ln77_fu_1120_p2 == 1'd0))) begin
        om9_0_reg_627 <= om_3_fu_1160_p2;
    end else if ((1'b1 == ap_CS_fsm_state43)) begin
        om9_0_reg_627 <= 4'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        om_0_reg_504 <= 4'd0;
    end else if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln54_fu_829_p2 == 1'd0))) begin
        om_0_reg_504 <= om_fu_869_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state7) & (icmp_ln42_fu_800_p2 == 1'd0))) begin
        phi_ln42_1_reg_459 <= add_ln42_1_fu_780_p2;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        phi_ln42_1_reg_459 <= 4'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln42_fu_800_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state7) & (icmp_ln42_1_fu_806_p2 == 1'd0))) begin
        phi_ln42_reg_447 <= add_ln42_reg_2096;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        phi_ln42_reg_447 <= 3'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter4 == 1'b1) & (icmp_ln70_reg_2208_pp3_iter3_reg == 1'd0))) begin
        reg_730 <= tmp_y_V_q1;
    end else if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter2 == 1'b1) & (icmp_ln63_reg_2154_pp2_iter1_reg == 1'd0))) begin
        reg_730 <= tmp_y_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp5_stage0_11001) & (ap_enable_reg_pp5_iter2 == 1'b1) & (icmp_ln97_reg_2385_pp5_iter1_reg == 1'd0))) begin
        reg_736 <= y_q1;
    end else if (((1'b0 == ap_block_pp4_stage0_11001) & (ap_enable_reg_pp4_iter2 == 1'b1) & (icmp_ln77_reg_2284_pp4_iter1_reg == 1'd0))) begin
        reg_736 <= y_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp4_stage0_11001) & (ap_enable_reg_pp4_iter5 == 1'b1) & (icmp_ln77_reg_2284_pp4_iter4_reg == 1'd0))) begin
        tmp_max_1_reg_615 <= tmp_min_3_fu_1416_p3;
    end else if ((1'b1 == ap_CS_fsm_state43)) begin
        tmp_max_1_reg_615 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp4_stage0_11001) & (ap_enable_reg_pp4_iter5 == 1'b1) & (icmp_ln77_reg_2284_pp4_iter4_reg == 1'd0))) begin
        tmp_min_1_reg_603 <= tmp_min_5_fu_1438_p3;
    end else if ((1'b1 == ap_CS_fsm_state43)) begin
        tmp_min_1_reg_603 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln42_1_fu_806_p2 == 1'd1) & (icmp_ln42_fu_800_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state7))) begin
        w_0_reg_470 <= 4'd0;
    end else if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln47_reg_2119 == 1'd0))) begin
        w_0_reg_470 <= w_reg_2123;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        add_ln42_reg_2096 <= add_ln42_fu_744_p2;
        sub_ln42_reg_2101[7 : 2] <= sub_ln42_fu_774_p2[7 : 2];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp5_stage0_11001) & (icmp_ln97_reg_2385_pp5_iter11_reg == 1'd0))) begin
        and_ln284_reg_2505 <= and_ln284_fu_1945_p2;
        and_ln295_reg_2515 <= and_ln295_fu_1977_p2;
        icmp_ln278_reg_2484 <= icmp_ln278_fu_1867_p2;
        icmp_ln282_reg_2490 <= icmp_ln282_fu_1883_p2;
        icmp_ln285_reg_2495 <= icmp_ln285_fu_1895_p2;
        p_Result_19_reg_2473 <= reg_V_fu_1822_p1[32'd31];
        reg_V_reg_2468 <= reg_V_fu_1822_p1;
        select_ln285_reg_2510 <= select_ln285_fu_1957_p3;
        sh_amt_2_reg_2500 <= sh_amt_2_fu_1901_p2;
        trunc_ln283_reg_2478 <= trunc_ln283_fu_1855_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp5_stage0_11001) & (icmp_ln97_reg_2385_pp5_iter8_reg == 1'd0))) begin
        bitcast_ln849_reg_2453 <= bitcast_ln849_fu_1801_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state43)) begin
        bitcast_ln89_2_reg_2274 <= bitcast_ln89_2_fu_1106_p1;
        icmp_ln89_5_reg_2279 <= icmp_ln89_5_fu_1114_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln47_reg_2119 <= icmp_ln47_fu_812_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        icmp_ln54_reg_2128 <= icmp_ln54_fu_829_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        icmp_ln63_reg_2154 <= icmp_ln63_fu_914_p2;
        icmp_ln63_reg_2154_pp2_iter1_reg <= icmp_ln63_reg_2154;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp2_stage0_11001)) begin
        icmp_ln63_reg_2154_pp2_iter2_reg <= icmp_ln63_reg_2154_pp2_iter1_reg;
        tmp_y_V_addr_1_reg_2187_pp2_iter2_reg <= tmp_y_V_addr_1_reg_2187;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp3_stage0_11001) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        icmp_ln70_reg_2208 <= icmp_ln70_fu_1012_p2;
        icmp_ln70_reg_2208_pp3_iter1_reg <= icmp_ln70_reg_2208;
        select_ln73_1_reg_2222_pp3_iter1_reg <= select_ln73_1_reg_2222;
        select_ln73_reg_2217_pp3_iter1_reg <= select_ln73_reg_2217;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp3_stage0_11001)) begin
        icmp_ln70_reg_2208_pp3_iter10_reg <= icmp_ln70_reg_2208_pp3_iter9_reg;
        icmp_ln70_reg_2208_pp3_iter11_reg <= icmp_ln70_reg_2208_pp3_iter10_reg;
        icmp_ln70_reg_2208_pp3_iter12_reg <= icmp_ln70_reg_2208_pp3_iter11_reg;
        icmp_ln70_reg_2208_pp3_iter13_reg <= icmp_ln70_reg_2208_pp3_iter12_reg;
        icmp_ln70_reg_2208_pp3_iter14_reg <= icmp_ln70_reg_2208_pp3_iter13_reg;
        icmp_ln70_reg_2208_pp3_iter15_reg <= icmp_ln70_reg_2208_pp3_iter14_reg;
        icmp_ln70_reg_2208_pp3_iter2_reg <= icmp_ln70_reg_2208_pp3_iter1_reg;
        icmp_ln70_reg_2208_pp3_iter3_reg <= icmp_ln70_reg_2208_pp3_iter2_reg;
        icmp_ln70_reg_2208_pp3_iter4_reg <= icmp_ln70_reg_2208_pp3_iter3_reg;
        icmp_ln70_reg_2208_pp3_iter5_reg <= icmp_ln70_reg_2208_pp3_iter4_reg;
        icmp_ln70_reg_2208_pp3_iter6_reg <= icmp_ln70_reg_2208_pp3_iter5_reg;
        icmp_ln70_reg_2208_pp3_iter7_reg <= icmp_ln70_reg_2208_pp3_iter6_reg;
        icmp_ln70_reg_2208_pp3_iter8_reg <= icmp_ln70_reg_2208_pp3_iter7_reg;
        icmp_ln70_reg_2208_pp3_iter9_reg <= icmp_ln70_reg_2208_pp3_iter8_reg;
        select_ln73_1_reg_2222_pp3_iter2_reg <= select_ln73_1_reg_2222_pp3_iter1_reg;
        select_ln73_reg_2217_pp3_iter2_reg <= select_ln73_reg_2217_pp3_iter1_reg;
        sext_ln544_reg_2244_pp3_iter10_reg <= sext_ln544_reg_2244_pp3_iter9_reg;
        sext_ln544_reg_2244_pp3_iter11_reg <= sext_ln544_reg_2244_pp3_iter10_reg;
        sext_ln544_reg_2244_pp3_iter12_reg <= sext_ln544_reg_2244_pp3_iter11_reg;
        sext_ln544_reg_2244_pp3_iter13_reg <= sext_ln544_reg_2244_pp3_iter12_reg;
        sext_ln544_reg_2244_pp3_iter14_reg <= sext_ln544_reg_2244_pp3_iter13_reg;
        sext_ln544_reg_2244_pp3_iter15_reg <= sext_ln544_reg_2244_pp3_iter14_reg;
        sext_ln544_reg_2244_pp3_iter4_reg <= sext_ln544_reg_2244;
        sext_ln544_reg_2244_pp3_iter5_reg <= sext_ln544_reg_2244_pp3_iter4_reg;
        sext_ln544_reg_2244_pp3_iter6_reg <= sext_ln544_reg_2244_pp3_iter5_reg;
        sext_ln544_reg_2244_pp3_iter7_reg <= sext_ln544_reg_2244_pp3_iter6_reg;
        sext_ln544_reg_2244_pp3_iter8_reg <= sext_ln544_reg_2244_pp3_iter7_reg;
        sext_ln544_reg_2244_pp3_iter9_reg <= sext_ln544_reg_2244_pp3_iter8_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp4_stage0_11001) & (1'b1 == ap_CS_fsm_pp4_stage0))) begin
        icmp_ln77_reg_2284 <= icmp_ln77_fu_1120_p2;
        icmp_ln77_reg_2284_pp4_iter1_reg <= icmp_ln77_reg_2284;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp4_stage0_11001)) begin
        icmp_ln77_reg_2284_pp4_iter2_reg <= icmp_ln77_reg_2284_pp4_iter1_reg;
        icmp_ln77_reg_2284_pp4_iter3_reg <= icmp_ln77_reg_2284_pp4_iter2_reg;
        icmp_ln77_reg_2284_pp4_iter4_reg <= icmp_ln77_reg_2284_pp4_iter3_reg;
        tmp_max_reg_2316_pp4_iter4_reg <= tmp_max_reg_2316;
        y_addr_3_reg_2310_pp4_iter2_reg <= y_addr_3_reg_2310;
        y_addr_3_reg_2310_pp4_iter3_reg <= y_addr_3_reg_2310_pp4_iter2_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp4_stage0_11001) & (icmp_ln77_reg_2284_pp4_iter3_reg == 1'd0))) begin
        icmp_ln81_2_reg_2332 <= icmp_ln81_2_fu_1359_p2;
        icmp_ln81_3_reg_2337 <= icmp_ln81_3_fu_1365_p2;
        icmp_ln83_1_reg_2347 <= icmp_ln83_1_fu_1395_p2;
        icmp_ln83_reg_2342 <= icmp_ln83_fu_1389_p2;
        or_ln81_reg_2326 <= or_ln81_fu_1353_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp5_stage0_11001) & (icmp_ln97_reg_2385_pp5_iter7_reg == 1'd0))) begin
        icmp_ln849_1_reg_2433 <= icmp_ln849_1_fu_1711_p2;
        icmp_ln849_reg_2427 <= icmp_ln849_fu_1705_p2;
        trunc_ln368_reg_2448 <= trunc_ln368_fu_1733_p1;
        x_assign_reg_2422 <= grp_fu_695_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp5_stage0_11001)) begin
        icmp_ln849_1_reg_2433_pp5_iter9_reg <= icmp_ln849_1_reg_2433;
        icmp_ln849_reg_2427_pp5_iter9_reg <= icmp_ln849_reg_2427;
        icmp_ln97_reg_2385_pp5_iter10_reg <= icmp_ln97_reg_2385_pp5_iter9_reg;
        icmp_ln97_reg_2385_pp5_iter11_reg <= icmp_ln97_reg_2385_pp5_iter10_reg;
        icmp_ln97_reg_2385_pp5_iter12_reg <= icmp_ln97_reg_2385_pp5_iter11_reg;
        icmp_ln97_reg_2385_pp5_iter13_reg <= icmp_ln97_reg_2385_pp5_iter12_reg;
        icmp_ln97_reg_2385_pp5_iter2_reg <= icmp_ln97_reg_2385_pp5_iter1_reg;
        icmp_ln97_reg_2385_pp5_iter3_reg <= icmp_ln97_reg_2385_pp5_iter2_reg;
        icmp_ln97_reg_2385_pp5_iter4_reg <= icmp_ln97_reg_2385_pp5_iter3_reg;
        icmp_ln97_reg_2385_pp5_iter5_reg <= icmp_ln97_reg_2385_pp5_iter4_reg;
        icmp_ln97_reg_2385_pp5_iter6_reg <= icmp_ln97_reg_2385_pp5_iter5_reg;
        icmp_ln97_reg_2385_pp5_iter7_reg <= icmp_ln97_reg_2385_pp5_iter6_reg;
        icmp_ln97_reg_2385_pp5_iter8_reg <= icmp_ln97_reg_2385_pp5_iter7_reg;
        icmp_ln97_reg_2385_pp5_iter9_reg <= icmp_ln97_reg_2385_pp5_iter8_reg;
        p_Result_15_reg_2416_pp5_iter8_reg <= p_Result_15_reg_2416;
        x_assign_reg_2422_pp5_iter9_reg <= x_assign_reg_2422;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp5_stage0_11001) & (1'b1 == ap_CS_fsm_pp5_stage0))) begin
        icmp_ln97_reg_2385 <= icmp_ln97_fu_1595_p2;
        icmp_ln97_reg_2385_pp5_iter1_reg <= icmp_ln97_reg_2385;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp5_stage0_11001) & (icmp_ln97_reg_2385_pp5_iter12_reg == 1'd0))) begin
        outprepare_int_V_reg_2520 <= outprepare_int_V_fu_2064_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp5_stage0_11001) & (icmp_ln97_reg_2385_pp5_iter10_reg == 1'd0))) begin
        outprepare_reg_2463 <= grp_fu_692_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp5_stage0_11001) & (icmp_ln97_reg_2385_pp5_iter6_reg == 1'd0))) begin
        p_Result_15_reg_2416 <= bitcast_ln475_fu_1679_p1[32'd31];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (icmp_ln63_reg_2154_pp2_iter1_reg == 1'd0))) begin
        pw_weight1_V_load_reg_2203 <= pw_weight1_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state77) | (1'b1 == ap_CS_fsm_state73) | (1'b1 == ap_CS_fsm_state43) | (1'b1 == ap_CS_fsm_state39) | (1'b1 == ap_CS_fsm_state5) | ((1'b0 == ap_block_pp5_stage0_11001) & (ap_enable_reg_pp5_iter6 == 1'b1) & (icmp_ln97_reg_2385_pp5_iter5_reg == 1'd0)))) begin
        reg_721 <= grp_fu_675_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp5_stage0_11001) & (ap_enable_reg_pp5_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp5_stage0) & (icmp_ln97_fu_1595_p2 == 1'd0))) begin
        select_ln100_1_reg_2399 <= select_ln100_1_fu_1627_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp5_stage0_11001) & (1'b1 == ap_CS_fsm_pp5_stage0) & (icmp_ln97_fu_1595_p2 == 1'd0))) begin
        select_ln100_reg_2394 <= select_ln100_fu_1619_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln54_fu_829_p2 == 1'd0))) begin
        select_ln58_1_reg_2142 <= select_ln58_1_fu_861_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln54_fu_829_p2 == 1'd0))) begin
        select_ln58_reg_2137 <= select_ln58_fu_853_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (icmp_ln63_fu_914_p2 == 1'd0))) begin
        select_ln66_2_reg_2169 <= select_ln66_2_fu_946_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0) & (icmp_ln63_fu_914_p2 == 1'd0))) begin
        select_ln66_reg_2163 <= select_ln66_fu_938_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0) & (icmp_ln70_fu_1012_p2 == 1'd0))) begin
        select_ln73_1_reg_2222 <= select_ln73_1_fu_1044_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp3_stage0_11001) & (1'b1 == ap_CS_fsm_pp3_stage0) & (icmp_ln70_fu_1012_p2 == 1'd0))) begin
        select_ln73_reg_2217 <= select_ln73_fu_1036_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp4_stage0_11001) & (ap_enable_reg_pp4_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage0) & (icmp_ln77_fu_1120_p2 == 1'd0))) begin
        select_ln80_1_reg_2298 <= select_ln80_1_fu_1152_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp4_stage0_11001) & (1'b1 == ap_CS_fsm_pp4_stage0) & (icmp_ln77_fu_1120_p2 == 1'd0))) begin
        select_ln80_reg_2293 <= select_ln80_fu_1144_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state53)) begin
        select_ln89_reg_2374 <= select_ln89_fu_1588_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp3_stage0_11001) & (icmp_ln70_reg_2208_pp3_iter2_reg == 1'd0))) begin
        sext_ln544_reg_2244 <= sext_ln544_fu_1101_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state69)) begin
        shrink_reg_2379 <= grp_fu_681_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state51)) begin
        tmp_16_reg_2362 <= grp_fu_698_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp3_stage0_11001) & (icmp_ln70_reg_2208_pp3_iter14_reg == 1'd0))) begin
        tmp_1_reg_2269 <= grp_fu_671_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((~((dw12pw1_scale_V_empty_n == 1'b0) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        tmp_40_reg_2080 <= dw12pw1_scale_V_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp3_stage0_11001) & (icmp_ln70_reg_2208_pp3_iter9_reg == 1'd0))) begin
        tmp_7_reg_2259 <= grp_fu_689_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp3_stage0_11001) & (icmp_ln70_reg_2208_pp3_iter5_reg == 1'd0))) begin
        tmp_8_reg_2254 <= grp_fu_686_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter10 == 1'b1) & (icmp_ln70_reg_2208_pp3_iter9_reg == 1'd0))) begin
        tmp_9_reg_2264 <= grp_fu_675_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp4_stage0_11001) & (icmp_ln77_reg_2284_pp4_iter2_reg == 1'd0))) begin
        tmp_max_reg_2316 <= tmp_max_fu_1298_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state52)) begin
        tmp_min_2_reg_2367 <= tmp_min_2_fu_1496_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0) & (icmp_ln63_reg_2154 == 1'd0))) begin
        tmp_y_V_addr_1_reg_2187 <= zext_ln215_2_fu_1001_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        w_reg_2123 <= w_fu_818_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter2 == 1'b1) & (icmp_ln63_reg_2154_pp2_iter1_reg == 1'd0))) begin
        x_V_3_load_reg_2198 <= x_V_3_1_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp4_stage0_11001) & (1'b1 == ap_CS_fsm_pp4_stage0) & (icmp_ln77_reg_2284 == 1'd0))) begin
        y_addr_3_reg_2310 <= sext_ln80_fu_1199_p1;
    end
end

always @ (*) begin
    if ((icmp_ln47_fu_812_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state8 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state8 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln54_fu_829_p2 == 1'd1)) begin
        ap_condition_pp1_exit_iter0_state11 = 1'b1;
    end else begin
        ap_condition_pp1_exit_iter0_state11 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln63_fu_914_p2 == 1'd1)) begin
        ap_condition_pp2_exit_iter0_state14 = 1'b1;
    end else begin
        ap_condition_pp2_exit_iter0_state14 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln70_fu_1012_p2 == 1'd1)) begin
        ap_condition_pp3_exit_iter0_state19 = 1'b1;
    end else begin
        ap_condition_pp3_exit_iter0_state19 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln77_fu_1120_p2 == 1'd1)) begin
        ap_condition_pp4_exit_iter0_state44 = 1'b1;
    end else begin
        ap_condition_pp4_exit_iter0_state44 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln97_fu_1595_p2 == 1'd1)) begin
        ap_condition_pp5_exit_iter0_state79 = 1'b1;
    end else begin
        ap_condition_pp5_exit_iter0_state79 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state94) | ((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b0) & (ap_enable_reg_pp1_iter0 == 1'b0))) begin
        ap_idle_pp1 = 1'b1;
    end else begin
        ap_idle_pp1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp2_iter3 == 1'b0) & (ap_enable_reg_pp2_iter1 == 1'b0) & (ap_enable_reg_pp2_iter0 == 1'b0) & (ap_enable_reg_pp2_iter2 == 1'b0))) begin
        ap_idle_pp2 = 1'b1;
    end else begin
        ap_idle_pp2 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp3_iter16 == 1'b0) & (ap_enable_reg_pp3_iter15 == 1'b0) & (ap_enable_reg_pp3_iter14 == 1'b0) & (ap_enable_reg_pp3_iter13 == 1'b0) & (ap_enable_reg_pp3_iter12 == 1'b0) & (ap_enable_reg_pp3_iter11 == 1'b0) & (ap_enable_reg_pp3_iter9 == 1'b0) & (ap_enable_reg_pp3_iter8 == 1'b0) & (ap_enable_reg_pp3_iter7 == 1'b0) & (ap_enable_reg_pp3_iter6 == 1'b0) & (ap_enable_reg_pp3_iter5 == 1'b0) & (ap_enable_reg_pp3_iter3 == 1'b0) & (ap_enable_reg_pp3_iter2 == 1'b0) & (ap_enable_reg_pp3_iter1 == 1'b0) & (ap_enable_reg_pp3_iter10 == 1'b0) & (ap_enable_reg_pp3_iter0 == 1'b0) & (ap_enable_reg_pp3_iter4 == 1'b0))) begin
        ap_idle_pp3 = 1'b1;
    end else begin
        ap_idle_pp3 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp4_iter4 == 1'b0) & (ap_enable_reg_pp4_iter3 == 1'b0) & (ap_enable_reg_pp4_iter1 == 1'b0) & (ap_enable_reg_pp4_iter5 == 1'b0) & (ap_enable_reg_pp4_iter0 == 1'b0) & (ap_enable_reg_pp4_iter2 == 1'b0))) begin
        ap_idle_pp4 = 1'b1;
    end else begin
        ap_idle_pp4 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp5_iter13 == 1'b0) & (ap_enable_reg_pp5_iter12 == 1'b0) & (ap_enable_reg_pp5_iter11 == 1'b0) & (ap_enable_reg_pp5_iter10 == 1'b0) & (ap_enable_reg_pp5_iter9 == 1'b0) & (ap_enable_reg_pp5_iter8 == 1'b0) & (ap_enable_reg_pp5_iter7 == 1'b0) & (ap_enable_reg_pp5_iter5 == 1'b0) & (ap_enable_reg_pp5_iter4 == 1'b0) & (ap_enable_reg_pp5_iter3 == 1'b0) & (ap_enable_reg_pp5_iter1 == 1'b0) & (ap_enable_reg_pp5_iter0 == 1'b0) & (ap_enable_reg_pp5_iter2 == 1'b0) & (ap_enable_reg_pp5_iter6 == 1'b0) & (ap_enable_reg_pp5_iter14 == 1'b0))) begin
        ap_idle_pp5 = 1'b1;
    end else begin
        ap_idle_pp5 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp5_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp5_stage0) & (1'b0 == ap_block_pp5_stage0) & (icmp_ln97_reg_2385 == 1'd0))) begin
        ap_phi_mux_iw10_0_phi_fu_653_p4 = select_ln100_1_reg_2399;
    end else begin
        ap_phi_mux_iw10_0_phi_fu_653_p4 = iw10_0_reg_649;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (icmp_ln63_reg_2154 == 1'd0))) begin
        ap_phi_mux_iw4_0_phi_fu_530_p4 = select_ln66_2_reg_2169;
    end else begin
        ap_phi_mux_iw4_0_phi_fu_530_p4 = iw4_0_reg_526;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp3_stage0) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0) & (icmp_ln70_reg_2208 == 1'd0))) begin
        ap_phi_mux_iw6_0_phi_fu_563_p4 = select_ln73_1_reg_2222;
    end else begin
        ap_phi_mux_iw6_0_phi_fu_563_p4 = iw6_0_reg_559;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp4_stage0) & (ap_enable_reg_pp4_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage0) & (icmp_ln77_reg_2284 == 1'd0))) begin
        ap_phi_mux_iw8_0_phi_fu_596_p4 = select_ln80_1_reg_2298;
    end else begin
        ap_phi_mux_iw8_0_phi_fu_596_p4 = iw8_0_reg_592;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln54_reg_2128 == 1'd0))) begin
        ap_phi_mux_iw_0_phi_fu_497_p4 = select_ln58_1_reg_2142;
    end else begin
        ap_phi_mux_iw_0_phi_fu_497_p4 = iw_0_reg_493;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp4_stage0) & (ap_enable_reg_pp4_iter5 == 1'b1) & (icmp_ln77_reg_2284_pp4_iter4_reg == 1'd0))) begin
        ap_phi_mux_tmp_max_1_phi_fu_619_p4 = tmp_min_3_fu_1416_p3;
    end else begin
        ap_phi_mux_tmp_max_1_phi_fu_619_p4 = tmp_max_1_reg_615;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp4_stage0) & (ap_enable_reg_pp4_iter5 == 1'b1) & (icmp_ln77_reg_2284_pp4_iter4_reg == 1'd0))) begin
        ap_phi_mux_tmp_min_1_phi_fu_607_p4 = tmp_min_5_fu_1438_p3;
    end else begin
        ap_phi_mux_tmp_min_1_phi_fu_607_p4 = tmp_min_1_reg_603;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln47_reg_2119 == 1'd0) & (1'b0 == ap_block_pp0_stage0))) begin
        ap_phi_mux_w_0_phi_fu_474_p4 = w_reg_2123;
    end else begin
        ap_phi_mux_w_0_phi_fu_474_p4 = w_0_reg_470;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state94)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        bn_bias1_V_ce0 = 1'b1;
    end else begin
        bn_bias1_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        dw12pw1_scale_V_blk_n = dw12pw1_scale_V_empty_n;
    end else begin
        dw12pw1_scale_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((dw12pw1_scale_V_empty_n == 1'b0) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        dw12pw1_scale_V_read = 1'b1;
    end else begin
        dw12pw1_scale_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state77) | (1'b1 == ap_CS_fsm_state73) | (1'b1 == ap_CS_fsm_state43) | (1'b1 == ap_CS_fsm_state39) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state76) | (1'b1 == ap_CS_fsm_state75) | (1'b1 == ap_CS_fsm_state72) | (1'b1 == ap_CS_fsm_state71) | (1'b1 == ap_CS_fsm_state42) | (1'b1 == ap_CS_fsm_state41) | (1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state74) | (1'b1 == ap_CS_fsm_state70) | (1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state36) | ((1'b0 == ap_block_pp3_stage0_11001) & (1'b1 == ap_CS_fsm_pp3_stage0)) | ((1'b0 == ap_block_pp5_stage0_11001) & (1'b1 == ap_CS_fsm_pp5_stage0)))) begin
        grp_fu_675_ce = 1'b1;
    end else begin
        grp_fu_675_ce = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp5_iter3 == 1'b1) & (1'b0 == ap_block_pp5_stage0))) begin
        grp_fu_675_p0 = reg_736;
    end else if ((1'b1 == ap_CS_fsm_state70)) begin
        grp_fu_675_p0 = shrink_reg_2379;
    end else if (((1'b1 == ap_CS_fsm_state74) | (1'b1 == ap_CS_fsm_state40))) begin
        grp_fu_675_p0 = reg_721;
    end else if (((1'b0 == ap_block_pp3_stage0) & (ap_enable_reg_pp3_iter7 == 1'b1))) begin
        grp_fu_675_p0 = tmp_8_reg_2254;
    end else if (((1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state36))) begin
        grp_fu_675_p0 = tmp_40_reg_2080;
    end else begin
        grp_fu_675_p0 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp5_iter3 == 1'b1) & (1'b0 == ap_block_pp5_stage0))) begin
        grp_fu_675_p1 = shrink_reg_2379;
    end else if ((1'b1 == ap_CS_fsm_state70)) begin
        grp_fu_675_p1 = tmp_40_reg_2080;
    end else if ((1'b1 == ap_CS_fsm_state40)) begin
        grp_fu_675_p1 = 32'd1086324736;
    end else if (((1'b1 == ap_CS_fsm_state74) | (1'b1 == ap_CS_fsm_state36))) begin
        grp_fu_675_p1 = pw_weights_scale;
    end else if (((1'b0 == ap_block_pp3_stage0) & (ap_enable_reg_pp3_iter7 == 1'b1))) begin
        grp_fu_675_p1 = reg_721;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        grp_fu_675_p1 = tmp_scalepw;
    end else begin
        grp_fu_675_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp5_stage0_11001) & (1'b1 == ap_CS_fsm_pp5_stage0))) begin
        grp_fu_692_ce = 1'b1;
    end else begin
        grp_fu_692_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp5_stage0_11001) & (1'b1 == ap_CS_fsm_pp5_stage0))) begin
        grp_fu_695_ce = 1'b1;
    end else begin
        grp_fu_695_ce = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state52)) begin
        grp_fu_698_opcode = 5'd2;
    end else if (((1'b1 == ap_CS_fsm_state50) | ((ap_enable_reg_pp4_iter2 == 1'b1) & (1'b0 == ap_block_pp4_stage0_00001) & (icmp_ln77_reg_2284_pp4_iter1_reg == 1'd0)))) begin
        grp_fu_698_opcode = 5'd4;
    end else begin
        grp_fu_698_opcode = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state52)) begin
        grp_fu_698_p0 = tmp_max_1_reg_615;
    end else if ((1'b1 == ap_CS_fsm_state50)) begin
        grp_fu_698_p0 = tmp_min_1_reg_603;
    end else if (((1'b0 == ap_block_pp4_stage0) & (ap_enable_reg_pp4_iter2 == 1'b1))) begin
        grp_fu_698_p0 = y_q0;
    end else begin
        grp_fu_698_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state52)) begin
        grp_fu_698_p1 = tmp_min_2_fu_1496_p3;
    end else if (((1'b1 == ap_CS_fsm_state50) | ((1'b0 == ap_block_pp4_stage0) & (ap_enable_reg_pp4_iter2 == 1'b1)))) begin
        grp_fu_698_p1 = 32'd0;
    end else begin
        grp_fu_698_p1 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln47_reg_2119 == 1'd0) & (1'b0 == ap_block_pp0_stage0))) begin
        in_stream_V_V_blk_n = in_stream_V_V_empty_n;
    end else begin
        in_stream_V_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln47_reg_2119 == 1'd0))) begin
        in_stream_V_V_read = 1'b1;
    end else begin
        in_stream_V_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp5_stage0_11001) & (ap_enable_reg_pp5_iter8 == 1'b1))) begin
        mask_table2_ce0 = 1'b1;
    end else begin
        mask_table2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp5_stage0_11001) & (ap_enable_reg_pp5_iter8 == 1'b1))) begin
        one_half_table3_ce0 = 1'b1;
    end else begin
        one_half_table3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp5_iter14 == 1'b1) & (1'b0 == ap_block_pp5_stage0) & (icmp_ln97_reg_2385_pp5_iter13_reg == 1'd0))) begin
        out_stream_V_V_blk_n = out_stream_V_V_full_n;
    end else begin
        out_stream_V_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp5_stage0_11001) & (ap_enable_reg_pp5_iter14 == 1'b1) & (icmp_ln97_reg_2385_pp5_iter13_reg == 1'd0))) begin
        out_stream_V_V_write = 1'b1;
    end else begin
        out_stream_V_V_write = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state78)) begin
        pw12gru_scale_V_blk_n = pw12gru_scale_V_full_n;
    end else begin
        pw12gru_scale_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((pw12gru_scale_V_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state78))) begin
        pw12gru_scale_V_write = 1'b1;
    end else begin
        pw12gru_scale_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        pw_weight1_V_ce0 = 1'b1;
    end else begin
        pw_weight1_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        tmp_y_V_address0 = zext_ln215_2_fu_1001_p1;
    end else if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        tmp_y_V_address0 = sext_ln180_fu_908_p1;
    end else begin
        tmp_y_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp3_stage0) & (ap_enable_reg_pp3_iter3 == 1'b1))) begin
        tmp_y_V_address1 = sext_ln544_fu_1101_p1;
    end else if (((1'b0 == ap_block_pp2_stage0) & (ap_enable_reg_pp2_iter3 == 1'b1))) begin
        tmp_y_V_address1 = tmp_y_V_addr_1_reg_2187_pp2_iter2_reg;
    end else begin
        tmp_y_V_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0)))) begin
        tmp_y_V_ce0 = 1'b1;
    end else begin
        tmp_y_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter3 == 1'b1)) | ((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter3 == 1'b1)))) begin
        tmp_y_V_ce1 = 1'b1;
    end else begin
        tmp_y_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln54_reg_2128 == 1'd0))) begin
        tmp_y_V_we0 = 1'b1;
    end else begin
        tmp_y_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter3 == 1'b1) & (icmp_ln63_reg_2154_pp2_iter2_reg == 1'd0))) begin
        tmp_y_V_we1 = 1'b1;
    end else begin
        tmp_y_V_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        x_V_3_1_address0 = zext_ln66_fu_960_p1;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        x_V_3_1_address0 = zext_ln51_fu_824_p1;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        x_V_3_1_address0 = 64'd0;
    end else begin
        x_V_3_1_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state5) | ((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        x_V_3_1_ce0 = 1'b1;
    end else begin
        x_V_3_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        x_V_3_1_d0 = in_stream_V_V_dout;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        x_V_3_1_d0 = 8'd0;
    end else begin
        x_V_3_1_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state5) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln47_reg_2119 == 1'd0)))) begin
        x_V_3_1_we0 = 1'b1;
    end else begin
        x_V_3_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp4_stage0) & (ap_enable_reg_pp4_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage0))) begin
        y_address0 = sext_ln80_fu_1199_p1;
    end else if (((1'b0 == ap_block_pp3_stage0) & (ap_enable_reg_pp3_iter16 == 1'b1))) begin
        y_address0 = sext_ln544_reg_2244_pp3_iter15_reg;
    end else if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        y_address0 = sext_ln180_fu_908_p1;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        y_address0 = sext_ln42_fu_795_p1;
    end else begin
        y_address0 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp5_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp5_stage0) & (1'b0 == ap_block_pp5_stage0))) begin
        y_address1 = sext_ln100_fu_1674_p1;
    end else if (((1'b0 == ap_block_pp4_stage0) & (ap_enable_reg_pp4_iter4 == 1'b1))) begin
        y_address1 = y_addr_3_reg_2310_pp4_iter3_reg;
    end else begin
        y_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state7) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((1'b0 == ap_block_pp4_stage0_11001) & (ap_enable_reg_pp4_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage0)) | ((1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter16 == 1'b1)))) begin
        y_ce0 = 1'b1;
    end else begin
        y_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp4_stage0_11001) & (ap_enable_reg_pp4_iter4 == 1'b1)) | ((1'b0 == ap_block_pp5_stage0_11001) & (ap_enable_reg_pp5_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp5_stage0)))) begin
        y_ce1 = 1'b1;
    end else begin
        y_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp3_stage0) & (ap_enable_reg_pp3_iter16 == 1'b1))) begin
        y_d0 = tmp_1_reg_2269;
    end else if (((1'b1 == ap_CS_fsm_state7) | ((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)))) begin
        y_d0 = 32'd0;
    end else begin
        y_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state7) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln54_reg_2128 == 1'd0)) | ((1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter16 == 1'b1) & (icmp_ln70_reg_2208_pp3_iter15_reg == 1'd0)))) begin
        y_we0 = 1'b1;
    end else begin
        y_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp4_stage0_11001) & (ap_enable_reg_pp4_iter4 == 1'b1) & (icmp_ln77_reg_2284_pp4_iter3_reg == 1'd0))) begin
        y_we1 = 1'b1;
    end else begin
        y_we1 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((dw12pw1_scale_V_empty_n == 1'b0) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            if (((icmp_ln42_1_fu_806_p2 == 1'd1) & (icmp_ln42_fu_800_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state7))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if (((icmp_ln42_fu_800_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state7) & (icmp_ln42_1_fu_806_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if (~((1'b0 == ap_block_pp0_stage0_subdone) & (icmp_ln47_fu_812_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (icmp_ln47_fu_812_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_pp1_stage0;
        end
        ap_ST_fsm_pp1_stage0 : begin
            if (~((1'b0 == ap_block_pp1_stage0_subdone) & (icmp_ln54_fu_829_p2 == 1'd1) & (ap_enable_reg_pp1_iter0 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end else if (((1'b0 == ap_block_pp1_stage0_subdone) & (icmp_ln54_fu_829_p2 == 1'd1) & (ap_enable_reg_pp1_iter0 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state13;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_pp2_stage0;
        end
        ap_ST_fsm_pp2_stage0 : begin
            if ((~((ap_enable_reg_pp2_iter1 == 1'b0) & (1'b0 == ap_block_pp2_stage0_subdone) & (icmp_ln63_fu_914_p2 == 1'd1) & (ap_enable_reg_pp2_iter0 == 1'b1)) & ~((1'b0 == ap_block_pp2_stage0_subdone) & (ap_enable_reg_pp2_iter2 == 1'b0) & (ap_enable_reg_pp2_iter3 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            end else if ((((1'b0 == ap_block_pp2_stage0_subdone) & (ap_enable_reg_pp2_iter2 == 1'b0) & (ap_enable_reg_pp2_iter3 == 1'b1)) | ((ap_enable_reg_pp2_iter1 == 1'b0) & (1'b0 == ap_block_pp2_stage0_subdone) & (icmp_ln63_fu_914_p2 == 1'd1) & (ap_enable_reg_pp2_iter0 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_state18;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            end
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_pp3_stage0;
        end
        ap_ST_fsm_pp3_stage0 : begin
            if ((~((ap_enable_reg_pp3_iter1 == 1'b0) & (1'b0 == ap_block_pp3_stage0_subdone) & (icmp_ln70_fu_1012_p2 == 1'd1) & (ap_enable_reg_pp3_iter0 == 1'b1)) & ~((ap_enable_reg_pp3_iter15 == 1'b0) & (1'b0 == ap_block_pp3_stage0_subdone) & (ap_enable_reg_pp3_iter16 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_pp3_stage0;
            end else if ((((ap_enable_reg_pp3_iter15 == 1'b0) & (1'b0 == ap_block_pp3_stage0_subdone) & (ap_enable_reg_pp3_iter16 == 1'b1)) | ((ap_enable_reg_pp3_iter1 == 1'b0) & (1'b0 == ap_block_pp3_stage0_subdone) & (icmp_ln70_fu_1012_p2 == 1'd1) & (ap_enable_reg_pp3_iter0 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_state36;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp3_stage0;
            end
        end
        ap_ST_fsm_state36 : begin
            ap_NS_fsm = ap_ST_fsm_state37;
        end
        ap_ST_fsm_state37 : begin
            ap_NS_fsm = ap_ST_fsm_state38;
        end
        ap_ST_fsm_state38 : begin
            ap_NS_fsm = ap_ST_fsm_state39;
        end
        ap_ST_fsm_state39 : begin
            ap_NS_fsm = ap_ST_fsm_state40;
        end
        ap_ST_fsm_state40 : begin
            ap_NS_fsm = ap_ST_fsm_state41;
        end
        ap_ST_fsm_state41 : begin
            ap_NS_fsm = ap_ST_fsm_state42;
        end
        ap_ST_fsm_state42 : begin
            ap_NS_fsm = ap_ST_fsm_state43;
        end
        ap_ST_fsm_state43 : begin
            ap_NS_fsm = ap_ST_fsm_pp4_stage0;
        end
        ap_ST_fsm_pp4_stage0 : begin
            if ((~((ap_enable_reg_pp4_iter1 == 1'b0) & (1'b0 == ap_block_pp4_stage0_subdone) & (icmp_ln77_fu_1120_p2 == 1'd1) & (ap_enable_reg_pp4_iter0 == 1'b1)) & ~((ap_enable_reg_pp4_iter4 == 1'b0) & (1'b0 == ap_block_pp4_stage0_subdone) & (ap_enable_reg_pp4_iter5 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_pp4_stage0;
            end else if ((((ap_enable_reg_pp4_iter4 == 1'b0) & (1'b0 == ap_block_pp4_stage0_subdone) & (ap_enable_reg_pp4_iter5 == 1'b1)) | ((ap_enable_reg_pp4_iter1 == 1'b0) & (1'b0 == ap_block_pp4_stage0_subdone) & (icmp_ln77_fu_1120_p2 == 1'd1) & (ap_enable_reg_pp4_iter0 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_state50;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp4_stage0;
            end
        end
        ap_ST_fsm_state50 : begin
            ap_NS_fsm = ap_ST_fsm_state51;
        end
        ap_ST_fsm_state51 : begin
            ap_NS_fsm = ap_ST_fsm_state52;
        end
        ap_ST_fsm_state52 : begin
            ap_NS_fsm = ap_ST_fsm_state53;
        end
        ap_ST_fsm_state53 : begin
            ap_NS_fsm = ap_ST_fsm_state54;
        end
        ap_ST_fsm_state54 : begin
            ap_NS_fsm = ap_ST_fsm_state55;
        end
        ap_ST_fsm_state55 : begin
            ap_NS_fsm = ap_ST_fsm_state56;
        end
        ap_ST_fsm_state56 : begin
            ap_NS_fsm = ap_ST_fsm_state57;
        end
        ap_ST_fsm_state57 : begin
            ap_NS_fsm = ap_ST_fsm_state58;
        end
        ap_ST_fsm_state58 : begin
            ap_NS_fsm = ap_ST_fsm_state59;
        end
        ap_ST_fsm_state59 : begin
            ap_NS_fsm = ap_ST_fsm_state60;
        end
        ap_ST_fsm_state60 : begin
            ap_NS_fsm = ap_ST_fsm_state61;
        end
        ap_ST_fsm_state61 : begin
            ap_NS_fsm = ap_ST_fsm_state62;
        end
        ap_ST_fsm_state62 : begin
            ap_NS_fsm = ap_ST_fsm_state63;
        end
        ap_ST_fsm_state63 : begin
            ap_NS_fsm = ap_ST_fsm_state64;
        end
        ap_ST_fsm_state64 : begin
            ap_NS_fsm = ap_ST_fsm_state65;
        end
        ap_ST_fsm_state65 : begin
            ap_NS_fsm = ap_ST_fsm_state66;
        end
        ap_ST_fsm_state66 : begin
            ap_NS_fsm = ap_ST_fsm_state67;
        end
        ap_ST_fsm_state67 : begin
            ap_NS_fsm = ap_ST_fsm_state68;
        end
        ap_ST_fsm_state68 : begin
            ap_NS_fsm = ap_ST_fsm_state69;
        end
        ap_ST_fsm_state69 : begin
            ap_NS_fsm = ap_ST_fsm_state70;
        end
        ap_ST_fsm_state70 : begin
            ap_NS_fsm = ap_ST_fsm_state71;
        end
        ap_ST_fsm_state71 : begin
            ap_NS_fsm = ap_ST_fsm_state72;
        end
        ap_ST_fsm_state72 : begin
            ap_NS_fsm = ap_ST_fsm_state73;
        end
        ap_ST_fsm_state73 : begin
            ap_NS_fsm = ap_ST_fsm_state74;
        end
        ap_ST_fsm_state74 : begin
            ap_NS_fsm = ap_ST_fsm_state75;
        end
        ap_ST_fsm_state75 : begin
            ap_NS_fsm = ap_ST_fsm_state76;
        end
        ap_ST_fsm_state76 : begin
            ap_NS_fsm = ap_ST_fsm_state77;
        end
        ap_ST_fsm_state77 : begin
            ap_NS_fsm = ap_ST_fsm_state78;
        end
        ap_ST_fsm_state78 : begin
            if (((pw12gru_scale_V_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state78))) begin
                ap_NS_fsm = ap_ST_fsm_pp5_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state78;
            end
        end
        ap_ST_fsm_pp5_stage0 : begin
            if ((~((ap_enable_reg_pp5_iter1 == 1'b0) & (1'b0 == ap_block_pp5_stage0_subdone) & (icmp_ln97_fu_1595_p2 == 1'd1) & (ap_enable_reg_pp5_iter0 == 1'b1)) & ~((ap_enable_reg_pp5_iter13 == 1'b0) & (1'b0 == ap_block_pp5_stage0_subdone) & (ap_enable_reg_pp5_iter14 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_pp5_stage0;
            end else if ((((ap_enable_reg_pp5_iter1 == 1'b0) & (1'b0 == ap_block_pp5_stage0_subdone) & (icmp_ln97_fu_1595_p2 == 1'd1) & (ap_enable_reg_pp5_iter0 == 1'b1)) | ((ap_enable_reg_pp5_iter13 == 1'b0) & (1'b0 == ap_block_pp5_stage0_subdone) & (ap_enable_reg_pp5_iter14 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_state94;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp5_stage0;
            end
        end
        ap_ST_fsm_state94 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln100_fu_1668_p2 = (sub_ln100_fu_1659_p2 + zext_ln100_1_fu_1665_p1);

assign add_ln180_fu_902_p2 = (sub_ln180_fu_893_p2 + zext_ln180_33_fu_899_p1);

assign add_ln215_fu_995_p2 = (zext_ln215_1_fu_992_p1 + sub_ln215_fu_982_p2);

assign add_ln42_1_fu_780_p2 = (phi_ln42_1_reg_459 + 4'd1);

assign add_ln42_2_fu_790_p2 = (sub_ln42_reg_2101 + zext_ln42_2_fu_786_p1);

assign add_ln42_fu_744_p2 = (phi_ln42_reg_447 + 3'd1);

assign add_ln544_fu_1095_p2 = (sub_ln544_fu_1086_p2 + zext_ln544_1_fu_1092_p1);

assign add_ln54_fu_835_p2 = (indvar_flatten_reg_482 + 7'd1);

assign add_ln63_fu_920_p2 = (indvar_flatten12_reg_515 + 7'd1);

assign add_ln70_fu_1018_p2 = (indvar_flatten24_reg_548 + 7'd1);

assign add_ln77_fu_1126_p2 = (indvar_flatten36_reg_581 + 7'd1);

assign add_ln80_fu_1193_p2 = (zext_ln80_1_fu_1190_p1 + sub_ln80_fu_1184_p2);

assign add_ln97_fu_1601_p2 = (indvar_flatten48_reg_638 + 7'd1);

assign and_ln282_fu_2046_p2 = (xor_ln278_fu_2041_p2 & icmp_ln282_reg_2490);

assign and_ln284_fu_1945_p2 = (xor_ln282_fu_1939_p2 & icmp_ln284_fu_1889_p2);

assign and_ln285_2_fu_2028_p2 = (xor_ln285_fu_2023_p2 & and_ln284_reg_2505);

assign and_ln285_fu_1951_p2 = (icmp_ln285_fu_1895_p2 & and_ln284_fu_1945_p2);

assign and_ln295_fu_1977_p2 = (xor_ln284_fu_1971_p2 & icmp_ln295_fu_1917_p2);

assign and_ln81_1_fu_1410_p2 = (grp_fu_709_p2 & and_ln81_fu_1405_p2);

assign and_ln81_fu_1405_p2 = (or_ln81_reg_2326 & or_ln81_1_fu_1401_p2);

assign and_ln83_1_fu_1432_p2 = (grp_fu_714_p2 & and_ln83_fu_1427_p2);

assign and_ln83_fu_1427_p2 = (or_ln83_fu_1423_p2 & or_ln81_reg_2326);

assign and_ln849_fu_1810_p2 = (xor_ln849_fu_1805_p2 & icmp_ln849_1_reg_2433_pp5_iter9_reg);

assign and_ln87_1_fu_1240_p2 = (or_ln87_1_fu_1234_p2 & grp_fu_698_p2);

assign and_ln87_fu_1481_p2 = (tmp_16_reg_2362 & or_ln87_fu_1475_p2);

assign and_ln89_1_fu_1582_p2 = (grp_fu_698_p2 & and_ln89_fu_1576_p2);

assign and_ln89_2_fu_1266_p2 = (or_ln89_2_fu_1261_p2 & or_ln87_1_fu_1234_p2);

assign and_ln89_3_fu_1272_p2 = (grp_fu_704_p2 & and_ln89_2_fu_1266_p2);

assign and_ln89_4_fu_1284_p2 = (xor_ln87_fu_1278_p2 & and_ln89_3_fu_1272_p2);

assign and_ln89_fu_1576_p2 = (or_ln89_fu_1552_p2 & or_ln89_1_fu_1570_p2);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_pp1_stage0 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_pp2_stage0 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_pp3_stage0 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_pp4_stage0 = ap_CS_fsm[32'd22];

assign ap_CS_fsm_pp5_stage0 = ap_CS_fsm[32'd52];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd8];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state18 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state36 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state37 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state38 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state39 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state40 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_state41 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_state42 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_state43 = ap_CS_fsm[32'd21];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state50 = ap_CS_fsm[32'd23];

assign ap_CS_fsm_state51 = ap_CS_fsm[32'd24];

assign ap_CS_fsm_state52 = ap_CS_fsm[32'd25];

assign ap_CS_fsm_state53 = ap_CS_fsm[32'd26];

assign ap_CS_fsm_state54 = ap_CS_fsm[32'd27];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state69 = ap_CS_fsm[32'd42];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state70 = ap_CS_fsm[32'd43];

assign ap_CS_fsm_state71 = ap_CS_fsm[32'd44];

assign ap_CS_fsm_state72 = ap_CS_fsm[32'd45];

assign ap_CS_fsm_state73 = ap_CS_fsm[32'd46];

assign ap_CS_fsm_state74 = ap_CS_fsm[32'd47];

assign ap_CS_fsm_state75 = ap_CS_fsm[32'd48];

assign ap_CS_fsm_state76 = ap_CS_fsm[32'd49];

assign ap_CS_fsm_state77 = ap_CS_fsm[32'd50];

assign ap_CS_fsm_state78 = ap_CS_fsm[32'd51];

assign ap_CS_fsm_state94 = ap_CS_fsm[32'd53];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((in_stream_V_V_empty_n == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln47_reg_2119 == 1'd0));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((in_stream_V_V_empty_n == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln47_reg_2119 == 1'd0));
end

assign ap_block_pp1_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp3_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp3_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp3_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp4_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp4_stage0_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp4_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp4_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp5_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp5_stage0_01001 = ((out_stream_V_V_full_n == 1'b0) & (ap_enable_reg_pp5_iter14 == 1'b1) & (icmp_ln97_reg_2385_pp5_iter13_reg == 1'd0));
end

always @ (*) begin
    ap_block_pp5_stage0_11001 = ((out_stream_V_V_full_n == 1'b0) & (ap_enable_reg_pp5_iter14 == 1'b1) & (icmp_ln97_reg_2385_pp5_iter13_reg == 1'd0));
end

always @ (*) begin
    ap_block_pp5_stage0_subdone = ((out_stream_V_V_full_n == 1'b0) & (ap_enable_reg_pp5_iter14 == 1'b1) & (icmp_ln97_reg_2385_pp5_iter13_reg == 1'd0));
end

always @ (*) begin
    ap_block_state1 = ((dw12pw1_scale_V_empty_n == 1'b0) | (ap_start == 1'b0));
end

assign ap_block_state11_pp1_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp1_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp2_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp2_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp2_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp2_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp3_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state20_pp3_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state21_pp3_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state22_pp3_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state23_pp3_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state24_pp3_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state25_pp3_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state26_pp3_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state27_pp3_stage0_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state28_pp3_stage0_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state29_pp3_stage0_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state30_pp3_stage0_iter11 = ~(1'b1 == 1'b1);

assign ap_block_state31_pp3_stage0_iter12 = ~(1'b1 == 1'b1);

assign ap_block_state32_pp3_stage0_iter13 = ~(1'b1 == 1'b1);

assign ap_block_state33_pp3_stage0_iter14 = ~(1'b1 == 1'b1);

assign ap_block_state34_pp3_stage0_iter15 = ~(1'b1 == 1'b1);

assign ap_block_state35_pp3_stage0_iter16 = ~(1'b1 == 1'b1);

assign ap_block_state44_pp4_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state45_pp4_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state46_pp4_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state47_pp4_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state48_pp4_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state49_pp4_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state79_pp5_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state80_pp5_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state81_pp5_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state82_pp5_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state83_pp5_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state84_pp5_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state85_pp5_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state86_pp5_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state87_pp5_stage0_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state88_pp5_stage0_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state89_pp5_stage0_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state90_pp5_stage0_iter11 = ~(1'b1 == 1'b1);

assign ap_block_state91_pp5_stage0_iter12 = ~(1'b1 == 1'b1);

assign ap_block_state92_pp5_stage0_iter13 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state93_pp5_stage0_iter14 = ((out_stream_V_V_full_n == 1'b0) & (icmp_ln97_reg_2385_pp5_iter13_reg == 1'd0));
end

always @ (*) begin
    ap_block_state9_pp0_stage0_iter1 = ((in_stream_V_V_empty_n == 1'b0) & (icmp_ln47_reg_2119 == 1'd0));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_pp1 = (ap_idle_pp1 ^ 1'b1);

assign ap_enable_pp2 = (ap_idle_pp2 ^ 1'b1);

assign ap_enable_pp3 = (ap_idle_pp3 ^ 1'b1);

assign ap_enable_pp4 = (ap_idle_pp4 ^ 1'b1);

assign ap_enable_pp5 = (ap_idle_pp5 ^ 1'b1);

assign bitcast_ln475_fu_1679_p1 = reg_721;

assign bitcast_ln81_1_fu_1323_p1 = ap_phi_mux_tmp_max_1_phi_fu_619_p4;

assign bitcast_ln81_fu_1306_p1 = tmp_max_reg_2316;

assign bitcast_ln83_fu_1371_p1 = ap_phi_mux_tmp_min_1_phi_fu_607_p4;

assign bitcast_ln849_fu_1801_p1 = select_ln849_fu_1794_p3;

assign bitcast_ln87_1_fu_1204_p1 = reg_736;

assign bitcast_ln87_fu_1445_p1 = tmp_min_1_reg_603;

assign bitcast_ln89_1_fu_1523_p1 = tmp_min_2_reg_2367;

assign bitcast_ln89_2_fu_1106_p1 = grp_fu_675_p2;

assign bitcast_ln89_fu_1505_p1 = tmp_max_1_reg_615;

assign bn_bias1_V_address0 = zext_ln73_fu_1052_p1;

assign exp_V_fu_1847_p1 = p_Result_s_fu_1837_p4;

assign grp_fu_686_p0 = $signed(bn_bias1_V_q0);

assign grp_fu_692_p0 = ((and_ln849_fu_1810_p2[0:0] === 1'b1) ? x_assign_reg_2422_pp5_iter9_reg : bitcast_ln849_reg_2453);

assign icmp_ln278_fu_1867_p2 = ((trunc_ln262_fu_1825_p1 == 31'd0) ? 1'b1 : 1'b0);

assign icmp_ln282_fu_1883_p2 = ((p_Result_s_fu_1837_p4 == 8'd150) ? 1'b1 : 1'b0);

assign icmp_ln284_fu_1889_p2 = (($signed(sh_amt_fu_1873_p2) > $signed(9'd0)) ? 1'b1 : 1'b0);

assign icmp_ln285_fu_1895_p2 = (($signed(sh_amt_fu_1873_p2) < $signed(9'd25)) ? 1'b1 : 1'b0);

assign icmp_ln295_fu_1917_p2 = (($signed(tmp_38_fu_1907_p4) < $signed(6'd1)) ? 1'b1 : 1'b0);

assign icmp_ln42_1_fu_806_p2 = ((phi_ln42_reg_447 == 3'd7) ? 1'b1 : 1'b0);

assign icmp_ln42_fu_800_p2 = ((phi_ln42_1_reg_459 == 4'd11) ? 1'b1 : 1'b0);

assign icmp_ln47_fu_812_p2 = ((ap_phi_mux_w_0_phi_fu_474_p4 == 4'd8) ? 1'b1 : 1'b0);

assign icmp_ln54_fu_829_p2 = ((indvar_flatten_reg_482 == 7'd96) ? 1'b1 : 1'b0);

assign icmp_ln55_fu_847_p2 = ((om_0_reg_504 == 4'd12) ? 1'b1 : 1'b0);

assign icmp_ln63_fu_914_p2 = ((indvar_flatten12_reg_515 == 7'd96) ? 1'b1 : 1'b0);

assign icmp_ln64_fu_932_p2 = ((om5_0_reg_537 == 4'd12) ? 1'b1 : 1'b0);

assign icmp_ln70_fu_1012_p2 = ((indvar_flatten24_reg_548 == 7'd96) ? 1'b1 : 1'b0);

assign icmp_ln71_fu_1030_p2 = ((om7_0_reg_570 == 4'd12) ? 1'b1 : 1'b0);

assign icmp_ln77_fu_1120_p2 = ((indvar_flatten36_reg_581 == 7'd96) ? 1'b1 : 1'b0);

assign icmp_ln78_fu_1138_p2 = ((om9_0_reg_627 == 4'd12) ? 1'b1 : 1'b0);

assign icmp_ln81_1_fu_1347_p2 = ((trunc_ln81_fu_1319_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln81_2_fu_1359_p2 = ((tmp_31_fu_1327_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln81_3_fu_1365_p2 = ((trunc_ln81_1_fu_1337_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln81_fu_1341_p2 = ((tmp_30_fu_1309_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln83_1_fu_1395_p2 = ((trunc_ln83_fu_1385_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln83_fu_1389_p2 = ((tmp_33_fu_1375_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln849_1_fu_1711_p2 = ((tmp_V_4_fu_1695_p4 > 11'd1075) ? 1'b1 : 1'b0);

assign icmp_ln849_fu_1705_p2 = ((tmp_V_4_fu_1695_p4 < 11'd1022) ? 1'b1 : 1'b0);

assign icmp_ln87_1_fu_1469_p2 = ((trunc_ln87_fu_1459_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln87_2_fu_1222_p2 = ((tmp_24_fu_1208_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln87_3_fu_1228_p2 = ((trunc_ln87_1_fu_1218_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln87_fu_1463_p2 = ((tmp_15_fu_1449_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln89_1_fu_1546_p2 = ((trunc_ln89_1_fu_1519_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln89_2_fu_1558_p2 = ((tmp_21_fu_1526_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln89_3_fu_1564_p2 = ((trunc_ln89_2_fu_1536_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln89_4_fu_1255_p2 = ((tmp_26_fu_1246_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln89_5_fu_1114_p2 = ((trunc_ln89_fu_1110_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln89_fu_1540_p2 = ((tmp_20_fu_1509_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln97_fu_1595_p2 = ((indvar_flatten48_reg_638 == 7'd96) ? 1'b1 : 1'b0);

assign icmp_ln98_fu_1613_p2 = ((om11_0_reg_660 == 4'd12) ? 1'b1 : 1'b0);

assign index_V_fu_1717_p4 = {{p_Val2_s_fu_1691_p1[57:52]}};

assign iw_1_fu_926_p2 = (ap_phi_mux_iw4_0_phi_fu_530_p4 + 4'd1);

assign iw_2_fu_1024_p2 = (ap_phi_mux_iw6_0_phi_fu_563_p4 + 4'd1);

assign iw_3_fu_1132_p2 = (4'd1 + ap_phi_mux_iw8_0_phi_fu_596_p4);

assign iw_4_fu_1607_p2 = (4'd1 + ap_phi_mux_iw10_0_phi_fu_653_p4);

assign iw_fu_841_p2 = (ap_phi_mux_iw_0_phi_fu_497_p4 + 4'd1);

assign lshr_ln286_fu_1923_p2 = tmp_28_fu_1859_p3 >> sext_ln281_fu_1879_p1;

assign mask_table2_address0 = zext_ln498_fu_1727_p1;

assign om_1_fu_954_p2 = (select_ln66_fu_938_p3 + 4'd1);

assign om_2_fu_1057_p2 = (select_ln73_fu_1036_p3 + 4'd1);

assign om_3_fu_1160_p2 = (4'd1 + select_ln80_fu_1144_p3);

assign om_4_fu_1635_p2 = (4'd1 + select_ln100_fu_1619_p3);

assign om_fu_869_p2 = (select_ln58_fu_853_p3 + 4'd1);

assign one_half_table3_address0 = zext_ln498_fu_1727_p1;

assign or_ln282_fu_1933_p2 = (icmp_ln282_fu_1883_p2 | icmp_ln278_fu_1867_p2);

assign or_ln284_fu_1965_p2 = (or_ln282_fu_1933_p2 | icmp_ln284_fu_1889_p2);

assign or_ln81_1_fu_1401_p2 = (icmp_ln81_3_reg_2337 | icmp_ln81_2_reg_2332);

assign or_ln81_fu_1353_p2 = (icmp_ln81_fu_1341_p2 | icmp_ln81_1_fu_1347_p2);

assign or_ln83_fu_1423_p2 = (icmp_ln83_reg_2342 | icmp_ln83_1_reg_2347);

assign or_ln87_1_fu_1234_p2 = (icmp_ln87_3_fu_1228_p2 | icmp_ln87_2_fu_1222_p2);

assign or_ln87_fu_1475_p2 = (icmp_ln87_fu_1463_p2 | icmp_ln87_1_fu_1469_p2);

assign or_ln89_1_fu_1570_p2 = (icmp_ln89_3_fu_1564_p2 | icmp_ln89_2_fu_1558_p2);

assign or_ln89_2_fu_1261_p2 = (icmp_ln89_5_reg_2279 | icmp_ln89_4_fu_1255_p2);

assign or_ln89_fu_1552_p2 = (icmp_ln89_fu_1540_p2 | icmp_ln89_1_fu_1546_p2);

assign out_stream_V_V_din = outprepare_int_V_reg_2520;

assign outprepare_int_V_fu_2064_p3 = ((p_Result_19_reg_2473[0:0] === 1'b1) ? sub_ln461_fu_2058_p2 : select_ln282_fu_2051_p3);

assign p_Result_16_fu_1737_p3 = {{p_Result_15_reg_2416_pp5_iter8_reg}, {63'd0}};

assign p_Result_17_fu_1748_p3 = {{p_Result_15_reg_2416_pp5_iter8_reg}, {trunc_ln368_reg_2448}};

assign p_Result_18_fu_1786_p3 = {{tmp_58_fu_1776_p4}, {xs_sig_V_fu_1770_p2}};

assign p_Result_s_fu_1837_p4 = {{reg_V_fu_1822_p1[30:23]}};

assign p_Val2_19_fu_1754_p2 = (zext_ln209_fu_1744_p1 + p_Result_17_fu_1748_p3);

assign p_Val2_s_fu_1691_p1 = grp_fu_695_p1;

assign p_shl_cast_fu_964_p3 = {{select_ln66_2_reg_2169}, {4'd0}};

assign pw12gru_scale_V_din = reg_721;

assign pw_weight1_V_address0 = zext_ln66_1_fu_988_p1;

assign reg_V_fu_1822_p1 = outprepare_reg_2463;

assign select_ln100_1_fu_1627_p3 = ((icmp_ln98_fu_1613_p2[0:0] === 1'b1) ? iw_4_fu_1607_p2 : ap_phi_mux_iw10_0_phi_fu_653_p4);

assign select_ln100_fu_1619_p3 = ((icmp_ln98_fu_1613_p2[0:0] === 1'b1) ? 4'd0 : om11_0_reg_660);

assign select_ln278_fu_2016_p3 = ((icmp_ln278_reg_2484[0:0] === 1'b1) ? 8'd0 : select_ln295_fu_2010_p3);

assign select_ln282_fu_2051_p3 = ((and_ln282_fu_2046_p2[0:0] === 1'b1) ? trunc_ln283_reg_2478 : select_ln285_2_fu_2033_p3);

assign select_ln285_2_fu_2033_p3 = ((and_ln285_2_fu_2028_p2[0:0] === 1'b1) ? select_ln288_fu_1993_p3 : select_ln278_fu_2016_p3);

assign select_ln285_fu_1957_p3 = ((and_ln285_fu_1951_p2[0:0] === 1'b1) ? trunc_ln286_fu_1929_p1 : 8'd0);

assign select_ln288_fu_1993_p3 = ((tmp_39_fu_1986_p3[0:0] === 1'b1) ? 8'd255 : 8'd0);

assign select_ln295_fu_2010_p3 = ((and_ln295_reg_2515[0:0] === 1'b1) ? shl_ln297_fu_2005_p2 : select_ln285_reg_2510);

assign select_ln58_1_fu_861_p3 = ((icmp_ln55_fu_847_p2[0:0] === 1'b1) ? iw_fu_841_p2 : ap_phi_mux_iw_0_phi_fu_497_p4);

assign select_ln58_fu_853_p3 = ((icmp_ln55_fu_847_p2[0:0] === 1'b1) ? 4'd0 : om_0_reg_504);

assign select_ln66_2_fu_946_p3 = ((icmp_ln64_fu_932_p2[0:0] === 1'b1) ? iw_1_fu_926_p2 : ap_phi_mux_iw4_0_phi_fu_530_p4);

assign select_ln66_fu_938_p3 = ((icmp_ln64_fu_932_p2[0:0] === 1'b1) ? 4'd0 : om5_0_reg_537);

assign select_ln73_1_fu_1044_p3 = ((icmp_ln71_fu_1030_p2[0:0] === 1'b1) ? iw_2_fu_1024_p2 : ap_phi_mux_iw6_0_phi_fu_563_p4);

assign select_ln73_fu_1036_p3 = ((icmp_ln71_fu_1030_p2[0:0] === 1'b1) ? 4'd0 : om7_0_reg_570);

assign select_ln80_1_fu_1152_p3 = ((icmp_ln78_fu_1138_p2[0:0] === 1'b1) ? iw_3_fu_1132_p2 : ap_phi_mux_iw8_0_phi_fu_596_p4);

assign select_ln80_fu_1144_p3 = ((icmp_ln78_fu_1138_p2[0:0] === 1'b1) ? 4'd0 : om9_0_reg_627);

assign select_ln849_fu_1794_p3 = ((icmp_ln849_reg_2427[0:0] === 1'b1) ? p_Result_16_fu_1737_p3 : p_Result_18_fu_1786_p3);

assign select_ln89_1_fu_1290_p3 = ((and_ln89_4_fu_1284_p2[0:0] === 1'b1) ? reg_721 : reg_736);

assign select_ln89_fu_1588_p3 = ((and_ln89_1_fu_1582_p2[0:0] === 1'b1) ? tmp_max_1_reg_615 : tmp_min_2_reg_2367);

assign sext_ln100_fu_1674_p1 = $signed(add_ln100_fu_1668_p2);

assign sext_ln180_fu_908_p1 = $signed(add_ln180_fu_902_p2);

assign sext_ln281_fu_1879_p1 = sh_amt_fu_1873_p2;

assign sext_ln294_fu_1983_p1 = sh_amt_2_reg_2500;

assign sext_ln294cast_fu_2001_p1 = sext_ln294_fu_1983_p1[7:0];

assign sext_ln42_fu_795_p1 = $signed(add_ln42_2_fu_790_p2);

assign sext_ln544_fu_1101_p1 = $signed(add_ln544_fu_1095_p2);

assign sext_ln80_fu_1199_p1 = $signed(add_ln80_fu_1193_p2);

assign sh_amt_2_fu_1901_p2 = ($signed(9'd0) - $signed(sh_amt_fu_1873_p2));

assign sh_amt_fu_1873_p2 = (9'd150 - exp_V_fu_1847_p1);

assign shl_ln297_fu_2005_p2 = trunc_ln283_reg_2478 << sext_ln294cast_fu_2001_p1;

assign sub_ln100_fu_1659_p2 = (tmp_56_fu_1641_p3 - zext_ln100_fu_1655_p1);

assign sub_ln180_fu_893_p2 = (tmp_50_fu_875_p3 - zext_ln180_fu_889_p1);

assign sub_ln215_fu_982_p2 = (p_shl_cast_fu_964_p3 - zext_ln215_fu_978_p1);

assign sub_ln42_fu_774_p2 = (zext_ln42_fu_758_p1 - zext_ln42_1_fu_770_p1);

assign sub_ln461_fu_2058_p2 = (8'd0 - select_ln282_fu_2051_p3);

assign sub_ln544_fu_1086_p2 = (tmp_52_fu_1068_p3 - zext_ln544_fu_1082_p1);

assign sub_ln80_fu_1184_p2 = (tmp_54_fu_1166_p3 - zext_ln80_fu_1180_p1);

assign tmp_15_fu_1449_p4 = {{bitcast_ln87_fu_1445_p1[30:23]}};

assign tmp_20_fu_1509_p4 = {{bitcast_ln89_fu_1505_p1[30:23]}};

assign tmp_21_fu_1526_p4 = {{bitcast_ln89_1_fu_1523_p1[30:23]}};

assign tmp_24_fu_1208_p4 = {{bitcast_ln87_1_fu_1204_p1[30:23]}};

assign tmp_26_fu_1246_p4 = {{bitcast_ln89_2_reg_2274[30:23]}};

assign tmp_28_fu_1859_p3 = {{1'd1}, {trunc_ln270_fu_1851_p1}};

assign tmp_30_fu_1309_p4 = {{bitcast_ln81_fu_1306_p1[30:23]}};

assign tmp_31_fu_1327_p4 = {{bitcast_ln81_1_fu_1323_p1[30:23]}};

assign tmp_33_fu_1375_p4 = {{bitcast_ln83_fu_1371_p1[30:23]}};

assign tmp_38_fu_1907_p4 = {{sh_amt_2_fu_1901_p2[8:3]}};

assign tmp_39_fu_1986_p3 = reg_V_reg_2468[32'd31];

assign tmp_48_fu_750_p3 = {{phi_ln42_reg_447}, {4'd0}};

assign tmp_49_fu_762_p3 = {{phi_ln42_reg_447}, {2'd0}};

assign tmp_50_fu_875_p3 = {{select_ln58_1_reg_2142}, {4'd0}};

assign tmp_51_fu_882_p3 = {{select_ln58_1_reg_2142}, {2'd0}};

assign tmp_52_fu_1068_p3 = {{select_ln73_1_reg_2222_pp3_iter2_reg}, {4'd0}};

assign tmp_53_fu_1075_p3 = {{select_ln73_1_reg_2222_pp3_iter2_reg}, {2'd0}};

assign tmp_54_fu_1166_p3 = {{select_ln80_1_reg_2298}, {4'd0}};

assign tmp_55_fu_1173_p3 = {{select_ln80_1_reg_2298}, {2'd0}};

assign tmp_56_fu_1641_p3 = {{select_ln100_1_reg_2399}, {4'd0}};

assign tmp_57_fu_1648_p3 = {{select_ln100_1_reg_2399}, {2'd0}};

assign tmp_58_fu_1776_p4 = {{p_Val2_19_fu_1754_p2[63:52]}};

assign tmp_V_4_fu_1695_p4 = {{p_Val2_s_fu_1691_p1[62:52]}};

assign tmp_V_5_fu_1760_p1 = p_Val2_19_fu_1754_p2[51:0];

assign tmp_fu_971_p3 = {{select_ln66_2_reg_2169}, {2'd0}};

assign tmp_max_fu_1298_p3 = ((and_ln87_1_fu_1240_p2[0:0] === 1'b1) ? 32'd0 : select_ln89_1_fu_1290_p3);

assign tmp_min_2_fu_1496_p3 = ((and_ln87_fu_1481_p2[0:0] === 1'b1) ? tmp_min_fu_1492_p1 : tmp_min_1_reg_603);

assign tmp_min_3_fu_1416_p3 = ((and_ln81_1_fu_1410_p2[0:0] === 1'b1) ? tmp_max_reg_2316_pp4_iter4_reg : tmp_max_1_reg_615);

assign tmp_min_5_fu_1438_p3 = ((and_ln83_1_fu_1432_p2[0:0] === 1'b1) ? tmp_max_reg_2316_pp4_iter4_reg : tmp_min_1_reg_603);

assign tmp_min_fu_1492_p1 = xor_ln88_fu_1486_p2;

assign trunc_ln262_fu_1825_p1 = reg_V_fu_1822_p1[30:0];

assign trunc_ln270_fu_1851_p1 = reg_V_fu_1822_p1[22:0];

assign trunc_ln283_fu_1855_p1 = reg_V_fu_1822_p1[7:0];

assign trunc_ln286_fu_1929_p1 = lshr_ln286_fu_1923_p2[7:0];

assign trunc_ln368_fu_1733_p1 = p_Val2_s_fu_1691_p1[62:0];

assign trunc_ln81_1_fu_1337_p1 = bitcast_ln81_1_fu_1323_p1[22:0];

assign trunc_ln81_fu_1319_p1 = bitcast_ln81_fu_1306_p1[22:0];

assign trunc_ln83_fu_1385_p1 = bitcast_ln83_fu_1371_p1[22:0];

assign trunc_ln87_1_fu_1218_p1 = bitcast_ln87_1_fu_1204_p1[22:0];

assign trunc_ln87_fu_1459_p1 = bitcast_ln87_fu_1445_p1[22:0];

assign trunc_ln89_1_fu_1519_p1 = bitcast_ln89_fu_1505_p1[22:0];

assign trunc_ln89_2_fu_1536_p1 = bitcast_ln89_1_fu_1523_p1[22:0];

assign trunc_ln89_fu_1110_p1 = bitcast_ln89_2_fu_1106_p1[22:0];

assign w_fu_818_p2 = (ap_phi_mux_w_0_phi_fu_474_p4 + 4'd1);

assign xor_ln1309_fu_1764_p2 = (mask_table2_q0 ^ 52'd4503599627370495);

assign xor_ln278_fu_2041_p2 = (icmp_ln278_reg_2484 ^ 1'd1);

assign xor_ln282_fu_1939_p2 = (or_ln282_fu_1933_p2 ^ 1'd1);

assign xor_ln284_fu_1971_p2 = (or_ln284_fu_1965_p2 ^ 1'd1);

assign xor_ln285_fu_2023_p2 = (icmp_ln285_reg_2495 ^ 1'd1);

assign xor_ln849_fu_1805_p2 = (icmp_ln849_reg_2427_pp5_iter9_reg ^ 1'd1);

assign xor_ln87_fu_1278_p2 = (1'd1 ^ and_ln87_1_fu_1240_p2);

assign xor_ln88_fu_1486_p2 = (bitcast_ln87_fu_1445_p1 ^ 32'd2147483648);

assign xs_sig_V_fu_1770_p2 = (xor_ln1309_fu_1764_p2 & tmp_V_5_fu_1760_p1);

assign zext_ln100_1_fu_1665_p1 = select_ln100_reg_2394;

assign zext_ln100_fu_1655_p1 = tmp_57_fu_1648_p3;

assign zext_ln180_33_fu_899_p1 = select_ln58_reg_2137;

assign zext_ln180_fu_889_p1 = tmp_51_fu_882_p3;

assign zext_ln209_fu_1744_p1 = one_half_table3_q0;

assign zext_ln215_1_fu_992_p1 = select_ln66_reg_2163;

assign zext_ln215_2_fu_1001_p1 = add_ln215_fu_995_p2;

assign zext_ln215_fu_978_p1 = tmp_fu_971_p3;

assign zext_ln42_1_fu_770_p1 = tmp_49_fu_762_p3;

assign zext_ln42_2_fu_786_p1 = phi_ln42_1_reg_459;

assign zext_ln42_fu_758_p1 = tmp_48_fu_750_p3;

assign zext_ln498_fu_1727_p1 = index_V_fu_1717_p4;

assign zext_ln51_fu_824_p1 = w_0_reg_470;

assign zext_ln544_1_fu_1092_p1 = select_ln73_reg_2217_pp3_iter2_reg;

assign zext_ln544_fu_1082_p1 = tmp_53_fu_1075_p3;

assign zext_ln66_1_fu_988_p1 = select_ln66_reg_2163;

assign zext_ln66_fu_960_p1 = select_ln66_2_reg_2169;

assign zext_ln73_fu_1052_p1 = select_ln73_fu_1036_p3;

assign zext_ln80_1_fu_1190_p1 = select_ln80_reg_2293;

assign zext_ln80_fu_1180_p1 = tmp_55_fu_1173_p3;

always @ (posedge ap_clk) begin
    sub_ln42_reg_2101[1:0] <= 2'b00;
end

endmodule //pw_layer1

// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module kfft (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        pr_0_address0,
        pr_0_ce0,
        pr_0_q0,
        pr_0_address1,
        pr_0_ce1,
        pr_0_we1,
        pr_0_d1,
        pr_1_address0,
        pr_1_ce0,
        pr_1_q0,
        pr_1_address1,
        pr_1_ce1,
        pr_1_we1,
        pr_1_d1,
        pr_1_q1,
        pr_2_address0,
        pr_2_ce0,
        pr_2_q0,
        pr_2_address1,
        pr_2_ce1,
        pr_2_we1,
        pr_2_d1,
        pr_3_address0,
        pr_3_ce0,
        pr_3_q0,
        pr_3_address1,
        pr_3_ce1,
        pr_3_we1,
        pr_3_d1,
        pi_0_address0,
        pi_0_ce0,
        pi_0_q0,
        pi_0_address1,
        pi_0_ce1,
        pi_0_we1,
        pi_0_d1,
        pi_1_address0,
        pi_1_ce0,
        pi_1_q0,
        pi_1_address1,
        pi_1_ce1,
        pi_1_we1,
        pi_1_d1,
        pi_1_q1,
        pi_2_address0,
        pi_2_ce0,
        pi_2_q0,
        pi_2_address1,
        pi_2_ce1,
        pi_2_we1,
        pi_2_d1,
        pi_3_address0,
        pi_3_ce0,
        pi_3_q0,
        pi_3_address1,
        pi_3_ce1,
        pi_3_we1,
        pi_3_d1,
        fr_0_address0,
        fr_0_ce0,
        fr_0_q0,
        fr_0_address1,
        fr_0_ce1,
        fr_0_we1,
        fr_0_d1,
        fr_1_address0,
        fr_1_ce0,
        fr_1_q0,
        fr_1_address1,
        fr_1_ce1,
        fr_1_we1,
        fr_1_d1,
        fr_2_address0,
        fr_2_ce0,
        fr_2_q0,
        fr_2_address1,
        fr_2_ce1,
        fr_2_we1,
        fr_2_d1,
        fr_3_address0,
        fr_3_ce0,
        fr_3_q0,
        fr_3_address1,
        fr_3_ce1,
        fr_3_we1,
        fr_3_d1,
        fi_0_address0,
        fi_0_ce0,
        fi_0_q0,
        fi_0_address1,
        fi_0_ce1,
        fi_0_we1,
        fi_0_d1,
        fi_1_address0,
        fi_1_ce0,
        fi_1_q0,
        fi_1_address1,
        fi_1_ce1,
        fi_1_we1,
        fi_1_d1,
        fi_2_address0,
        fi_2_ce0,
        fi_2_q0,
        fi_2_address1,
        fi_2_ce1,
        fi_2_we1,
        fi_2_d1,
        fi_3_address0,
        fi_3_ce0,
        fi_3_q0,
        fi_3_address1,
        fi_3_ce1,
        fi_3_we1,
        fi_3_d1
);

parameter    ap_ST_fsm_state1 = 75'd1;
parameter    ap_ST_fsm_state2 = 75'd2;
parameter    ap_ST_fsm_state3 = 75'd4;
parameter    ap_ST_fsm_state4 = 75'd8;
parameter    ap_ST_fsm_state5 = 75'd16;
parameter    ap_ST_fsm_state6 = 75'd32;
parameter    ap_ST_fsm_state7 = 75'd64;
parameter    ap_ST_fsm_state8 = 75'd128;
parameter    ap_ST_fsm_state9 = 75'd256;
parameter    ap_ST_fsm_state10 = 75'd512;
parameter    ap_ST_fsm_state11 = 75'd1024;
parameter    ap_ST_fsm_state12 = 75'd2048;
parameter    ap_ST_fsm_state13 = 75'd4096;
parameter    ap_ST_fsm_state14 = 75'd8192;
parameter    ap_ST_fsm_state15 = 75'd16384;
parameter    ap_ST_fsm_state16 = 75'd32768;
parameter    ap_ST_fsm_state17 = 75'd65536;
parameter    ap_ST_fsm_state18 = 75'd131072;
parameter    ap_ST_fsm_state19 = 75'd262144;
parameter    ap_ST_fsm_state20 = 75'd524288;
parameter    ap_ST_fsm_state21 = 75'd1048576;
parameter    ap_ST_fsm_state22 = 75'd2097152;
parameter    ap_ST_fsm_state23 = 75'd4194304;
parameter    ap_ST_fsm_state24 = 75'd8388608;
parameter    ap_ST_fsm_state25 = 75'd16777216;
parameter    ap_ST_fsm_state26 = 75'd33554432;
parameter    ap_ST_fsm_state27 = 75'd67108864;
parameter    ap_ST_fsm_state28 = 75'd134217728;
parameter    ap_ST_fsm_state29 = 75'd268435456;
parameter    ap_ST_fsm_state30 = 75'd536870912;
parameter    ap_ST_fsm_state31 = 75'd1073741824;
parameter    ap_ST_fsm_state32 = 75'd2147483648;
parameter    ap_ST_fsm_state33 = 75'd4294967296;
parameter    ap_ST_fsm_state34 = 75'd8589934592;
parameter    ap_ST_fsm_state35 = 75'd17179869184;
parameter    ap_ST_fsm_state36 = 75'd34359738368;
parameter    ap_ST_fsm_state37 = 75'd68719476736;
parameter    ap_ST_fsm_state38 = 75'd137438953472;
parameter    ap_ST_fsm_state39 = 75'd274877906944;
parameter    ap_ST_fsm_state40 = 75'd549755813888;
parameter    ap_ST_fsm_state41 = 75'd1099511627776;
parameter    ap_ST_fsm_state42 = 75'd2199023255552;
parameter    ap_ST_fsm_state43 = 75'd4398046511104;
parameter    ap_ST_fsm_state44 = 75'd8796093022208;
parameter    ap_ST_fsm_state45 = 75'd17592186044416;
parameter    ap_ST_fsm_state46 = 75'd35184372088832;
parameter    ap_ST_fsm_state47 = 75'd70368744177664;
parameter    ap_ST_fsm_state48 = 75'd140737488355328;
parameter    ap_ST_fsm_state49 = 75'd281474976710656;
parameter    ap_ST_fsm_state50 = 75'd562949953421312;
parameter    ap_ST_fsm_state51 = 75'd1125899906842624;
parameter    ap_ST_fsm_state52 = 75'd2251799813685248;
parameter    ap_ST_fsm_state53 = 75'd4503599627370496;
parameter    ap_ST_fsm_state54 = 75'd9007199254740992;
parameter    ap_ST_fsm_state55 = 75'd18014398509481984;
parameter    ap_ST_fsm_state56 = 75'd36028797018963968;
parameter    ap_ST_fsm_state57 = 75'd72057594037927936;
parameter    ap_ST_fsm_state58 = 75'd144115188075855872;
parameter    ap_ST_fsm_state59 = 75'd288230376151711744;
parameter    ap_ST_fsm_state60 = 75'd576460752303423488;
parameter    ap_ST_fsm_state61 = 75'd1152921504606846976;
parameter    ap_ST_fsm_state62 = 75'd2305843009213693952;
parameter    ap_ST_fsm_state63 = 75'd4611686018427387904;
parameter    ap_ST_fsm_state64 = 75'd9223372036854775808;
parameter    ap_ST_fsm_state65 = 75'd18446744073709551616;
parameter    ap_ST_fsm_state66 = 75'd36893488147419103232;
parameter    ap_ST_fsm_state67 = 75'd73786976294838206464;
parameter    ap_ST_fsm_state68 = 75'd147573952589676412928;
parameter    ap_ST_fsm_state69 = 75'd295147905179352825856;
parameter    ap_ST_fsm_state70 = 75'd590295810358705651712;
parameter    ap_ST_fsm_state71 = 75'd1180591620717411303424;
parameter    ap_ST_fsm_state72 = 75'd2361183241434822606848;
parameter    ap_ST_fsm_state73 = 75'd4722366482869645213696;
parameter    ap_ST_fsm_state74 = 75'd9444732965739290427392;
parameter    ap_ST_fsm_state75 = 75'd18889465931478580854784;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [6:0] pr_0_address0;
output   pr_0_ce0;
input  [31:0] pr_0_q0;
output  [6:0] pr_0_address1;
output   pr_0_ce1;
output   pr_0_we1;
output  [31:0] pr_0_d1;
output  [6:0] pr_1_address0;
output   pr_1_ce0;
input  [31:0] pr_1_q0;
output  [6:0] pr_1_address1;
output   pr_1_ce1;
output   pr_1_we1;
output  [31:0] pr_1_d1;
input  [31:0] pr_1_q1;
output  [6:0] pr_2_address0;
output   pr_2_ce0;
input  [31:0] pr_2_q0;
output  [6:0] pr_2_address1;
output   pr_2_ce1;
output   pr_2_we1;
output  [31:0] pr_2_d1;
output  [6:0] pr_3_address0;
output   pr_3_ce0;
input  [31:0] pr_3_q0;
output  [6:0] pr_3_address1;
output   pr_3_ce1;
output   pr_3_we1;
output  [31:0] pr_3_d1;
output  [6:0] pi_0_address0;
output   pi_0_ce0;
input  [31:0] pi_0_q0;
output  [6:0] pi_0_address1;
output   pi_0_ce1;
output   pi_0_we1;
output  [31:0] pi_0_d1;
output  [6:0] pi_1_address0;
output   pi_1_ce0;
input  [31:0] pi_1_q0;
output  [6:0] pi_1_address1;
output   pi_1_ce1;
output   pi_1_we1;
output  [31:0] pi_1_d1;
input  [31:0] pi_1_q1;
output  [6:0] pi_2_address0;
output   pi_2_ce0;
input  [31:0] pi_2_q0;
output  [6:0] pi_2_address1;
output   pi_2_ce1;
output   pi_2_we1;
output  [31:0] pi_2_d1;
output  [6:0] pi_3_address0;
output   pi_3_ce0;
input  [31:0] pi_3_q0;
output  [6:0] pi_3_address1;
output   pi_3_ce1;
output   pi_3_we1;
output  [31:0] pi_3_d1;
output  [6:0] fr_0_address0;
output   fr_0_ce0;
input  [31:0] fr_0_q0;
output  [6:0] fr_0_address1;
output   fr_0_ce1;
output   fr_0_we1;
output  [31:0] fr_0_d1;
output  [6:0] fr_1_address0;
output   fr_1_ce0;
input  [31:0] fr_1_q0;
output  [6:0] fr_1_address1;
output   fr_1_ce1;
output   fr_1_we1;
output  [31:0] fr_1_d1;
output  [6:0] fr_2_address0;
output   fr_2_ce0;
input  [31:0] fr_2_q0;
output  [6:0] fr_2_address1;
output   fr_2_ce1;
output   fr_2_we1;
output  [31:0] fr_2_d1;
output  [6:0] fr_3_address0;
output   fr_3_ce0;
input  [31:0] fr_3_q0;
output  [6:0] fr_3_address1;
output   fr_3_ce1;
output   fr_3_we1;
output  [31:0] fr_3_d1;
output  [6:0] fi_0_address0;
output   fi_0_ce0;
input  [31:0] fi_0_q0;
output  [6:0] fi_0_address1;
output   fi_0_ce1;
output   fi_0_we1;
output  [31:0] fi_0_d1;
output  [6:0] fi_1_address0;
output   fi_1_ce0;
input  [31:0] fi_1_q0;
output  [6:0] fi_1_address1;
output   fi_1_ce1;
output   fi_1_we1;
output  [31:0] fi_1_d1;
output  [6:0] fi_2_address0;
output   fi_2_ce0;
input  [31:0] fi_2_q0;
output  [6:0] fi_2_address1;
output   fi_2_ce1;
output   fi_2_we1;
output  [31:0] fi_2_d1;
output  [6:0] fi_3_address0;
output   fi_3_ce0;
input  [31:0] fi_3_q0;
output  [6:0] fi_3_address1;
output   fi_3_ce1;
output   fi_3_we1;
output  [31:0] fi_3_d1;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[6:0] pr_0_address0;
reg pr_0_ce0;
reg[6:0] pr_0_address1;
reg pr_0_ce1;
reg pr_0_we1;
reg[31:0] pr_0_d1;
reg[6:0] pr_1_address0;
reg pr_1_ce0;
reg[6:0] pr_1_address1;
reg pr_1_ce1;
reg pr_1_we1;
reg[31:0] pr_1_d1;
reg[6:0] pr_2_address0;
reg pr_2_ce0;
reg pr_2_ce1;
reg pr_2_we1;
reg[6:0] pr_3_address0;
reg pr_3_ce0;
reg pr_3_ce1;
reg pr_3_we1;
reg[6:0] pi_0_address0;
reg pi_0_ce0;
reg[6:0] pi_0_address1;
reg pi_0_ce1;
reg pi_0_we1;
reg[31:0] pi_0_d1;
reg[6:0] pi_1_address0;
reg pi_1_ce0;
reg[6:0] pi_1_address1;
reg pi_1_ce1;
reg pi_1_we1;
reg[31:0] pi_1_d1;
reg[6:0] pi_2_address0;
reg pi_2_ce0;
reg pi_2_ce1;
reg pi_2_we1;
reg[6:0] pi_3_address0;
reg pi_3_ce0;
reg pi_3_ce1;
reg pi_3_we1;
reg[6:0] fr_0_address0;
reg fr_0_ce0;
reg[6:0] fr_0_address1;
reg fr_0_ce1;
reg fr_0_we1;
reg[31:0] fr_0_d1;
reg[6:0] fr_1_address0;
reg fr_1_ce0;
reg[6:0] fr_1_address1;
reg fr_1_ce1;
reg fr_1_we1;
reg[31:0] fr_1_d1;
reg[6:0] fr_2_address0;
reg fr_2_ce0;
reg[6:0] fr_2_address1;
reg fr_2_ce1;
reg fr_2_we1;
reg[31:0] fr_2_d1;
reg[6:0] fr_3_address0;
reg fr_3_ce0;
reg[6:0] fr_3_address1;
reg fr_3_ce1;
reg fr_3_we1;
reg[31:0] fr_3_d1;
reg[6:0] fi_0_address0;
reg fi_0_ce0;
reg[6:0] fi_0_address1;
reg fi_0_ce1;
reg fi_0_we1;
reg[31:0] fi_0_d1;
reg[6:0] fi_1_address0;
reg fi_1_ce0;
reg[6:0] fi_1_address1;
reg fi_1_ce1;
reg fi_1_we1;
reg[31:0] fi_1_d1;
reg[6:0] fi_2_address0;
reg fi_2_ce0;
reg[6:0] fi_2_address1;
reg fi_2_ce1;
reg fi_2_we1;
reg[31:0] fi_2_d1;
reg[6:0] fi_3_address0;
reg fi_3_ce0;
reg[6:0] fi_3_address1;
reg fi_3_ce1;
reg fi_3_we1;
reg[31:0] fi_3_d1;

(* fsm_encoding = "none" *) reg   [74:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire   [31:0] grp_fu_1043_p2;
reg   [31:0] reg_1082;
wire    ap_CS_fsm_state10;
wire    ap_CS_fsm_state39;
reg   [31:0] reg_1089;
wire    ap_CS_fsm_state11;
wire    ap_CS_fsm_state44;
wire   [31:0] grp_fu_1008_p2;
wire    ap_CS_fsm_state18;
wire   [31:0] grp_fu_1012_p2;
reg   [31:0] reg_1102;
wire    ap_CS_fsm_state40;
wire    ap_CS_fsm_state48;
wire    ap_CS_fsm_state67;
wire    ap_CS_fsm_state74;
wire   [31:0] grp_fu_1056_p6;
reg   [31:0] reg_1117;
wire    ap_CS_fsm_state62;
reg   [31:0] reg_1122;
wire    ap_CS_fsm_state49;
wire    ap_CS_fsm_state54;
reg   [31:0] reg_1128;
wire    ap_CS_fsm_state53;
wire    ap_CS_fsm_state60;
wire   [31:0] grp_fu_1069_p6;
reg   [31:0] reg_1140;
wire    ap_CS_fsm_state55;
wire    ap_CS_fsm_state69;
wire   [15:0] zext_ln21_fu_1145_p1;
wire    ap_CS_fsm_state2;
wire   [0:0] icmp_ln21_fu_1149_p2;
wire   [9:0] it_fu_1155_p2;
reg   [9:0] it_reg_1965;
wire   [6:0] pr_1_addr_reg_1970;
wire   [6:0] pi_1_addr_reg_1975;
wire   [3:0] i_28_fu_1167_p2;
reg   [3:0] i_28_reg_1983;
wire    ap_CS_fsm_state3;
reg   [14:0] lshr_ln28_1_reg_1988;
wire   [0:0] icmp_ln26_fu_1161_p2;
wire   [15:0] j_10_fu_1242_p3;
wire    ap_CS_fsm_state4;
wire   [15:0] is_fu_1268_p2;
wire   [1:0] trunc_ln46_1_fu_1354_p1;
reg   [1:0] trunc_ln46_1_reg_2049;
wire    ap_CS_fsm_state6;
wire   [0:0] icmp_ln43_fu_1344_p2;
wire   [1:0] add_ln46_1_fu_1364_p2;
reg   [1:0] add_ln46_1_reg_2053;
reg   [7:0] lshr_ln2_reg_2098;
wire   [31:0] tmp_279_fu_1405_p6;
wire    ap_CS_fsm_state7;
wire   [31:0] tmp_280_fu_1421_p6;
reg   [31:0] tmp_280_reg_2115;
reg   [31:0] pi_1_load_reg_2121;
wire    ap_CS_fsm_state14;
reg   [6:0] pi_0_addr_reg_2132;
wire    ap_CS_fsm_state15;
reg   [6:0] pi_1_addr_1_reg_2137;
reg   [6:0] pi_2_addr_reg_2142;
reg   [6:0] pi_3_addr_reg_2147;
wire   [9:0] i_fu_1447_p2;
wire    ap_CS_fsm_state22;
reg   [6:0] fr_0_addr_1_reg_2160;
wire    ap_CS_fsm_state24;
wire   [0:0] icmp_ln53_fu_1453_p2;
reg   [6:0] fr_2_addr_1_reg_2166;
wire   [0:0] icmp_ln56_fu_1481_p2;
reg   [0:0] icmp_ln56_reg_2172;
reg   [6:0] fi_0_addr_1_reg_2178;
reg   [6:0] fi_2_addr_1_reg_2184;
reg   [6:0] fr_1_addr_1_reg_2190;
reg   [6:0] fr_3_addr_1_reg_2196;
wire   [0:0] icmp_ln58_fu_1511_p2;
reg   [0:0] icmp_ln58_reg_2202;
reg   [6:0] fi_1_addr_3_reg_2208;
reg   [6:0] fi_3_addr_3_reg_2214;
wire   [31:0] vr_fu_1517_p3;
wire    ap_CS_fsm_state25;
wire   [31:0] vi_fu_1526_p3;
wire   [31:0] select_ln58_fu_1535_p3;
wire   [31:0] select_ln58_1_fu_1544_p3;
wire   [9:0] it_4_fu_1553_p2;
wire    ap_CS_fsm_state29;
wire  signed [15:0] m_3_fu_1615_p3;
reg  signed [15:0] m_3_reg_2252;
wire    ap_CS_fsm_state31;
wire   [0:0] tmp_92_fu_1559_p3;
wire   [15:0] add_ln74_fu_1623_p2;
reg  signed [15:0] add_ln74_reg_2258;
wire  signed [31:0] sext_ln74_fu_1629_p1;
reg  signed [31:0] sext_ln74_reg_2263;
wire    ap_CS_fsm_state32;
wire  signed [31:0] mul_ln74_fu_1940_p2;
reg  signed [31:0] mul_ln74_reg_2268;
wire  signed [17:0] sext_ln78_2_fu_1703_p1;
reg  signed [17:0] sext_ln78_2_reg_2273;
wire   [16:0] add_ln78_fu_1707_p2;
reg   [16:0] add_ln78_reg_2278;
wire   [1:0] trunc_ln81_fu_1713_p1;
reg   [1:0] trunc_ln81_reg_2283;
wire   [1:0] trunc_ln81_2_fu_1726_p1;
reg   [1:0] trunc_ln81_2_reg_2291;
wire    ap_CS_fsm_state33;
wire   [0:0] icmp_ln74_fu_1721_p2;
wire   [3:0] l0_fu_1730_p2;
wire   [15:0] shl_ln68_fu_1736_p2;
wire   [15:0] j_fu_1751_p2;
reg   [15:0] j_reg_2309;
wire    ap_CS_fsm_state34;
wire   [31:0] add_ln81_4_fu_1757_p2;
reg   [31:0] add_ln81_4_reg_2314;
wire   [0:0] icmp_ln78_fu_1746_p2;
wire   [1:0] trunc_ln81_3_fu_1762_p1;
reg   [1:0] trunc_ln81_3_reg_2319;
wire   [1:0] add_ln81_2_fu_1806_p2;
reg   [1:0] add_ln81_2_reg_2344;
reg   [6:0] fr_0_addr_2_reg_2350;
reg   [6:0] fr_1_addr_2_reg_2356;
reg   [6:0] fr_2_addr_2_reg_2362;
reg   [6:0] fr_3_addr_2_reg_2368;
reg   [6:0] fi_0_addr_2_reg_2394;
reg   [6:0] fi_1_addr_1_reg_2400;
reg   [6:0] fi_2_addr_2_reg_2406;
reg   [6:0] fi_3_addr_1_reg_2412;
reg   [14:0] trunc_ln_reg_2418;
wire   [15:0] it_3_fu_1852_p2;
wire   [31:0] tmp_283_fu_1861_p6;
reg   [31:0] tmp_283_reg_2428;
wire    ap_CS_fsm_state35;
wire   [1:0] add_ln81_3_fu_1875_p2;
reg   [1:0] add_ln81_3_reg_2434;
wire   [31:0] tmp_284_fu_1883_p6;
reg   [31:0] tmp_284_reg_2438;
wire   [31:0] tmp_285_fu_1897_p6;
reg   [31:0] tmp_285_reg_2444;
wire   [31:0] tmp_286_fu_1911_p6;
reg   [31:0] tmp_286_reg_2450;
wire   [31:0] grp_fu_1052_p2;
reg   [31:0] q_1_reg_2456;
wire   [31:0] grp_fu_1031_p2;
reg   [31:0] tmp_246_reg_2461;
wire   [63:0] zext_ln87_1_fu_1928_p1;
reg   [63:0] zext_ln87_1_reg_2466;
wire    ap_CS_fsm_state47;
reg   [6:0] fr_0_addr_3_reg_2474;
reg   [6:0] fr_1_addr_3_reg_2480;
reg   [6:0] fr_2_addr_3_reg_2486;
reg   [6:0] fr_3_addr_3_reg_2492;
wire   [31:0] zext_ln87_fu_1936_p1;
reg   [31:0] zext_ln87_reg_2498;
reg   [6:0] fi_0_addr_3_reg_2504;
reg   [6:0] fi_1_addr_2_reg_2510;
reg   [6:0] fi_2_addr_3_reg_2516;
reg   [6:0] fi_3_addr_2_reg_2522;
reg   [9:0] m_reg_870;
wire    ap_CS_fsm_state5;
reg   [3:0] i_0_reg_882;
reg   [15:0] is_0_reg_893;
reg   [15:0] m_0_reg_905;
reg   [9:0] i_1_reg_915;
reg   [9:0] it_1_reg_927;
wire    ap_CS_fsm_state23;
reg  signed [15:0] nv_reg_939;
wire    ap_CS_fsm_state30;
reg   [15:0] m_1_reg_951;
reg   [3:0] l0_0_reg_962;
reg  signed [15:0] it_2_reg_974;
reg  signed [15:0] j_0_reg_986;
wire    ap_CS_fsm_state75;
reg   [31:0] phi_mul_reg_997;
wire   [63:0] zext_ln32_1_fu_1199_p1;
wire   [63:0] zext_ln32_2_fu_1314_p1;
wire   [63:0] zext_ln46_1_fu_1380_p1;
wire   [63:0] zext_ln49_fu_1436_p1;
wire   [63:0] zext_ln56_fu_1473_p1;
wire   [63:0] zext_ln58_fu_1503_p1;
wire   [63:0] zext_ln81_1_fu_1776_p1;
wire   [63:0] zext_ln81_3_fu_1830_p1;
wire   [1:0] trunc_ln32_1_fu_1300_p1;
wire   [31:0] tmp_281_fu_1282_p6;
wire    ap_CS_fsm_state61;
wire    ap_CS_fsm_state68;
wire   [31:0] tmp_282_fu_1326_p6;
wire   [31:0] grp_fu_1037_p2;
reg   [31:0] grp_fu_1008_p0;
reg   [31:0] grp_fu_1008_p1;
reg   [31:0] grp_fu_1012_p0;
reg   [31:0] grp_fu_1012_p1;
wire    ap_CS_fsm_state36;
wire    ap_CS_fsm_state45;
wire    ap_CS_fsm_state50;
wire    ap_CS_fsm_state56;
wire    ap_CS_fsm_state63;
wire    ap_CS_fsm_state70;
reg   [31:0] grp_fu_1031_p0;
reg   [31:0] grp_fu_1031_p1;
wire   [31:0] grp_fu_1037_p0;
wire   [31:0] grp_fu_1037_p1;
reg   [31:0] grp_fu_1043_p0;
reg   [31:0] grp_fu_1043_p1;
wire    ap_CS_fsm_state8;
wire    ap_CS_fsm_state41;
reg   [31:0] grp_fu_1056_p5;
wire   [15:0] sub_ln28_fu_1173_p2;
wire   [13:0] lshr_ln3_fu_1189_p4;
wire   [15:0] zext_ln28_fu_1219_p1;
wire   [14:0] lshr_ln28_2_fu_1228_p4;
wire   [0:0] tmp_91_fu_1211_p3;
wire   [15:0] sub_ln28_1_fu_1222_p2;
wire   [15:0] zext_ln28_1_fu_1238_p1;
wire   [15:0] shl_ln29_fu_1250_p2;
wire   [15:0] add_ln29_fu_1262_p2;
wire   [15:0] shl_ln29_1_fu_1256_p2;
wire   [1:0] trunc_ln32_fu_1274_p1;
wire   [15:0] zext_ln32_fu_1278_p1;
wire   [7:0] lshr_ln32_1_fu_1304_p4;
wire   [8:0] trunc_ln46_fu_1350_p1;
wire   [8:0] add_ln46_fu_1358_p2;
wire   [6:0] lshr_ln_fu_1370_p4;
wire   [31:0] zext_ln46_fu_1402_p1;
wire   [7:0] lshr_ln4_fu_1463_p4;
wire   [1:0] trunc_ln56_fu_1459_p1;
wire   [6:0] lshr_ln5_fu_1493_p4;
wire   [1:0] or_ln58_fu_1487_p2;
wire   [15:0] sub_ln70_fu_1575_p2;
wire   [14:0] lshr_ln70_1_fu_1581_p4;
wire   [15:0] zext_ln70_fu_1591_p1;
wire   [14:0] lshr_ln70_2_fu_1601_p4;
wire   [0:0] tmp_93_fu_1567_p3;
wire   [15:0] sub_ln70_1_fu_1595_p2;
wire   [15:0] zext_ln70_1_fu_1611_p1;
wire  signed [16:0] sext_ln78_fu_1639_p1;
wire   [16:0] sub_ln78_fu_1651_p2;
wire   [15:0] lshr_ln78_1_fu_1657_p4;
wire   [16:0] zext_ln78_1_fu_1667_p1;
wire   [14:0] trunc_ln78_1_fu_1677_p4;
wire  signed [15:0] sext_ln78_1_fu_1687_p1;
wire   [0:0] tmp_94_fu_1643_p3;
wire   [16:0] sub_ln78_1_fu_1671_p2;
wire   [16:0] zext_ln78_fu_1691_p1;
wire  signed [16:0] select_ln78_fu_1695_p3;
wire  signed [31:0] sext_ln74_2_fu_1717_p1;
wire  signed [16:0] sext_ln78_3_fu_1742_p1;
wire   [29:0] lshr_ln6_fu_1766_p4;
wire  signed [16:0] sext_ln74_4_fu_1792_p1;
wire  signed [16:0] add_ln81_fu_1796_p2;
wire   [1:0] trunc_ln81_4_fu_1788_p1;
wire  signed [17:0] sext_ln81_fu_1802_p1;
wire   [17:0] add_ln81_1_fu_1811_p2;
wire   [15:0] trunc_ln81_5_fu_1816_p4;
wire  signed [29:0] sext_ln81_1_fu_1826_p1;
wire   [31:0] zext_ln81_fu_1858_p1;
wire   [31:0] zext_ln81_2_fu_1879_p1;
wire  signed [29:0] sext_ln87_fu_1925_p1;
reg   [1:0] grp_fu_1008_opcode;
reg   [1:0] grp_fu_1012_opcode;
reg   [1:0] grp_fu_1031_opcode;
reg   [74:0] ap_NS_fsm;

// power-on initialization
initial begin
#0 ap_CS_fsm = 75'd1;
end

kws_faddfsub_32nsbkb #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
kws_faddfsub_32nsbkb_U1(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1008_p0),
    .din1(grp_fu_1008_p1),
    .opcode(grp_fu_1008_opcode),
    .ce(1'b1),
    .dout(grp_fu_1008_p2)
);

kws_faddfsub_32nscud #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
kws_faddfsub_32nscud_U2(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1012_p0),
    .din1(grp_fu_1012_p1),
    .opcode(grp_fu_1012_opcode),
    .ce(1'b1),
    .dout(grp_fu_1012_p2)
);

kws_faddfsub_32nscud #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
kws_faddfsub_32nscud_U3(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1031_p0),
    .din1(grp_fu_1031_p1),
    .opcode(grp_fu_1031_opcode),
    .ce(1'b1),
    .dout(grp_fu_1031_p2)
);

kws_fsub_32ns_32ndEe #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
kws_fsub_32ns_32ndEe_U4(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1037_p0),
    .din1(grp_fu_1037_p1),
    .ce(1'b1),
    .dout(grp_fu_1037_p2)
);

kws_fmul_32ns_32neOg #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
kws_fmul_32ns_32neOg_U5(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1043_p0),
    .din1(grp_fu_1043_p1),
    .ce(1'b1),
    .dout(grp_fu_1043_p2)
);

kws_fmul_32ns_32neOg #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
kws_fmul_32ns_32neOg_U6(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_285_reg_2444),
    .din1(tmp_286_reg_2450),
    .ce(1'b1),
    .dout(grp_fu_1052_p2)
);

kws_mux_432_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
kws_mux_432_32_1_1_U7(
    .din0(fr_0_q0),
    .din1(fr_1_q0),
    .din2(fr_2_q0),
    .din3(fr_3_q0),
    .din4(grp_fu_1056_p5),
    .dout(grp_fu_1056_p6)
);

kws_mux_432_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
kws_mux_432_32_1_1_U8(
    .din0(fi_0_q0),
    .din1(fi_1_q0),
    .din2(fi_2_q0),
    .din3(fi_3_q0),
    .din4(zext_ln87_reg_2498),
    .dout(grp_fu_1069_p6)
);

kws_mux_416_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 16 ),
    .dout_WIDTH( 32 ))
kws_mux_416_32_1_1_U9(
    .din0(pr_0_q0),
    .din1(pr_1_q0),
    .din2(pr_2_q0),
    .din3(pr_3_q0),
    .din4(zext_ln32_fu_1278_p1),
    .dout(tmp_281_fu_1282_p6)
);

kws_mux_416_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 16 ),
    .dout_WIDTH( 32 ))
kws_mux_416_32_1_1_U10(
    .din0(pi_0_q0),
    .din1(pi_1_q0),
    .din2(pi_2_q0),
    .din3(pi_3_q0),
    .din4(zext_ln32_fu_1278_p1),
    .dout(tmp_282_fu_1326_p6)
);

kws_mux_432_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
kws_mux_432_32_1_1_U11(
    .din0(pr_0_q0),
    .din1(pr_1_q0),
    .din2(pr_2_q0),
    .din3(pr_3_q0),
    .din4(zext_ln46_fu_1402_p1),
    .dout(tmp_279_fu_1405_p6)
);

kws_mux_432_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
kws_mux_432_32_1_1_U12(
    .din0(pi_0_q0),
    .din1(pi_1_q0),
    .din2(pi_2_q0),
    .din3(pi_3_q0),
    .din4(zext_ln46_fu_1402_p1),
    .dout(tmp_280_fu_1421_p6)
);

kws_mux_432_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
kws_mux_432_32_1_1_U13(
    .din0(pr_0_q0),
    .din1(pr_1_q0),
    .din2(pr_2_q0),
    .din3(pr_3_q0),
    .din4(zext_ln81_fu_1858_p1),
    .dout(tmp_283_fu_1861_p6)
);

kws_mux_432_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
kws_mux_432_32_1_1_U14(
    .din0(fr_0_q0),
    .din1(fr_1_q0),
    .din2(fr_2_q0),
    .din3(fr_3_q0),
    .din4(zext_ln81_2_fu_1879_p1),
    .dout(tmp_284_fu_1883_p6)
);

kws_mux_432_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
kws_mux_432_32_1_1_U15(
    .din0(pi_0_q0),
    .din1(pi_1_q0),
    .din2(pi_2_q0),
    .din3(pi_3_q0),
    .din4(zext_ln81_fu_1858_p1),
    .dout(tmp_285_fu_1897_p6)
);

kws_mux_432_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
kws_mux_432_32_1_1_U16(
    .din0(fi_0_q0),
    .din1(fi_1_q0),
    .din2(fi_2_q0),
    .din3(fi_3_q0),
    .din4(zext_ln81_2_fu_1879_p1),
    .dout(tmp_286_fu_1911_p6)
);

kws_mul_mul_16s_1fYi #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 32 ))
kws_mul_mul_16s_1fYi_U17(
    .din0(nv_reg_939),
    .din1(add_ln74_reg_2258),
    .dout(mul_ln74_fu_1940_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        i_0_reg_882 <= i_28_reg_1983;
    end else if (((icmp_ln21_fu_1149_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        i_0_reg_882 <= 4'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state22)) begin
        i_1_reg_915 <= i_fu_1447_p2;
    end else if (((icmp_ln21_fu_1149_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        i_1_reg_915 <= 10'd2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        is_0_reg_893 <= is_fu_1268_p2;
    end else if (((icmp_ln21_fu_1149_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        is_0_reg_893 <= 16'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        it_1_reg_927 <= 10'd0;
    end else if ((1'b1 == ap_CS_fsm_state29)) begin
        it_1_reg_927 <= it_4_fu_1553_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln78_fu_1746_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state34))) begin
        it_2_reg_974 <= it_3_fu_1852_p2;
    end else if ((1'b1 == ap_CS_fsm_state32)) begin
        it_2_reg_974 <= 16'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state75)) begin
        j_0_reg_986 <= j_reg_2309;
    end else if (((icmp_ln74_fu_1721_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state33))) begin
        j_0_reg_986 <= 16'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state30)) begin
        l0_0_reg_962 <= 4'd7;
    end else if (((icmp_ln74_fu_1721_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state33))) begin
        l0_0_reg_962 <= l0_fu_1730_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        m_0_reg_905 <= j_10_fu_1242_p3;
    end else if (((icmp_ln21_fu_1149_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        m_0_reg_905 <= zext_ln21_fu_1145_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state30)) begin
        m_1_reg_951 <= 16'd256;
    end else if (((icmp_ln74_fu_1721_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state33))) begin
        m_1_reg_951 <= m_3_reg_2252;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        m_reg_870 <= it_reg_1965;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        m_reg_870 <= 10'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state30)) begin
                nv_reg_939[2] <= 1'b1;
        nv_reg_939[3] <= 1'b0;
        nv_reg_939[4] <= 1'b0;
        nv_reg_939[5] <= 1'b0;
        nv_reg_939[6] <= 1'b0;
        nv_reg_939[7] <= 1'b0;
        nv_reg_939[8] <= 1'b0;
        nv_reg_939[9] <= 1'b0;
        nv_reg_939[10] <= 1'b0;
        nv_reg_939[11] <= 1'b0;
        nv_reg_939[12] <= 1'b0;
        nv_reg_939[13] <= 1'b0;
        nv_reg_939[14] <= 1'b0;
        nv_reg_939[15] <= 1'b0;
    end else if (((icmp_ln74_fu_1721_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state33))) begin
                nv_reg_939[15 : 2] <= shl_ln68_fu_1736_p2[15 : 2];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state75)) begin
        phi_mul_reg_997 <= add_ln81_4_reg_2314;
    end else if (((icmp_ln74_fu_1721_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state33))) begin
        phi_mul_reg_997 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln43_fu_1344_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state6))) begin
        add_ln46_1_reg_2053 <= add_ln46_1_fu_1364_p2;
        lshr_ln2_reg_2098 <= {{i_1_reg_915[9:2]}};
        trunc_ln46_1_reg_2049 <= trunc_ln46_1_fu_1354_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_92_fu_1559_p3 == 1'd0) & (1'b1 == ap_CS_fsm_state31))) begin
        add_ln74_reg_2258 <= add_ln74_fu_1623_p2;
        m_3_reg_2252 <= m_3_fu_1615_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state32)) begin
        add_ln78_reg_2278[16 : 1] <= add_ln78_fu_1707_p2[16 : 1];
        mul_ln74_reg_2268 <= mul_ln74_fu_1940_p2;
        sext_ln74_reg_2263 <= sext_ln74_fu_1629_p1;
        sext_ln78_2_reg_2273[17 : 1] <= sext_ln78_2_fu_1703_p1[17 : 1];
        trunc_ln81_reg_2283[1] <= trunc_ln81_fu_1713_p1[1];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln78_fu_1746_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state34))) begin
        add_ln81_2_reg_2344 <= add_ln81_2_fu_1806_p2;
        add_ln81_4_reg_2314 <= add_ln81_4_fu_1757_p2;
        fi_0_addr_2_reg_2394 <= zext_ln81_3_fu_1830_p1;
        fi_1_addr_1_reg_2400 <= zext_ln81_3_fu_1830_p1;
        fi_2_addr_2_reg_2406 <= zext_ln81_3_fu_1830_p1;
        fi_3_addr_1_reg_2412 <= zext_ln81_3_fu_1830_p1;
        fr_0_addr_2_reg_2350 <= zext_ln81_3_fu_1830_p1;
        fr_1_addr_2_reg_2356 <= zext_ln81_3_fu_1830_p1;
        fr_2_addr_2_reg_2362 <= zext_ln81_3_fu_1830_p1;
        fr_3_addr_2_reg_2368 <= zext_ln81_3_fu_1830_p1;
        trunc_ln81_3_reg_2319 <= trunc_ln81_3_fu_1762_p1;
        trunc_ln_reg_2418 <= {{add_ln81_fu_1796_p2[16:2]}};
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state35)) begin
        add_ln81_3_reg_2434 <= add_ln81_3_fu_1875_p2;
        tmp_283_reg_2428 <= tmp_283_fu_1861_p6;
        tmp_284_reg_2438 <= tmp_284_fu_1883_p6;
        tmp_285_reg_2444 <= tmp_285_fu_1897_p6;
        tmp_286_reg_2450 <= tmp_286_fu_1911_p6;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln53_fu_1453_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state24))) begin
        fi_0_addr_1_reg_2178 <= zext_ln56_fu_1473_p1;
        fi_1_addr_3_reg_2208 <= zext_ln58_fu_1503_p1;
        fi_2_addr_1_reg_2184 <= zext_ln56_fu_1473_p1;
        fi_3_addr_3_reg_2214 <= zext_ln58_fu_1503_p1;
        fr_0_addr_1_reg_2160 <= zext_ln56_fu_1473_p1;
        fr_1_addr_1_reg_2190 <= zext_ln58_fu_1503_p1;
        fr_2_addr_1_reg_2166 <= zext_ln56_fu_1473_p1;
        fr_3_addr_1_reg_2196 <= zext_ln58_fu_1503_p1;
        icmp_ln56_reg_2172 <= icmp_ln56_fu_1481_p2;
        icmp_ln58_reg_2202 <= icmp_ln58_fu_1511_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state54)) begin
        fi_0_addr_3_reg_2504 <= zext_ln87_1_reg_2466;
        fi_1_addr_2_reg_2510 <= zext_ln87_1_reg_2466;
        fi_2_addr_3_reg_2516 <= zext_ln87_1_reg_2466;
        fi_3_addr_2_reg_2522 <= zext_ln87_1_reg_2466;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state47)) begin
        fr_0_addr_3_reg_2474 <= zext_ln87_1_fu_1928_p1;
        fr_1_addr_3_reg_2480 <= zext_ln87_1_fu_1928_p1;
        fr_2_addr_3_reg_2486 <= zext_ln87_1_fu_1928_p1;
        fr_3_addr_3_reg_2492 <= zext_ln87_1_fu_1928_p1;
        zext_ln87_1_reg_2466[29 : 0] <= zext_ln87_1_fu_1928_p1[29 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        i_28_reg_1983 <= i_28_fu_1167_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        it_reg_1965 <= it_fu_1155_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state34)) begin
        j_reg_2309 <= j_fu_1751_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln26_fu_1161_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        lshr_ln28_1_reg_1988 <= {{sub_ln28_fu_1173_p2[15:1]}};
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        pi_0_addr_reg_2132 <= zext_ln49_fu_1436_p1;
        pi_1_addr_1_reg_2137 <= zext_ln49_fu_1436_p1;
        pi_2_addr_reg_2142 <= zext_ln49_fu_1436_p1;
        pi_3_addr_reg_2147 <= zext_ln49_fu_1436_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        pi_1_load_reg_2121 <= pi_1_q1;
        tmp_280_reg_2115 <= tmp_280_fu_1421_p6;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state39)) begin
        q_1_reg_2456 <= grp_fu_1052_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state39) | (1'b1 == ap_CS_fsm_state10))) begin
        reg_1082 <= grp_fu_1043_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state44) | (1'b1 == ap_CS_fsm_state11))) begin
        reg_1089 <= grp_fu_1043_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state74) | (1'b1 == ap_CS_fsm_state67) | (1'b1 == ap_CS_fsm_state48) | (1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state11))) begin
        reg_1102 <= grp_fu_1012_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state62) | (1'b1 == ap_CS_fsm_state48))) begin
        reg_1117 <= grp_fu_1056_p6;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state54) | (1'b1 == ap_CS_fsm_state49))) begin
        reg_1122 <= grp_fu_1012_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state60) | (1'b1 == ap_CS_fsm_state53))) begin
        reg_1128 <= grp_fu_1012_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state69) | (1'b1 == ap_CS_fsm_state55))) begin
        reg_1140 <= grp_fu_1069_p6;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state40)) begin
        tmp_246_reg_2461 <= grp_fu_1031_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln74_fu_1721_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state33))) begin
        trunc_ln81_2_reg_2291 <= trunc_ln81_2_fu_1726_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state48)) begin
        zext_ln87_reg_2498[1 : 0] <= zext_ln87_fu_1936_p1[1 : 0];
    end
end

always @ (*) begin
    if ((((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)) | ((tmp_92_fu_1559_p3 == 1'd1) & (1'b1 == ap_CS_fsm_state31)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_92_fu_1559_p3 == 1'd1) & (1'b1 == ap_CS_fsm_state31))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state68)) begin
        fi_0_address0 = fi_0_addr_3_reg_2504;
    end else if ((1'b1 == ap_CS_fsm_state54)) begin
        fi_0_address0 = zext_ln87_1_reg_2466;
    end else if ((1'b1 == ap_CS_fsm_state34)) begin
        fi_0_address0 = zext_ln81_3_fu_1830_p1;
    end else if ((1'b1 == ap_CS_fsm_state24)) begin
        fi_0_address0 = zext_ln56_fu_1473_p1;
    end else begin
        fi_0_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state75)) begin
        fi_0_address1 = fi_0_addr_3_reg_2504;
    end else if ((1'b1 == ap_CS_fsm_state61)) begin
        fi_0_address1 = fi_0_addr_2_reg_2394;
    end else if ((1'b1 == ap_CS_fsm_state29)) begin
        fi_0_address1 = fi_0_addr_1_reg_2178;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        fi_0_address1 = zext_ln32_2_fu_1314_p1;
    end else begin
        fi_0_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state68) | (1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state54))) begin
        fi_0_ce0 = 1'b1;
    end else begin
        fi_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state61) | (1'b1 == ap_CS_fsm_state75) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state29))) begin
        fi_0_ce1 = 1'b1;
    end else begin
        fi_0_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state75)) begin
        fi_0_d1 = reg_1102;
    end else if ((1'b1 == ap_CS_fsm_state61)) begin
        fi_0_d1 = reg_1128;
    end else if ((1'b1 == ap_CS_fsm_state29)) begin
        fi_0_d1 = grp_fu_1008_p2;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        fi_0_d1 = tmp_282_fu_1326_p6;
    end else begin
        fi_0_d1 = 'bx;
    end
end

always @ (*) begin
    if ((((2'd0 == add_ln81_3_reg_2434) & (1'b1 == ap_CS_fsm_state61)) | ((2'd0 == add_ln81_2_reg_2344) & (1'b1 == ap_CS_fsm_state75)) | ((trunc_ln32_1_fu_1300_p1 == 2'd0) & (1'b1 == ap_CS_fsm_state5)) | ((icmp_ln56_reg_2172 == 1'd1) & (1'b1 == ap_CS_fsm_state29)))) begin
        fi_0_we1 = 1'b1;
    end else begin
        fi_0_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state68)) begin
        fi_1_address0 = fi_1_addr_2_reg_2510;
    end else if ((1'b1 == ap_CS_fsm_state54)) begin
        fi_1_address0 = zext_ln87_1_reg_2466;
    end else if ((1'b1 == ap_CS_fsm_state34)) begin
        fi_1_address0 = zext_ln81_3_fu_1830_p1;
    end else if ((1'b1 == ap_CS_fsm_state24)) begin
        fi_1_address0 = zext_ln58_fu_1503_p1;
    end else begin
        fi_1_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state75)) begin
        fi_1_address1 = fi_1_addr_2_reg_2510;
    end else if ((1'b1 == ap_CS_fsm_state61)) begin
        fi_1_address1 = fi_1_addr_1_reg_2400;
    end else if ((1'b1 == ap_CS_fsm_state29)) begin
        fi_1_address1 = fi_1_addr_3_reg_2208;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        fi_1_address1 = zext_ln32_2_fu_1314_p1;
    end else begin
        fi_1_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state68) | (1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state54))) begin
        fi_1_ce0 = 1'b1;
    end else begin
        fi_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state61) | (1'b1 == ap_CS_fsm_state75) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state29))) begin
        fi_1_ce1 = 1'b1;
    end else begin
        fi_1_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state75)) begin
        fi_1_d1 = reg_1102;
    end else if ((1'b1 == ap_CS_fsm_state61)) begin
        fi_1_d1 = reg_1128;
    end else if ((1'b1 == ap_CS_fsm_state29)) begin
        fi_1_d1 = grp_fu_1037_p2;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        fi_1_d1 = tmp_282_fu_1326_p6;
    end else begin
        fi_1_d1 = 'bx;
    end
end

always @ (*) begin
    if ((((2'd1 == add_ln81_3_reg_2434) & (1'b1 == ap_CS_fsm_state61)) | ((2'd1 == add_ln81_2_reg_2344) & (1'b1 == ap_CS_fsm_state75)) | ((trunc_ln32_1_fu_1300_p1 == 2'd1) & (1'b1 == ap_CS_fsm_state5)) | ((icmp_ln58_reg_2202 == 1'd1) & (1'b1 == ap_CS_fsm_state29)))) begin
        fi_1_we1 = 1'b1;
    end else begin
        fi_1_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state68)) begin
        fi_2_address0 = fi_2_addr_3_reg_2516;
    end else if ((1'b1 == ap_CS_fsm_state54)) begin
        fi_2_address0 = zext_ln87_1_reg_2466;
    end else if ((1'b1 == ap_CS_fsm_state34)) begin
        fi_2_address0 = zext_ln81_3_fu_1830_p1;
    end else if ((1'b1 == ap_CS_fsm_state24)) begin
        fi_2_address0 = zext_ln56_fu_1473_p1;
    end else begin
        fi_2_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state75)) begin
        fi_2_address1 = fi_2_addr_3_reg_2516;
    end else if ((1'b1 == ap_CS_fsm_state61)) begin
        fi_2_address1 = fi_2_addr_2_reg_2406;
    end else if ((1'b1 == ap_CS_fsm_state29)) begin
        fi_2_address1 = fi_2_addr_1_reg_2184;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        fi_2_address1 = zext_ln32_2_fu_1314_p1;
    end else begin
        fi_2_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state68) | (1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state54))) begin
        fi_2_ce0 = 1'b1;
    end else begin
        fi_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state61) | (1'b1 == ap_CS_fsm_state75) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state29))) begin
        fi_2_ce1 = 1'b1;
    end else begin
        fi_2_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state75)) begin
        fi_2_d1 = reg_1102;
    end else if ((1'b1 == ap_CS_fsm_state61)) begin
        fi_2_d1 = reg_1128;
    end else if ((1'b1 == ap_CS_fsm_state29)) begin
        fi_2_d1 = grp_fu_1008_p2;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        fi_2_d1 = tmp_282_fu_1326_p6;
    end else begin
        fi_2_d1 = 'bx;
    end
end

always @ (*) begin
    if ((((2'd2 == add_ln81_3_reg_2434) & (1'b1 == ap_CS_fsm_state61)) | ((2'd2 == add_ln81_2_reg_2344) & (1'b1 == ap_CS_fsm_state75)) | ((trunc_ln32_1_fu_1300_p1 == 2'd2) & (1'b1 == ap_CS_fsm_state5)) | ((icmp_ln56_reg_2172 == 1'd0) & (1'b1 == ap_CS_fsm_state29)))) begin
        fi_2_we1 = 1'b1;
    end else begin
        fi_2_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state68)) begin
        fi_3_address0 = fi_3_addr_2_reg_2522;
    end else if ((1'b1 == ap_CS_fsm_state54)) begin
        fi_3_address0 = zext_ln87_1_reg_2466;
    end else if ((1'b1 == ap_CS_fsm_state34)) begin
        fi_3_address0 = zext_ln81_3_fu_1830_p1;
    end else if ((1'b1 == ap_CS_fsm_state24)) begin
        fi_3_address0 = zext_ln58_fu_1503_p1;
    end else begin
        fi_3_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state75)) begin
        fi_3_address1 = fi_3_addr_2_reg_2522;
    end else if ((1'b1 == ap_CS_fsm_state61)) begin
        fi_3_address1 = fi_3_addr_1_reg_2412;
    end else if ((1'b1 == ap_CS_fsm_state29)) begin
        fi_3_address1 = fi_3_addr_3_reg_2214;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        fi_3_address1 = zext_ln32_2_fu_1314_p1;
    end else begin
        fi_3_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state68) | (1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state54))) begin
        fi_3_ce0 = 1'b1;
    end else begin
        fi_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state61) | (1'b1 == ap_CS_fsm_state75) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state29))) begin
        fi_3_ce1 = 1'b1;
    end else begin
        fi_3_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state75)) begin
        fi_3_d1 = reg_1102;
    end else if ((1'b1 == ap_CS_fsm_state61)) begin
        fi_3_d1 = reg_1128;
    end else if ((1'b1 == ap_CS_fsm_state29)) begin
        fi_3_d1 = grp_fu_1037_p2;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        fi_3_d1 = tmp_282_fu_1326_p6;
    end else begin
        fi_3_d1 = 'bx;
    end
end

always @ (*) begin
    if ((((2'd3 == add_ln81_3_reg_2434) & (1'b1 == ap_CS_fsm_state61)) | ((2'd3 == add_ln81_2_reg_2344) & (1'b1 == ap_CS_fsm_state75)) | ((trunc_ln32_1_fu_1300_p1 == 2'd3) & (1'b1 == ap_CS_fsm_state5)) | ((icmp_ln58_reg_2202 == 1'd0) & (1'b1 == ap_CS_fsm_state29)))) begin
        fi_3_we1 = 1'b1;
    end else begin
        fi_3_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state61)) begin
        fr_0_address0 = fr_0_addr_3_reg_2474;
    end else if ((1'b1 == ap_CS_fsm_state47)) begin
        fr_0_address0 = zext_ln87_1_fu_1928_p1;
    end else if ((1'b1 == ap_CS_fsm_state34)) begin
        fr_0_address0 = zext_ln81_3_fu_1830_p1;
    end else if ((1'b1 == ap_CS_fsm_state24)) begin
        fr_0_address0 = zext_ln56_fu_1473_p1;
    end else begin
        fr_0_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state68)) begin
        fr_0_address1 = fr_0_addr_3_reg_2474;
    end else if ((1'b1 == ap_CS_fsm_state54)) begin
        fr_0_address1 = fr_0_addr_2_reg_2350;
    end else if ((1'b1 == ap_CS_fsm_state29)) begin
        fr_0_address1 = fr_0_addr_1_reg_2160;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        fr_0_address1 = zext_ln32_2_fu_1314_p1;
    end else begin
        fr_0_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state61) | (1'b1 == ap_CS_fsm_state47) | (1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state24))) begin
        fr_0_ce0 = 1'b1;
    end else begin
        fr_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state68) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state54))) begin
        fr_0_ce1 = 1'b1;
    end else begin
        fr_0_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state68)) begin
        fr_0_d1 = reg_1102;
    end else if ((1'b1 == ap_CS_fsm_state54)) begin
        fr_0_d1 = reg_1128;
    end else if ((1'b1 == ap_CS_fsm_state29)) begin
        fr_0_d1 = grp_fu_1012_p2;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        fr_0_d1 = tmp_281_fu_1282_p6;
    end else begin
        fr_0_d1 = 'bx;
    end
end

always @ (*) begin
    if ((((2'd0 == add_ln81_2_reg_2344) & (1'b1 == ap_CS_fsm_state68)) | ((trunc_ln32_1_fu_1300_p1 == 2'd0) & (1'b1 == ap_CS_fsm_state5)) | ((icmp_ln56_reg_2172 == 1'd1) & (1'b1 == ap_CS_fsm_state29)) | ((2'd0 == add_ln81_3_reg_2434) & (1'b1 == ap_CS_fsm_state54)))) begin
        fr_0_we1 = 1'b1;
    end else begin
        fr_0_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state61)) begin
        fr_1_address0 = fr_1_addr_3_reg_2480;
    end else if ((1'b1 == ap_CS_fsm_state47)) begin
        fr_1_address0 = zext_ln87_1_fu_1928_p1;
    end else if ((1'b1 == ap_CS_fsm_state34)) begin
        fr_1_address0 = zext_ln81_3_fu_1830_p1;
    end else if ((1'b1 == ap_CS_fsm_state24)) begin
        fr_1_address0 = zext_ln58_fu_1503_p1;
    end else begin
        fr_1_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state68)) begin
        fr_1_address1 = fr_1_addr_3_reg_2480;
    end else if ((1'b1 == ap_CS_fsm_state54)) begin
        fr_1_address1 = fr_1_addr_2_reg_2356;
    end else if ((1'b1 == ap_CS_fsm_state29)) begin
        fr_1_address1 = fr_1_addr_1_reg_2190;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        fr_1_address1 = zext_ln32_2_fu_1314_p1;
    end else begin
        fr_1_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state61) | (1'b1 == ap_CS_fsm_state47) | (1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state24))) begin
        fr_1_ce0 = 1'b1;
    end else begin
        fr_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state68) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state54))) begin
        fr_1_ce1 = 1'b1;
    end else begin
        fr_1_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state68)) begin
        fr_1_d1 = reg_1102;
    end else if ((1'b1 == ap_CS_fsm_state54)) begin
        fr_1_d1 = reg_1128;
    end else if ((1'b1 == ap_CS_fsm_state29)) begin
        fr_1_d1 = grp_fu_1031_p2;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        fr_1_d1 = tmp_281_fu_1282_p6;
    end else begin
        fr_1_d1 = 'bx;
    end
end

always @ (*) begin
    if ((((2'd1 == add_ln81_2_reg_2344) & (1'b1 == ap_CS_fsm_state68)) | ((trunc_ln32_1_fu_1300_p1 == 2'd1) & (1'b1 == ap_CS_fsm_state5)) | ((icmp_ln58_reg_2202 == 1'd1) & (1'b1 == ap_CS_fsm_state29)) | ((2'd1 == add_ln81_3_reg_2434) & (1'b1 == ap_CS_fsm_state54)))) begin
        fr_1_we1 = 1'b1;
    end else begin
        fr_1_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state61)) begin
        fr_2_address0 = fr_2_addr_3_reg_2486;
    end else if ((1'b1 == ap_CS_fsm_state47)) begin
        fr_2_address0 = zext_ln87_1_fu_1928_p1;
    end else if ((1'b1 == ap_CS_fsm_state34)) begin
        fr_2_address0 = zext_ln81_3_fu_1830_p1;
    end else if ((1'b1 == ap_CS_fsm_state24)) begin
        fr_2_address0 = zext_ln56_fu_1473_p1;
    end else begin
        fr_2_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state68)) begin
        fr_2_address1 = fr_2_addr_3_reg_2486;
    end else if ((1'b1 == ap_CS_fsm_state54)) begin
        fr_2_address1 = fr_2_addr_2_reg_2362;
    end else if ((1'b1 == ap_CS_fsm_state29)) begin
        fr_2_address1 = fr_2_addr_1_reg_2166;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        fr_2_address1 = zext_ln32_2_fu_1314_p1;
    end else begin
        fr_2_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state61) | (1'b1 == ap_CS_fsm_state47) | (1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state24))) begin
        fr_2_ce0 = 1'b1;
    end else begin
        fr_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state68) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state54))) begin
        fr_2_ce1 = 1'b1;
    end else begin
        fr_2_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state68)) begin
        fr_2_d1 = reg_1102;
    end else if ((1'b1 == ap_CS_fsm_state54)) begin
        fr_2_d1 = reg_1128;
    end else if ((1'b1 == ap_CS_fsm_state29)) begin
        fr_2_d1 = grp_fu_1012_p2;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        fr_2_d1 = tmp_281_fu_1282_p6;
    end else begin
        fr_2_d1 = 'bx;
    end
end

always @ (*) begin
    if ((((2'd2 == add_ln81_2_reg_2344) & (1'b1 == ap_CS_fsm_state68)) | ((trunc_ln32_1_fu_1300_p1 == 2'd2) & (1'b1 == ap_CS_fsm_state5)) | ((icmp_ln56_reg_2172 == 1'd0) & (1'b1 == ap_CS_fsm_state29)) | ((2'd2 == add_ln81_3_reg_2434) & (1'b1 == ap_CS_fsm_state54)))) begin
        fr_2_we1 = 1'b1;
    end else begin
        fr_2_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state61)) begin
        fr_3_address0 = fr_3_addr_3_reg_2492;
    end else if ((1'b1 == ap_CS_fsm_state47)) begin
        fr_3_address0 = zext_ln87_1_fu_1928_p1;
    end else if ((1'b1 == ap_CS_fsm_state34)) begin
        fr_3_address0 = zext_ln81_3_fu_1830_p1;
    end else if ((1'b1 == ap_CS_fsm_state24)) begin
        fr_3_address0 = zext_ln58_fu_1503_p1;
    end else begin
        fr_3_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state68)) begin
        fr_3_address1 = fr_3_addr_3_reg_2492;
    end else if ((1'b1 == ap_CS_fsm_state54)) begin
        fr_3_address1 = fr_3_addr_2_reg_2368;
    end else if ((1'b1 == ap_CS_fsm_state29)) begin
        fr_3_address1 = fr_3_addr_1_reg_2196;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        fr_3_address1 = zext_ln32_2_fu_1314_p1;
    end else begin
        fr_3_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state61) | (1'b1 == ap_CS_fsm_state47) | (1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state24))) begin
        fr_3_ce0 = 1'b1;
    end else begin
        fr_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state68) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state54))) begin
        fr_3_ce1 = 1'b1;
    end else begin
        fr_3_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state68)) begin
        fr_3_d1 = reg_1102;
    end else if ((1'b1 == ap_CS_fsm_state54)) begin
        fr_3_d1 = reg_1128;
    end else if ((1'b1 == ap_CS_fsm_state29)) begin
        fr_3_d1 = grp_fu_1031_p2;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        fr_3_d1 = tmp_281_fu_1282_p6;
    end else begin
        fr_3_d1 = 'bx;
    end
end

always @ (*) begin
    if ((((2'd3 == add_ln81_2_reg_2344) & (1'b1 == ap_CS_fsm_state68)) | ((trunc_ln32_1_fu_1300_p1 == 2'd3) & (1'b1 == ap_CS_fsm_state5)) | ((icmp_ln58_reg_2202 == 1'd0) & (1'b1 == ap_CS_fsm_state29)) | ((2'd3 == add_ln81_3_reg_2434) & (1'b1 == ap_CS_fsm_state54)))) begin
        fr_3_we1 = 1'b1;
    end else begin
        fr_3_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state18))) begin
        grp_fu_1008_opcode = 2'd1;
    end else if (((1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state7))) begin
        grp_fu_1008_opcode = 2'd0;
    end else begin
        grp_fu_1008_opcode = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        grp_fu_1008_p0 = vi_fu_1526_p3;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        grp_fu_1008_p0 = grp_fu_1008_p2;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        grp_fu_1008_p0 = grp_fu_1043_p2;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        grp_fu_1008_p0 = tmp_279_fu_1405_p6;
    end else begin
        grp_fu_1008_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        grp_fu_1008_p1 = select_ln58_1_fu_1544_p3;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        grp_fu_1008_p1 = reg_1089;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        grp_fu_1008_p1 = reg_1082;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        grp_fu_1008_p1 = tmp_280_fu_1421_p6;
    end else begin
        grp_fu_1008_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state56) | (1'b1 == ap_CS_fsm_state50) | (1'b1 == ap_CS_fsm_state45) | (1'b1 == ap_CS_fsm_state49) | (1'b1 == ap_CS_fsm_state44) | (1'b1 == ap_CS_fsm_state11))) begin
        grp_fu_1012_opcode = 2'd1;
    end else if (((1'b1 == ap_CS_fsm_state70) | (1'b1 == ap_CS_fsm_state63) | (1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state7))) begin
        grp_fu_1012_opcode = 2'd0;
    end else begin
        grp_fu_1012_opcode = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state70) | (1'b1 == ap_CS_fsm_state56))) begin
        grp_fu_1012_p0 = reg_1140;
    end else if ((1'b1 == ap_CS_fsm_state50)) begin
        grp_fu_1012_p0 = reg_1122;
    end else if (((1'b1 == ap_CS_fsm_state63) | (1'b1 == ap_CS_fsm_state49))) begin
        grp_fu_1012_p0 = reg_1117;
    end else if ((1'b1 == ap_CS_fsm_state45)) begin
        grp_fu_1012_p0 = reg_1089;
    end else if ((1'b1 == ap_CS_fsm_state36)) begin
        grp_fu_1012_p0 = tmp_283_reg_2428;
    end else if ((1'b1 == ap_CS_fsm_state25)) begin
        grp_fu_1012_p0 = vr_fu_1517_p3;
    end else if (((1'b1 == ap_CS_fsm_state44) | (1'b1 == ap_CS_fsm_state11))) begin
        grp_fu_1012_p0 = reg_1082;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        grp_fu_1012_p0 = pr_1_q1;
    end else begin
        grp_fu_1012_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state70) | (1'b1 == ap_CS_fsm_state56))) begin
        grp_fu_1012_p1 = reg_1122;
    end else if (((1'b1 == ap_CS_fsm_state63) | (1'b1 == ap_CS_fsm_state49))) begin
        grp_fu_1012_p1 = reg_1102;
    end else if ((1'b1 == ap_CS_fsm_state45)) begin
        grp_fu_1012_p1 = reg_1082;
    end else if (((1'b1 == ap_CS_fsm_state50) | (1'b1 == ap_CS_fsm_state44))) begin
        grp_fu_1012_p1 = q_1_reg_2456;
    end else if ((1'b1 == ap_CS_fsm_state36)) begin
        grp_fu_1012_p1 = tmp_285_reg_2444;
    end else if ((1'b1 == ap_CS_fsm_state25)) begin
        grp_fu_1012_p1 = select_ln58_fu_1535_p3;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        grp_fu_1012_p1 = grp_fu_1043_p2;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        grp_fu_1012_p1 = pi_1_q1;
    end else begin
        grp_fu_1012_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        grp_fu_1031_opcode = 2'd1;
    end else if ((1'b1 == ap_CS_fsm_state36)) begin
        grp_fu_1031_opcode = 2'd0;
    end else begin
        grp_fu_1031_opcode = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state36)) begin
        grp_fu_1031_p0 = tmp_284_reg_2438;
    end else if ((1'b1 == ap_CS_fsm_state25)) begin
        grp_fu_1031_p0 = vr_fu_1517_p3;
    end else begin
        grp_fu_1031_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state36)) begin
        grp_fu_1031_p1 = tmp_286_reg_2450;
    end else if ((1'b1 == ap_CS_fsm_state25)) begin
        grp_fu_1031_p1 = select_ln58_fu_1535_p3;
    end else begin
        grp_fu_1031_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state41)) begin
        grp_fu_1043_p0 = reg_1102;
    end else if ((1'b1 == ap_CS_fsm_state36)) begin
        grp_fu_1043_p0 = tmp_283_reg_2428;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        grp_fu_1043_p0 = grp_fu_1008_p2;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        grp_fu_1043_p0 = tmp_280_reg_2115;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        grp_fu_1043_p0 = tmp_279_fu_1405_p6;
    end else begin
        grp_fu_1043_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state41)) begin
        grp_fu_1043_p1 = tmp_246_reg_2461;
    end else if ((1'b1 == ap_CS_fsm_state36)) begin
        grp_fu_1043_p1 = tmp_284_reg_2438;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        grp_fu_1043_p1 = grp_fu_1012_p2;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        grp_fu_1043_p1 = pi_1_load_reg_2121;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        grp_fu_1043_p1 = pr_1_q1;
    end else begin
        grp_fu_1043_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state62)) begin
        grp_fu_1056_p5 = zext_ln87_reg_2498;
    end else if ((1'b1 == ap_CS_fsm_state48)) begin
        grp_fu_1056_p5 = zext_ln87_fu_1936_p1;
    end else begin
        grp_fu_1056_p5 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state34)) begin
        pi_0_address0 = zext_ln81_1_fu_1776_p1;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        pi_0_address0 = zext_ln46_1_fu_1380_p1;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        pi_0_address0 = zext_ln32_1_fu_1199_p1;
    end else begin
        pi_0_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state22)) begin
        pi_0_address1 = pi_0_addr_reg_2132;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        pi_0_address1 = 64'd0;
    end else begin
        pi_0_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state3))) begin
        pi_0_ce0 = 1'b1;
    end else begin
        pi_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state2))) begin
        pi_0_ce1 = 1'b1;
    end else begin
        pi_0_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state22)) begin
        pi_0_d1 = grp_fu_1008_p2;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        pi_0_d1 = 32'd0;
    end else begin
        pi_0_d1 = 'bx;
    end
end

always @ (*) begin
    if ((((trunc_ln46_1_reg_2049 == 2'd0) & (1'b1 == ap_CS_fsm_state22)) | ((icmp_ln21_fu_1149_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2)))) begin
        pi_0_we1 = 1'b1;
    end else begin
        pi_0_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state34)) begin
        pi_1_address0 = zext_ln81_1_fu_1776_p1;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        pi_1_address0 = zext_ln46_1_fu_1380_p1;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        pi_1_address0 = zext_ln32_1_fu_1199_p1;
    end else begin
        pi_1_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state22)) begin
        pi_1_address1 = pi_1_addr_1_reg_2137;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        pi_1_address1 = pi_1_addr_reg_1975;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        pi_1_address1 = 64'd0;
    end else begin
        pi_1_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state3))) begin
        pi_1_ce0 = 1'b1;
    end else begin
        pi_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state2))) begin
        pi_1_ce1 = 1'b1;
    end else begin
        pi_1_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state22)) begin
        pi_1_d1 = grp_fu_1008_p2;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        pi_1_d1 = 32'd3158904464;
    end else begin
        pi_1_d1 = 'bx;
    end
end

always @ (*) begin
    if ((((trunc_ln46_1_reg_2049 == 2'd1) & (1'b1 == ap_CS_fsm_state22)) | ((icmp_ln21_fu_1149_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2)))) begin
        pi_1_we1 = 1'b1;
    end else begin
        pi_1_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state34)) begin
        pi_2_address0 = zext_ln81_1_fu_1776_p1;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        pi_2_address0 = zext_ln46_1_fu_1380_p1;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        pi_2_address0 = zext_ln32_1_fu_1199_p1;
    end else begin
        pi_2_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state3))) begin
        pi_2_ce0 = 1'b1;
    end else begin
        pi_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state22)) begin
        pi_2_ce1 = 1'b1;
    end else begin
        pi_2_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln46_1_reg_2049 == 2'd2) & (1'b1 == ap_CS_fsm_state22))) begin
        pi_2_we1 = 1'b1;
    end else begin
        pi_2_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state34)) begin
        pi_3_address0 = zext_ln81_1_fu_1776_p1;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        pi_3_address0 = zext_ln46_1_fu_1380_p1;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        pi_3_address0 = zext_ln32_1_fu_1199_p1;
    end else begin
        pi_3_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state3))) begin
        pi_3_ce0 = 1'b1;
    end else begin
        pi_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state22)) begin
        pi_3_ce1 = 1'b1;
    end else begin
        pi_3_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln46_1_reg_2049 == 2'd3) & (1'b1 == ap_CS_fsm_state22))) begin
        pi_3_we1 = 1'b1;
    end else begin
        pi_3_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state34)) begin
        pr_0_address0 = zext_ln81_1_fu_1776_p1;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        pr_0_address0 = zext_ln46_1_fu_1380_p1;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        pr_0_address0 = zext_ln32_1_fu_1199_p1;
    end else begin
        pr_0_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        pr_0_address1 = zext_ln49_fu_1436_p1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        pr_0_address1 = 64'd0;
    end else begin
        pr_0_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state3))) begin
        pr_0_ce0 = 1'b1;
    end else begin
        pr_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state2))) begin
        pr_0_ce1 = 1'b1;
    end else begin
        pr_0_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        pr_0_d1 = grp_fu_1012_p2;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        pr_0_d1 = 32'd1065353216;
    end else begin
        pr_0_d1 = 'bx;
    end
end

always @ (*) begin
    if ((((trunc_ln46_1_reg_2049 == 2'd0) & (1'b1 == ap_CS_fsm_state15)) | ((icmp_ln21_fu_1149_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2)))) begin
        pr_0_we1 = 1'b1;
    end else begin
        pr_0_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state34)) begin
        pr_1_address0 = zext_ln81_1_fu_1776_p1;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        pr_1_address0 = zext_ln46_1_fu_1380_p1;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        pr_1_address0 = zext_ln32_1_fu_1199_p1;
    end else begin
        pr_1_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        pr_1_address1 = zext_ln49_fu_1436_p1;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        pr_1_address1 = pr_1_addr_reg_1970;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        pr_1_address1 = 64'd0;
    end else begin
        pr_1_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state3))) begin
        pr_1_ce0 = 1'b1;
    end else begin
        pr_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state2))) begin
        pr_1_ce1 = 1'b1;
    end else begin
        pr_1_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        pr_1_d1 = grp_fu_1012_p2;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        pr_1_d1 = 32'd1065351953;
    end else begin
        pr_1_d1 = 'bx;
    end
end

always @ (*) begin
    if ((((trunc_ln46_1_reg_2049 == 2'd1) & (1'b1 == ap_CS_fsm_state15)) | ((icmp_ln21_fu_1149_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2)))) begin
        pr_1_we1 = 1'b1;
    end else begin
        pr_1_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state34)) begin
        pr_2_address0 = zext_ln81_1_fu_1776_p1;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        pr_2_address0 = zext_ln46_1_fu_1380_p1;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        pr_2_address0 = zext_ln32_1_fu_1199_p1;
    end else begin
        pr_2_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state3))) begin
        pr_2_ce0 = 1'b1;
    end else begin
        pr_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        pr_2_ce1 = 1'b1;
    end else begin
        pr_2_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln46_1_reg_2049 == 2'd2) & (1'b1 == ap_CS_fsm_state15))) begin
        pr_2_we1 = 1'b1;
    end else begin
        pr_2_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state34)) begin
        pr_3_address0 = zext_ln81_1_fu_1776_p1;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        pr_3_address0 = zext_ln46_1_fu_1380_p1;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        pr_3_address0 = zext_ln32_1_fu_1199_p1;
    end else begin
        pr_3_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state3))) begin
        pr_3_ce0 = 1'b1;
    end else begin
        pr_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        pr_3_ce1 = 1'b1;
    end else begin
        pr_3_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln46_1_reg_2049 == 2'd3) & (1'b1 == ap_CS_fsm_state15))) begin
        pr_3_we1 = 1'b1;
    end else begin
        pr_3_we1 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((icmp_ln21_fu_1149_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state3 : begin
            if (((icmp_ln26_fu_1161_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state2;
        end
        ap_ST_fsm_state6 : begin
            if (((icmp_ln43_fu_1344_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state6))) begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state23;
            end
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state20;
        end
        ap_ST_fsm_state20 : begin
            ap_NS_fsm = ap_ST_fsm_state21;
        end
        ap_ST_fsm_state21 : begin
            ap_NS_fsm = ap_ST_fsm_state22;
        end
        ap_ST_fsm_state22 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state23 : begin
            ap_NS_fsm = ap_ST_fsm_state24;
        end
        ap_ST_fsm_state24 : begin
            if (((icmp_ln53_fu_1453_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state24))) begin
                ap_NS_fsm = ap_ST_fsm_state25;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state30;
            end
        end
        ap_ST_fsm_state25 : begin
            ap_NS_fsm = ap_ST_fsm_state26;
        end
        ap_ST_fsm_state26 : begin
            ap_NS_fsm = ap_ST_fsm_state27;
        end
        ap_ST_fsm_state27 : begin
            ap_NS_fsm = ap_ST_fsm_state28;
        end
        ap_ST_fsm_state28 : begin
            ap_NS_fsm = ap_ST_fsm_state29;
        end
        ap_ST_fsm_state29 : begin
            ap_NS_fsm = ap_ST_fsm_state24;
        end
        ap_ST_fsm_state30 : begin
            ap_NS_fsm = ap_ST_fsm_state31;
        end
        ap_ST_fsm_state31 : begin
            if (((tmp_92_fu_1559_p3 == 1'd1) & (1'b1 == ap_CS_fsm_state31))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state32;
            end
        end
        ap_ST_fsm_state32 : begin
            ap_NS_fsm = ap_ST_fsm_state33;
        end
        ap_ST_fsm_state33 : begin
            if (((icmp_ln74_fu_1721_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state33))) begin
                ap_NS_fsm = ap_ST_fsm_state31;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state34;
            end
        end
        ap_ST_fsm_state34 : begin
            if (((icmp_ln78_fu_1746_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state34))) begin
                ap_NS_fsm = ap_ST_fsm_state33;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state35;
            end
        end
        ap_ST_fsm_state35 : begin
            ap_NS_fsm = ap_ST_fsm_state36;
        end
        ap_ST_fsm_state36 : begin
            ap_NS_fsm = ap_ST_fsm_state37;
        end
        ap_ST_fsm_state37 : begin
            ap_NS_fsm = ap_ST_fsm_state38;
        end
        ap_ST_fsm_state38 : begin
            ap_NS_fsm = ap_ST_fsm_state39;
        end
        ap_ST_fsm_state39 : begin
            ap_NS_fsm = ap_ST_fsm_state40;
        end
        ap_ST_fsm_state40 : begin
            ap_NS_fsm = ap_ST_fsm_state41;
        end
        ap_ST_fsm_state41 : begin
            ap_NS_fsm = ap_ST_fsm_state42;
        end
        ap_ST_fsm_state42 : begin
            ap_NS_fsm = ap_ST_fsm_state43;
        end
        ap_ST_fsm_state43 : begin
            ap_NS_fsm = ap_ST_fsm_state44;
        end
        ap_ST_fsm_state44 : begin
            ap_NS_fsm = ap_ST_fsm_state45;
        end
        ap_ST_fsm_state45 : begin
            ap_NS_fsm = ap_ST_fsm_state46;
        end
        ap_ST_fsm_state46 : begin
            ap_NS_fsm = ap_ST_fsm_state47;
        end
        ap_ST_fsm_state47 : begin
            ap_NS_fsm = ap_ST_fsm_state48;
        end
        ap_ST_fsm_state48 : begin
            ap_NS_fsm = ap_ST_fsm_state49;
        end
        ap_ST_fsm_state49 : begin
            ap_NS_fsm = ap_ST_fsm_state50;
        end
        ap_ST_fsm_state50 : begin
            ap_NS_fsm = ap_ST_fsm_state51;
        end
        ap_ST_fsm_state51 : begin
            ap_NS_fsm = ap_ST_fsm_state52;
        end
        ap_ST_fsm_state52 : begin
            ap_NS_fsm = ap_ST_fsm_state53;
        end
        ap_ST_fsm_state53 : begin
            ap_NS_fsm = ap_ST_fsm_state54;
        end
        ap_ST_fsm_state54 : begin
            ap_NS_fsm = ap_ST_fsm_state55;
        end
        ap_ST_fsm_state55 : begin
            ap_NS_fsm = ap_ST_fsm_state56;
        end
        ap_ST_fsm_state56 : begin
            ap_NS_fsm = ap_ST_fsm_state57;
        end
        ap_ST_fsm_state57 : begin
            ap_NS_fsm = ap_ST_fsm_state58;
        end
        ap_ST_fsm_state58 : begin
            ap_NS_fsm = ap_ST_fsm_state59;
        end
        ap_ST_fsm_state59 : begin
            ap_NS_fsm = ap_ST_fsm_state60;
        end
        ap_ST_fsm_state60 : begin
            ap_NS_fsm = ap_ST_fsm_state61;
        end
        ap_ST_fsm_state61 : begin
            ap_NS_fsm = ap_ST_fsm_state62;
        end
        ap_ST_fsm_state62 : begin
            ap_NS_fsm = ap_ST_fsm_state63;
        end
        ap_ST_fsm_state63 : begin
            ap_NS_fsm = ap_ST_fsm_state64;
        end
        ap_ST_fsm_state64 : begin
            ap_NS_fsm = ap_ST_fsm_state65;
        end
        ap_ST_fsm_state65 : begin
            ap_NS_fsm = ap_ST_fsm_state66;
        end
        ap_ST_fsm_state66 : begin
            ap_NS_fsm = ap_ST_fsm_state67;
        end
        ap_ST_fsm_state67 : begin
            ap_NS_fsm = ap_ST_fsm_state68;
        end
        ap_ST_fsm_state68 : begin
            ap_NS_fsm = ap_ST_fsm_state69;
        end
        ap_ST_fsm_state69 : begin
            ap_NS_fsm = ap_ST_fsm_state70;
        end
        ap_ST_fsm_state70 : begin
            ap_NS_fsm = ap_ST_fsm_state71;
        end
        ap_ST_fsm_state71 : begin
            ap_NS_fsm = ap_ST_fsm_state72;
        end
        ap_ST_fsm_state72 : begin
            ap_NS_fsm = ap_ST_fsm_state73;
        end
        ap_ST_fsm_state73 : begin
            ap_NS_fsm = ap_ST_fsm_state74;
        end
        ap_ST_fsm_state74 : begin
            ap_NS_fsm = ap_ST_fsm_state75;
        end
        ap_ST_fsm_state75 : begin
            ap_NS_fsm = ap_ST_fsm_state34;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln29_fu_1262_p2 = (shl_ln29_fu_1250_p2 + m_0_reg_905);

assign add_ln46_1_fu_1364_p2 = (2'd3 + trunc_ln46_1_fu_1354_p1);

assign add_ln46_fu_1358_p2 = ($signed(9'd511) + $signed(trunc_ln46_fu_1350_p1));

assign add_ln74_fu_1623_p2 = ($signed(16'd65535) + $signed(m_3_fu_1615_p3));

assign add_ln78_fu_1707_p2 = ($signed(17'd131071) + $signed(select_ln78_fu_1695_p3));

assign add_ln81_1_fu_1811_p2 = ($signed(sext_ln81_fu_1802_p1) + $signed(sext_ln78_2_reg_2273));

assign add_ln81_2_fu_1806_p2 = (trunc_ln81_2_reg_2291 + trunc_ln81_4_fu_1788_p1);

assign add_ln81_3_fu_1875_p2 = (trunc_ln81_reg_2283 + add_ln81_2_reg_2344);

assign add_ln81_4_fu_1757_p2 = ($signed(sext_ln74_reg_2263) + $signed(phi_mul_reg_997));

assign add_ln81_fu_1796_p2 = ($signed(sext_ln78_3_fu_1742_p1) + $signed(sext_ln74_4_fu_1792_p1));

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state18 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state22 = ap_CS_fsm[32'd21];

assign ap_CS_fsm_state23 = ap_CS_fsm[32'd22];

assign ap_CS_fsm_state24 = ap_CS_fsm[32'd23];

assign ap_CS_fsm_state25 = ap_CS_fsm[32'd24];

assign ap_CS_fsm_state29 = ap_CS_fsm[32'd28];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state30 = ap_CS_fsm[32'd29];

assign ap_CS_fsm_state31 = ap_CS_fsm[32'd30];

assign ap_CS_fsm_state32 = ap_CS_fsm[32'd31];

assign ap_CS_fsm_state33 = ap_CS_fsm[32'd32];

assign ap_CS_fsm_state34 = ap_CS_fsm[32'd33];

assign ap_CS_fsm_state35 = ap_CS_fsm[32'd34];

assign ap_CS_fsm_state36 = ap_CS_fsm[32'd35];

assign ap_CS_fsm_state39 = ap_CS_fsm[32'd38];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state40 = ap_CS_fsm[32'd39];

assign ap_CS_fsm_state41 = ap_CS_fsm[32'd40];

assign ap_CS_fsm_state44 = ap_CS_fsm[32'd43];

assign ap_CS_fsm_state45 = ap_CS_fsm[32'd44];

assign ap_CS_fsm_state47 = ap_CS_fsm[32'd46];

assign ap_CS_fsm_state48 = ap_CS_fsm[32'd47];

assign ap_CS_fsm_state49 = ap_CS_fsm[32'd48];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state50 = ap_CS_fsm[32'd49];

assign ap_CS_fsm_state53 = ap_CS_fsm[32'd52];

assign ap_CS_fsm_state54 = ap_CS_fsm[32'd53];

assign ap_CS_fsm_state55 = ap_CS_fsm[32'd54];

assign ap_CS_fsm_state56 = ap_CS_fsm[32'd55];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state60 = ap_CS_fsm[32'd59];

assign ap_CS_fsm_state61 = ap_CS_fsm[32'd60];

assign ap_CS_fsm_state62 = ap_CS_fsm[32'd61];

assign ap_CS_fsm_state63 = ap_CS_fsm[32'd62];

assign ap_CS_fsm_state67 = ap_CS_fsm[32'd66];

assign ap_CS_fsm_state68 = ap_CS_fsm[32'd67];

assign ap_CS_fsm_state69 = ap_CS_fsm[32'd68];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state70 = ap_CS_fsm[32'd69];

assign ap_CS_fsm_state74 = ap_CS_fsm[32'd73];

assign ap_CS_fsm_state75 = ap_CS_fsm[32'd74];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign grp_fu_1037_p0 = ((icmp_ln56_reg_2172[0:0] === 1'b1) ? fi_0_q0 : fi_2_q0);

assign grp_fu_1037_p1 = ((icmp_ln58_reg_2202[0:0] === 1'b1) ? fi_1_q0 : fi_3_q0);

assign i_28_fu_1167_p2 = (i_0_reg_882 + 4'd1);

assign i_fu_1447_p2 = (i_1_reg_915 + 10'd1);

assign icmp_ln21_fu_1149_p2 = ((m_reg_870 == 10'd512) ? 1'b1 : 1'b0);

assign icmp_ln26_fu_1161_p2 = ((i_0_reg_882 == 4'd9) ? 1'b1 : 1'b0);

assign icmp_ln43_fu_1344_p2 = ((i_1_reg_915 == 10'd512) ? 1'b1 : 1'b0);

assign icmp_ln53_fu_1453_p2 = ((it_1_reg_927 < 10'd511) ? 1'b1 : 1'b0);

assign icmp_ln56_fu_1481_p2 = ((trunc_ln56_fu_1459_p1 == 2'd0) ? 1'b1 : 1'b0);

assign icmp_ln58_fu_1511_p2 = ((or_ln58_fu_1487_p2 == 2'd1) ? 1'b1 : 1'b0);

assign icmp_ln74_fu_1721_p2 = (($signed(sext_ln74_2_fu_1717_p1) > $signed(mul_ln74_reg_2268)) ? 1'b1 : 1'b0);

assign icmp_ln78_fu_1746_p2 = (($signed(sext_ln78_3_fu_1742_p1) > $signed(add_ln78_reg_2278)) ? 1'b1 : 1'b0);

assign is_fu_1268_p2 = (add_ln29_fu_1262_p2 - shl_ln29_1_fu_1256_p2);

assign it_3_fu_1852_p2 = ($signed(nv_reg_939) + $signed(it_2_reg_974));

assign it_4_fu_1553_p2 = (it_1_reg_927 + 10'd2);

assign it_fu_1155_p2 = (m_reg_870 + 10'd1);

assign j_10_fu_1242_p3 = ((tmp_91_fu_1211_p3[0:0] === 1'b1) ? sub_ln28_1_fu_1222_p2 : zext_ln28_1_fu_1238_p1);

assign j_fu_1751_p2 = ($signed(j_0_reg_986) + $signed(16'd1));

assign l0_fu_1730_p2 = ($signed(4'd15) + $signed(l0_0_reg_962));

assign lshr_ln28_2_fu_1228_p4 = {{m_0_reg_905[15:1]}};

assign lshr_ln32_1_fu_1304_p4 = {{m_reg_870[9:2]}};

assign lshr_ln3_fu_1189_p4 = {{is_0_reg_893[15:2]}};

assign lshr_ln4_fu_1463_p4 = {{it_1_reg_927[9:2]}};

assign lshr_ln5_fu_1493_p4 = {{it_1_reg_927[8:2]}};

assign lshr_ln6_fu_1766_p4 = {{phi_mul_reg_997[31:2]}};

assign lshr_ln70_1_fu_1581_p4 = {{sub_ln70_fu_1575_p2[15:1]}};

assign lshr_ln70_2_fu_1601_p4 = {{m_1_reg_951[15:1]}};

assign lshr_ln78_1_fu_1657_p4 = {{sub_ln78_fu_1651_p2[16:1]}};

assign lshr_ln_fu_1370_p4 = {{add_ln46_fu_1358_p2[8:2]}};

assign m_3_fu_1615_p3 = ((tmp_93_fu_1567_p3[0:0] === 1'b1) ? sub_ln70_1_fu_1595_p2 : zext_ln70_1_fu_1611_p1);

assign or_ln58_fu_1487_p2 = (trunc_ln56_fu_1459_p1 | 2'd1);

assign pi_1_addr_reg_1975 = 64'd0;

assign pi_2_address1 = pi_2_addr_reg_2142;

assign pi_2_d1 = grp_fu_1008_p2;

assign pi_3_address1 = pi_3_addr_reg_2147;

assign pi_3_d1 = grp_fu_1008_p2;

assign pr_1_addr_reg_1970 = 64'd0;

assign pr_2_address1 = zext_ln49_fu_1436_p1;

assign pr_2_d1 = grp_fu_1012_p2;

assign pr_3_address1 = zext_ln49_fu_1436_p1;

assign pr_3_d1 = grp_fu_1012_p2;

assign select_ln58_1_fu_1544_p3 = ((icmp_ln58_reg_2202[0:0] === 1'b1) ? fi_1_q0 : fi_3_q0);

assign select_ln58_fu_1535_p3 = ((icmp_ln58_reg_2202[0:0] === 1'b1) ? fr_1_q0 : fr_3_q0);

assign select_ln78_fu_1695_p3 = ((tmp_94_fu_1643_p3[0:0] === 1'b1) ? sub_ln78_1_fu_1671_p2 : zext_ln78_fu_1691_p1);

assign sext_ln74_2_fu_1717_p1 = it_2_reg_974;

assign sext_ln74_4_fu_1792_p1 = it_2_reg_974;

assign sext_ln74_fu_1629_p1 = m_3_reg_2252;

assign sext_ln78_1_fu_1687_p1 = $signed(trunc_ln78_1_fu_1677_p4);

assign sext_ln78_2_fu_1703_p1 = select_ln78_fu_1695_p3;

assign sext_ln78_3_fu_1742_p1 = j_0_reg_986;

assign sext_ln78_fu_1639_p1 = nv_reg_939;

assign sext_ln81_1_fu_1826_p1 = $signed(trunc_ln81_5_fu_1816_p4);

assign sext_ln81_fu_1802_p1 = add_ln81_fu_1796_p2;

assign sext_ln87_fu_1925_p1 = $signed(trunc_ln_reg_2418);

assign shl_ln29_1_fu_1256_p2 = j_10_fu_1242_p3 << 16'd1;

assign shl_ln29_fu_1250_p2 = is_0_reg_893 << 16'd1;

assign shl_ln68_fu_1736_p2 = nv_reg_939 << 16'd1;

assign sub_ln28_1_fu_1222_p2 = (16'd0 - zext_ln28_fu_1219_p1);

assign sub_ln28_fu_1173_p2 = (16'd0 - m_0_reg_905);

assign sub_ln70_1_fu_1595_p2 = (16'd0 - zext_ln70_fu_1591_p1);

assign sub_ln70_fu_1575_p2 = (16'd0 - m_1_reg_951);

assign sub_ln78_1_fu_1671_p2 = (17'd0 - zext_ln78_1_fu_1667_p1);

assign sub_ln78_fu_1651_p2 = ($signed(17'd0) - $signed(sext_ln78_fu_1639_p1));

assign tmp_91_fu_1211_p3 = m_0_reg_905[32'd15];

assign tmp_92_fu_1559_p3 = l0_0_reg_962[32'd3];

assign tmp_93_fu_1567_p3 = m_1_reg_951[32'd15];

assign tmp_94_fu_1643_p3 = nv_reg_939[32'd15];

assign trunc_ln32_1_fu_1300_p1 = m_reg_870[1:0];

assign trunc_ln32_fu_1274_p1 = is_0_reg_893[1:0];

assign trunc_ln46_1_fu_1354_p1 = i_1_reg_915[1:0];

assign trunc_ln46_fu_1350_p1 = i_1_reg_915[8:0];

assign trunc_ln56_fu_1459_p1 = it_1_reg_927[1:0];

assign trunc_ln78_1_fu_1677_p4 = {{nv_reg_939[15:1]}};

assign trunc_ln81_2_fu_1726_p1 = it_2_reg_974[1:0];

assign trunc_ln81_3_fu_1762_p1 = phi_mul_reg_997[1:0];

assign trunc_ln81_4_fu_1788_p1 = j_0_reg_986[1:0];

assign trunc_ln81_5_fu_1816_p4 = {{add_ln81_1_fu_1811_p2[17:2]}};

assign trunc_ln81_fu_1713_p1 = select_ln78_fu_1695_p3[1:0];

assign vi_fu_1526_p3 = ((icmp_ln56_reg_2172[0:0] === 1'b1) ? fi_0_q0 : fi_2_q0);

assign vr_fu_1517_p3 = ((icmp_ln56_reg_2172[0:0] === 1'b1) ? fr_0_q0 : fr_2_q0);

assign zext_ln21_fu_1145_p1 = m_reg_870;

assign zext_ln28_1_fu_1238_p1 = lshr_ln28_2_fu_1228_p4;

assign zext_ln28_fu_1219_p1 = lshr_ln28_1_reg_1988;

assign zext_ln32_1_fu_1199_p1 = lshr_ln3_fu_1189_p4;

assign zext_ln32_2_fu_1314_p1 = lshr_ln32_1_fu_1304_p4;

assign zext_ln32_fu_1278_p1 = trunc_ln32_fu_1274_p1;

assign zext_ln46_1_fu_1380_p1 = lshr_ln_fu_1370_p4;

assign zext_ln46_fu_1402_p1 = add_ln46_1_reg_2053;

assign zext_ln49_fu_1436_p1 = lshr_ln2_reg_2098;

assign zext_ln56_fu_1473_p1 = lshr_ln4_fu_1463_p4;

assign zext_ln58_fu_1503_p1 = lshr_ln5_fu_1493_p4;

assign zext_ln70_1_fu_1611_p1 = lshr_ln70_2_fu_1601_p4;

assign zext_ln70_fu_1591_p1 = lshr_ln70_1_fu_1581_p4;

assign zext_ln78_1_fu_1667_p1 = lshr_ln78_1_fu_1657_p4;

assign zext_ln78_fu_1691_p1 = $unsigned(sext_ln78_1_fu_1687_p1);

assign zext_ln81_1_fu_1776_p1 = lshr_ln6_fu_1766_p4;

assign zext_ln81_2_fu_1879_p1 = add_ln81_3_fu_1875_p2;

assign zext_ln81_3_fu_1830_p1 = $unsigned(sext_ln81_1_fu_1826_p1);

assign zext_ln81_fu_1858_p1 = trunc_ln81_3_reg_2319;

assign zext_ln87_1_fu_1928_p1 = $unsigned(sext_ln87_fu_1925_p1);

assign zext_ln87_fu_1936_p1 = add_ln81_2_reg_2344;

always @ (posedge ap_clk) begin
    sext_ln78_2_reg_2273[0] <= 1'b0;
    add_ln78_reg_2278[0] <= 1'b1;
    trunc_ln81_reg_2283[0] <= 1'b0;
    zext_ln87_1_reg_2466[63:30] <= 34'b0000000000000000000000000000000000;
    zext_ln87_reg_2498[31:2] <= 30'b000000000000000000000000000000;
    nv_reg_939[1:0] <= 2'b00;
end

endmodule //kfft

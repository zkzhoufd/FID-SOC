// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module sin_or_cos_double_s (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        ap_ce,
        t_in,
        ap_return
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;
parameter    ap_const_lv32_0 = 32'd0;




input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input   ap_ce;
input  [63:0] t_in;
output  [63:0] ap_return;

reg ap_done;
reg ap_idle;
reg ap_ready;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
wire    ap_block_pp0_stage0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_enable_reg_pp0_iter7;
reg    ap_enable_reg_pp0_iter8;
reg    ap_enable_reg_pp0_iter9;
reg    ap_enable_reg_pp0_iter10;
reg    ap_enable_reg_pp0_iter11;
reg    ap_enable_reg_pp0_iter12;
reg    ap_enable_reg_pp0_iter13;
reg    ap_enable_reg_pp0_iter14;
reg    ap_enable_reg_pp0_iter15;
reg    ap_enable_reg_pp0_iter16;
reg    ap_enable_reg_pp0_iter17;
reg    ap_enable_reg_pp0_iter18;
reg    ap_enable_reg_pp0_iter19;
reg    ap_enable_reg_pp0_iter20;
reg    ap_enable_reg_pp0_iter21;
reg    ap_enable_reg_pp0_iter22;
reg    ap_enable_reg_pp0_iter23;
reg    ap_enable_reg_pp0_iter24;
reg    ap_idle_pp0;
reg    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state2_pp0_stage0_iter1;
wire    ap_block_state3_pp0_stage0_iter2;
wire    ap_block_state4_pp0_stage0_iter3;
wire    ap_block_state5_pp0_stage0_iter4;
wire    ap_block_state6_pp0_stage0_iter5;
wire    ap_block_state7_pp0_stage0_iter6;
wire    ap_block_state8_pp0_stage0_iter7;
wire    ap_block_state9_pp0_stage0_iter8;
wire    ap_block_state10_pp0_stage0_iter9;
wire    ap_block_state11_pp0_stage0_iter10;
wire    ap_block_state12_pp0_stage0_iter11;
wire    ap_block_state13_pp0_stage0_iter12;
wire    ap_block_state14_pp0_stage0_iter13;
wire    ap_block_state15_pp0_stage0_iter14;
wire    ap_block_state16_pp0_stage0_iter15;
wire    ap_block_state17_pp0_stage0_iter16;
wire    ap_block_state18_pp0_stage0_iter17;
wire    ap_block_state19_pp0_stage0_iter18;
wire    ap_block_state20_pp0_stage0_iter19;
wire    ap_block_state21_pp0_stage0_iter20;
wire    ap_block_state22_pp0_stage0_iter21;
wire    ap_block_state23_pp0_stage0_iter22;
wire    ap_block_state24_pp0_stage0_iter23;
wire    ap_block_state25_pp0_stage0_iter24;
reg    ap_block_pp0_stage0_11001;
wire   [3:0] ref_4oPi_table_256_V_address0;
reg    ref_4oPi_table_256_V_ce0;
wire   [255:0] ref_4oPi_table_256_V_q0;
wire   [7:0] fourth_order_double_4_address0;
reg    fourth_order_double_4_ce0;
wire   [58:0] fourth_order_double_4_q0;
wire   [7:0] fourth_order_double_5_address0;
reg    fourth_order_double_5_ce0;
wire   [51:0] fourth_order_double_5_q0;
wire   [7:0] fourth_order_double_6_address0;
reg    fourth_order_double_6_ce0;
wire   [43:0] fourth_order_double_6_q0;
wire   [7:0] fourth_order_double_7_address0;
reg    fourth_order_double_7_ce0;
wire   [32:0] fourth_order_double_7_q0;
wire   [7:0] fourth_order_double_s_address0;
reg    fourth_order_double_s_ce0;
wire   [24:0] fourth_order_double_s_q0;
reg   [0:0] p_Result_28_reg_1473;
reg   [0:0] p_Result_28_reg_1473_pp0_iter1_reg;
reg   [0:0] p_Result_28_reg_1473_pp0_iter2_reg;
reg   [0:0] p_Result_28_reg_1473_pp0_iter3_reg;
reg   [0:0] p_Result_28_reg_1473_pp0_iter4_reg;
reg   [0:0] p_Result_28_reg_1473_pp0_iter5_reg;
reg   [0:0] p_Result_28_reg_1473_pp0_iter6_reg;
wire   [10:0] tmp_V_fu_310_p4;
reg   [10:0] tmp_V_reg_1478;
reg   [10:0] tmp_V_reg_1478_pp0_iter1_reg;
reg   [10:0] tmp_V_reg_1478_pp0_iter2_reg;
reg   [10:0] tmp_V_reg_1478_pp0_iter3_reg;
reg   [10:0] tmp_V_reg_1478_pp0_iter4_reg;
reg   [10:0] tmp_V_reg_1478_pp0_iter5_reg;
reg   [10:0] tmp_V_reg_1478_pp0_iter6_reg;
reg   [10:0] tmp_V_reg_1478_pp0_iter7_reg;
wire   [51:0] tmp_V_2_fu_320_p1;
reg   [51:0] tmp_V_2_reg_1485;
reg   [51:0] tmp_V_2_reg_1485_pp0_iter1_reg;
wire   [0:0] closepath_fu_324_p2;
reg   [0:0] closepath_reg_1491;
reg   [0:0] closepath_reg_1491_pp0_iter1_reg;
reg   [0:0] closepath_reg_1491_pp0_iter2_reg;
reg   [0:0] closepath_reg_1491_pp0_iter3_reg;
reg   [0:0] closepath_reg_1491_pp0_iter4_reg;
reg   [0:0] closepath_reg_1491_pp0_iter5_reg;
reg   [0:0] closepath_reg_1491_pp0_iter6_reg;
reg   [0:0] closepath_reg_1491_pp0_iter7_reg;
wire   [6:0] trunc_ln601_fu_359_p1;
reg   [6:0] trunc_ln601_reg_1502;
reg   [169:0] ret_V_15_reg_1507;
wire   [0:0] icmp_ln833_1_fu_402_p2;
reg   [0:0] icmp_ln833_1_reg_1522;
reg   [0:0] icmp_ln833_1_reg_1522_pp0_iter3_reg;
reg   [0:0] icmp_ln833_1_reg_1522_pp0_iter4_reg;
reg   [0:0] icmp_ln833_1_reg_1522_pp0_iter5_reg;
reg   [0:0] icmp_ln833_1_reg_1522_pp0_iter6_reg;
reg   [123:0] p_Val2_44_reg_1528;
reg   [2:0] trunc_ln_i_reg_1534;
wire   [123:0] p_Val2_14_fu_442_p3;
reg   [123:0] p_Val2_14_reg_1539;
reg   [60:0] p_Result_i_i_54_reg_1544;
wire   [0:0] sin_basis_fu_459_p10;
reg   [0:0] sin_basis_reg_1549;
reg   [0:0] sin_basis_reg_1549_pp0_iter8_reg;
reg   [0:0] sin_basis_reg_1549_pp0_iter9_reg;
reg   [0:0] sin_basis_reg_1549_pp0_iter10_reg;
reg   [0:0] sin_basis_reg_1549_pp0_iter11_reg;
reg   [0:0] sin_basis_reg_1549_pp0_iter12_reg;
reg   [0:0] sin_basis_reg_1549_pp0_iter13_reg;
reg   [0:0] sin_basis_reg_1549_pp0_iter14_reg;
reg   [0:0] sin_basis_reg_1549_pp0_iter15_reg;
reg   [0:0] sin_basis_reg_1549_pp0_iter16_reg;
reg   [0:0] sin_basis_reg_1549_pp0_iter17_reg;
reg   [0:0] sin_basis_reg_1549_pp0_iter18_reg;
reg   [0:0] sin_basis_reg_1549_pp0_iter19_reg;
reg   [0:0] sin_basis_reg_1549_pp0_iter20_reg;
reg   [0:0] sin_basis_reg_1549_pp0_iter21_reg;
reg   [0:0] sin_basis_reg_1549_pp0_iter22_reg;
reg   [0:0] sin_basis_reg_1549_pp0_iter23_reg;
wire   [0:0] and_ln300_fu_577_p2;
reg   [0:0] and_ln300_reg_1556;
reg   [0:0] and_ln300_reg_1556_pp0_iter8_reg;
reg   [0:0] and_ln300_reg_1556_pp0_iter9_reg;
reg   [0:0] and_ln300_reg_1556_pp0_iter10_reg;
reg   [0:0] and_ln300_reg_1556_pp0_iter11_reg;
reg   [0:0] and_ln300_reg_1556_pp0_iter12_reg;
reg   [0:0] and_ln300_reg_1556_pp0_iter13_reg;
reg   [0:0] and_ln300_reg_1556_pp0_iter14_reg;
reg   [0:0] and_ln300_reg_1556_pp0_iter15_reg;
reg   [0:0] and_ln300_reg_1556_pp0_iter16_reg;
reg   [0:0] and_ln300_reg_1556_pp0_iter17_reg;
reg   [0:0] and_ln300_reg_1556_pp0_iter18_reg;
reg   [0:0] and_ln300_reg_1556_pp0_iter19_reg;
reg   [0:0] and_ln300_reg_1556_pp0_iter20_reg;
reg   [0:0] and_ln300_reg_1556_pp0_iter21_reg;
reg   [0:0] and_ln300_reg_1556_pp0_iter22_reg;
reg   [0:0] and_ln300_reg_1556_pp0_iter23_reg;
wire   [0:0] icmp_ln833_2_fu_582_p2;
reg   [0:0] icmp_ln833_2_reg_1563;
reg   [0:0] icmp_ln833_2_reg_1563_pp0_iter8_reg;
reg   [0:0] icmp_ln833_2_reg_1563_pp0_iter9_reg;
reg   [0:0] icmp_ln833_2_reg_1563_pp0_iter10_reg;
reg   [0:0] icmp_ln833_2_reg_1563_pp0_iter11_reg;
reg   [0:0] icmp_ln833_2_reg_1563_pp0_iter12_reg;
reg   [0:0] icmp_ln833_2_reg_1563_pp0_iter13_reg;
reg   [0:0] icmp_ln833_2_reg_1563_pp0_iter14_reg;
reg   [0:0] icmp_ln833_2_reg_1563_pp0_iter15_reg;
reg   [0:0] icmp_ln833_2_reg_1563_pp0_iter16_reg;
reg   [0:0] icmp_ln833_2_reg_1563_pp0_iter17_reg;
reg   [0:0] icmp_ln833_2_reg_1563_pp0_iter18_reg;
reg   [0:0] icmp_ln833_2_reg_1563_pp0_iter19_reg;
reg   [0:0] icmp_ln833_2_reg_1563_pp0_iter20_reg;
reg   [0:0] icmp_ln833_2_reg_1563_pp0_iter21_reg;
reg   [0:0] icmp_ln833_2_reg_1563_pp0_iter22_reg;
reg   [0:0] icmp_ln833_2_reg_1563_pp0_iter23_reg;
wire   [0:0] p_Repl2_3_fu_610_p2;
reg   [0:0] p_Repl2_3_reg_1568;
reg   [0:0] p_Repl2_3_reg_1568_pp0_iter8_reg;
reg   [0:0] p_Repl2_3_reg_1568_pp0_iter9_reg;
reg   [0:0] p_Repl2_3_reg_1568_pp0_iter10_reg;
reg   [0:0] p_Repl2_3_reg_1568_pp0_iter11_reg;
reg   [0:0] p_Repl2_3_reg_1568_pp0_iter12_reg;
reg   [0:0] p_Repl2_3_reg_1568_pp0_iter13_reg;
reg   [0:0] p_Repl2_3_reg_1568_pp0_iter14_reg;
reg   [0:0] p_Repl2_3_reg_1568_pp0_iter15_reg;
reg   [0:0] p_Repl2_3_reg_1568_pp0_iter16_reg;
reg   [0:0] p_Repl2_3_reg_1568_pp0_iter17_reg;
reg   [0:0] p_Repl2_3_reg_1568_pp0_iter18_reg;
reg   [0:0] p_Repl2_3_reg_1568_pp0_iter19_reg;
reg   [0:0] p_Repl2_3_reg_1568_pp0_iter20_reg;
reg   [0:0] p_Repl2_3_reg_1568_pp0_iter21_reg;
reg   [0:0] p_Repl2_3_reg_1568_pp0_iter22_reg;
reg   [0:0] p_Repl2_3_reg_1568_pp0_iter23_reg;
reg   [62:0] Mx_V_reg_1573;
reg   [62:0] Mx_V_reg_1573_pp0_iter9_reg;
reg   [62:0] Mx_V_reg_1573_pp0_iter10_reg;
reg   [62:0] Mx_V_reg_1573_pp0_iter11_reg;
reg   [62:0] Mx_V_reg_1573_pp0_iter12_reg;
reg   [62:0] Mx_V_reg_1573_pp0_iter13_reg;
reg   [62:0] Mx_V_reg_1573_pp0_iter14_reg;
reg   [62:0] Mx_V_reg_1573_pp0_iter15_reg;
reg   [62:0] Mx_V_reg_1573_pp0_iter16_reg;
wire  signed [10:0] Ex_V_fu_688_p2;
reg  signed [10:0] Ex_V_reg_1580;
reg  signed [10:0] Ex_V_reg_1580_pp0_iter9_reg;
reg  signed [10:0] Ex_V_reg_1580_pp0_iter10_reg;
reg  signed [10:0] Ex_V_reg_1580_pp0_iter11_reg;
reg  signed [10:0] Ex_V_reg_1580_pp0_iter12_reg;
reg  signed [10:0] Ex_V_reg_1580_pp0_iter13_reg;
reg  signed [10:0] Ex_V_reg_1580_pp0_iter14_reg;
reg  signed [10:0] Ex_V_reg_1580_pp0_iter15_reg;
reg  signed [10:0] Ex_V_reg_1580_pp0_iter16_reg;
reg  signed [10:0] Ex_V_reg_1580_pp0_iter17_reg;
reg  signed [10:0] Ex_V_reg_1580_pp0_iter18_reg;
reg  signed [10:0] Ex_V_reg_1580_pp0_iter19_reg;
reg  signed [10:0] Ex_V_reg_1580_pp0_iter20_reg;
reg  signed [10:0] Ex_V_reg_1580_pp0_iter21_reg;
reg  signed [10:0] Ex_V_reg_1580_pp0_iter22_reg;
reg  signed [10:0] Ex_V_reg_1580_pp0_iter23_reg;
reg   [0:0] isNeg_reg_1586;
reg   [6:0] p_Result_i_reg_1592;
wire   [55:0] B_V_fu_753_p1;
reg   [55:0] B_V_reg_1597;
reg   [55:0] B_V_reg_1597_pp0_iter10_reg;
reg   [55:0] B_V_reg_1597_pp0_iter11_reg;
reg   [48:0] B_trunc_V_reg_1602;
wire   [97:0] r_V_6_fu_767_p1;
reg   [97:0] r_V_6_reg_1607;
reg   [97:0] r_V_6_reg_1607_pp0_iter11_reg;
wire   [63:0] zext_ln498_fu_782_p1;
reg   [63:0] zext_ln498_reg_1614;
reg   [63:0] zext_ln498_reg_1614_pp0_iter11_reg;
reg   [48:0] B_squared_V_reg_1631;
reg  signed [51:0] fourth_order_double_10_reg_1637;
reg  signed [43:0] fourth_order_double_12_reg_1642;
wire   [97:0] r_V_9_fu_798_p1;
reg   [41:0] B_third_power_V_reg_1689;
reg   [34:0] B_fourth_power_V_reg_1694;
reg   [58:0] p_Val2_22_reg_1699;
reg   [55:0] trunc_ln1_reg_1704;
reg   [47:0] trunc_ln662_1_reg_1709;
reg   [32:0] fourth_order_double_14_reg_1714;
reg   [24:0] fourth_order_double_16_reg_1719;
reg   [28:0] tmp_2_reg_1734;
reg   [28:0] tmp_2_reg_1734_pp0_iter15_reg;
wire   [63:0] ret_V_18_fu_933_p2;
reg   [63:0] ret_V_18_reg_1739;
reg   [63:0] ret_V_18_reg_1739_pp0_iter15_reg;
reg   [36:0] tmp_1_reg_1744;
wire   [63:0] ret_V_fu_960_p2;
reg  signed [63:0] ret_V_reg_1749;
reg   [62:0] result_V_reg_1764;
reg   [15:0] p_Result_1_i_reg_1770;
reg   [15:0] p_Result_13_1_i_reg_1775;
reg   [15:0] p_Result_13_2_i_reg_1780;
reg   [15:0] p_Result_13_2_i_reg_1780_pp0_iter22_reg;
reg   [14:0] p_Result_i_55_reg_1785;
reg   [14:0] p_Result_i_55_reg_1785_pp0_iter22_reg;
reg   [31:0] tmp_i_i2_fu_1083_p3;
reg   [31:0] tmp_i_i2_reg_1790;
reg   [31:0] tmp_i2_i_fu_1101_p3;
reg   [31:0] tmp_i2_i_reg_1796;
wire   [62:0] shl_ln1253_fu_1113_p2;
reg   [62:0] shl_ln1253_reg_1803;
reg   [62:0] shl_ln1253_reg_1803_pp0_iter23_reg;
wire   [0:0] icmp_ln1452_fu_1118_p2;
reg   [0:0] icmp_ln1452_reg_1809;
reg   [0:0] icmp_ln1452_reg_1809_pp0_iter23_reg;
reg   [31:0] tmp_i6_i_fu_1189_p3;
reg   [31:0] tmp_i6_i_reg_1814;
wire   [0:0] icmp_ln444_fu_1197_p2;
reg   [0:0] icmp_ln444_reg_1819;
wire   [31:0] add_ln442_fu_1202_p2;
reg   [31:0] add_ln442_reg_1826;
wire   [62:0] shl_ln1253_1_fu_1210_p2;
reg   [62:0] shl_ln1253_1_reg_1831;
wire   [0:0] icmp_ln444_1_fu_1215_p2;
reg   [0:0] icmp_ln444_1_reg_1836;
wire   [62:0] shl_ln1253_2_fu_1230_p2;
reg   [62:0] shl_ln1253_2_reg_1842;
wire   [0:0] icmp_ln444_2_fu_1236_p2;
reg   [0:0] icmp_ln444_2_reg_1848;
wire   [31:0] add_ln442_2_fu_1242_p2;
reg   [31:0] add_ln442_2_reg_1853;
wire   [31:0] select_ln444_1_fu_1248_p3;
reg   [31:0] select_ln444_1_reg_1858;
reg    ap_block_pp0_stage0_subdone;
wire   [63:0] zext_ln635_fu_354_p1;
wire   [63:0] p_Val2_s_fu_298_p1;
wire   [10:0] add_ln114_1_fu_330_p2;
wire   [10:0] addr_V_fu_336_p3;
wire   [3:0] p_Result_i_i_fu_344_p4;
wire   [255:0] zext_ln744_fu_363_p1;
wire   [255:0] r_V_18_fu_366_p2;
wire   [52:0] p_Result_29_fu_382_p3;
wire   [52:0] grp_fu_396_p0;
wire   [169:0] grp_fu_396_p1;
wire   [222:0] grp_fu_396_p2;
wire   [2:0] p_Val2_45_fu_427_p3;
wire   [0:0] trunc_ln745_fu_433_p1;
wire   [123:0] Mx_bits_V_1_fu_437_p2;
wire   [3:0] p_Result_38_fu_481_p3;
wire   [0:0] tmp_fu_488_p18;
wire   [0:0] tmp_s_fu_526_p18;
wire   [0:0] icmp_ln833_fu_572_p2;
wire   [0:0] select_ln271_fu_564_p3;
wire   [0:0] xor_ln311_fu_587_p2;
wire   [0:0] and_ln300_1_fu_599_p2;
wire   [0:0] and_ln311_fu_593_p2;
wire   [0:0] xor_ln300_fu_604_p2;
wire   [10:0] add_ln114_fu_616_p2;
wire   [61:0] p_Result_30_fu_628_p3;
reg   [61:0] p_Result_s_fu_635_p4;
wire   [63:0] p_Result_31_fu_645_p3;
reg   [63:0] tmp_i_i_fu_653_p3;
wire   [5:0] Mx_zeros_V_fu_661_p1;
wire   [123:0] zext_ln1253_fu_665_p1;
wire   [123:0] r_V_19_fu_669_p2;
wire   [10:0] select_ln482_fu_621_p3;
wire   [10:0] zext_ln655_fu_684_p1;
wire  signed [11:0] sext_ln1334_fu_702_p1;
wire   [11:0] sub_ln1311_fu_705_p2;
wire   [11:0] ush_fu_711_p3;
wire  signed [31:0] sext_ln1311_fu_718_p1;
wire   [62:0] zext_ln1287_fu_722_p1;
wire   [62:0] r_V_fu_726_p2;
wire   [62:0] r_V_4_fu_731_p2;
wire   [62:0] r_V_20_fu_736_p3;
wire   [48:0] grp_fu_770_p0;
wire   [48:0] grp_fu_770_p1;
wire   [7:0] p_Result_32_fu_776_p3;
wire   [97:0] grp_fu_770_p2;
wire   [48:0] grp_fu_801_p0;
wire   [48:0] grp_fu_801_p1;
wire   [48:0] grp_fu_806_p0;
wire   [48:0] grp_fu_806_p1;
wire   [55:0] grp_fu_818_p1;
wire   [48:0] grp_fu_830_p1;
wire   [97:0] grp_fu_801_p2;
wire   [97:0] grp_fu_806_p2;
wire   [107:0] grp_fu_818_p2;
wire   [92:0] grp_fu_830_p2;
wire   [32:0] grp_fu_889_p0;
wire   [41:0] grp_fu_889_p1;
wire   [24:0] r_V_27_fu_901_p0;
wire   [34:0] r_V_27_fu_901_p1;
wire   [59:0] r_V_27_fu_901_p2;
wire   [62:0] t1_V_fu_876_p3;
wire  signed [63:0] rhs_V_2_fu_921_p1;
wire  signed [63:0] lhs_V_1_fu_917_p1;
wire  signed [63:0] sext_ln657_fu_930_p1;
wire   [63:0] ret_V_17_fu_924_p2;
wire   [74:0] grp_fu_889_p2;
wire   [63:0] zext_ln657_fu_949_p1;
wire   [63:0] zext_ln657_1_fu_957_p1;
wire   [63:0] ret_V_19_fu_952_p2;
wire   [62:0] select_ln272_1_fu_966_p3;
wire   [62:0] grp_fu_979_p0;
wire   [125:0] grp_fu_979_p2;
wire   [16:0] tmp_i_fu_1035_p3;
wire   [16:0] tmp_8_i_fu_1054_p3;
wire   [31:0] p_Val2_34_fu_1042_p5;
reg   [31:0] p_Result_34_fu_1073_p4;
wire   [31:0] p_Val2_35_fu_1061_p5;
reg   [31:0] p_Result_35_fu_1091_p4;
wire   [62:0] zext_ln1287_1_fu_1109_p1;
wire   [16:0] tmp_9_i_fu_1123_p3;
wire   [15:0] tmp_i_56_fu_1142_p3;
wire   [31:0] p_Val2_36_fu_1130_p5;
reg   [31:0] p_Result_36_fu_1161_p4;
wire   [31:0] p_Result_33_fu_1149_p5;
reg   [31:0] p_Result_37_fu_1179_p4;
wire   [62:0] zext_ln1287_2_fu_1207_p1;
reg   [31:0] tmp_i4_i_fu_1171_p3;
wire   [62:0] zext_ln1287_3_fu_1226_p1;
wire   [31:0] add_ln442_1_fu_1220_p2;
wire   [10:0] select_ln272_fu_1255_p3;
wire   [62:0] zext_ln1287_4_fu_1265_p1;
wire   [0:0] xor_ln444_fu_1273_p2;
wire   [0:0] and_ln444_1_fu_1283_p2;
wire   [0:0] and_ln444_2_fu_1287_p2;
wire   [0:0] and_ln444_fu_1278_p2;
wire   [0:0] or_ln444_fu_1292_p2;
wire   [31:0] select_ln444_fu_1298_p3;
wire  signed [11:0] rhs_V_fu_1261_p1;
wire   [11:0] add_ln452_fu_1311_p2;
wire  signed [31:0] sext_ln452_fu_1317_p1;
wire   [31:0] select_ln444_2_fu_1304_p3;
wire   [31:0] newexp_fu_1321_p2;
wire   [0:0] tmp_3_fu_1327_p3;
wire   [62:0] shl_ln1253_3_fu_1268_p2;
wire   [51:0] tmp_4_fu_1344_p4;
wire   [51:0] tmp_5_fu_1354_p4;
wire   [51:0] tmp_6_fu_1371_p4;
wire   [51:0] tmp_7_fu_1380_p4;
wire   [51:0] select_ln444_3_fu_1363_p3;
wire   [51:0] select_ln444_4_fu_1389_p3;
wire   [0:0] or_ln453_fu_1335_p2;
wire   [51:0] select_ln444_5_fu_1396_p3;
wire   [10:0] empty_fu_1340_p1;
wire   [0:0] or_ln300_fu_1427_p2;
wire   [10:0] select_ln300_fu_1420_p3;
wire   [10:0] out_exp_V_fu_1412_p3;
wire   [0:0] xor_ln300_1_fu_1439_p2;
wire   [51:0] select_ln300_2_fu_1444_p3;
wire   [51:0] significand_V_fu_1404_p3;
wire   [10:0] ret_V_13_fu_1431_p3;
wire   [51:0] ret_V_14_fu_1452_p3;
wire   [63:0] p_Result_39_fu_1460_p4;
reg    grp_fu_396_ce;
reg    grp_fu_770_ce;
reg    grp_fu_801_ce;
reg    grp_fu_806_ce;
reg    grp_fu_818_ce;
reg    grp_fu_830_ce;
reg    grp_fu_889_ce;
reg    grp_fu_979_ce;
reg   [0:0] ap_NS_fsm;
reg    ap_idle_pp0_0to23;
reg    ap_reset_idle_pp0;
wire    ap_enable_pp0;
wire   [222:0] grp_fu_396_p00;
wire   [222:0] grp_fu_396_p10;
wire   [107:0] grp_fu_818_p10;
wire   [92:0] grp_fu_830_p10;
wire   [74:0] grp_fu_889_p00;
wire   [74:0] grp_fu_889_p10;
wire   [125:0] grp_fu_979_p00;
wire   [59:0] r_V_27_fu_901_p00;
wire   [59:0] r_V_27_fu_901_p10;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_enable_reg_pp0_iter8 = 1'b0;
#0 ap_enable_reg_pp0_iter9 = 1'b0;
#0 ap_enable_reg_pp0_iter10 = 1'b0;
#0 ap_enable_reg_pp0_iter11 = 1'b0;
#0 ap_enable_reg_pp0_iter12 = 1'b0;
#0 ap_enable_reg_pp0_iter13 = 1'b0;
#0 ap_enable_reg_pp0_iter14 = 1'b0;
#0 ap_enable_reg_pp0_iter15 = 1'b0;
#0 ap_enable_reg_pp0_iter16 = 1'b0;
#0 ap_enable_reg_pp0_iter17 = 1'b0;
#0 ap_enable_reg_pp0_iter18 = 1'b0;
#0 ap_enable_reg_pp0_iter19 = 1'b0;
#0 ap_enable_reg_pp0_iter20 = 1'b0;
#0 ap_enable_reg_pp0_iter21 = 1'b0;
#0 ap_enable_reg_pp0_iter22 = 1'b0;
#0 ap_enable_reg_pp0_iter23 = 1'b0;
#0 ap_enable_reg_pp0_iter24 = 1'b0;
end

sin_or_cos_doublebkb #(
    .DataWidth( 256 ),
    .AddressRange( 10 ),
    .AddressWidth( 4 ))
ref_4oPi_table_256_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(ref_4oPi_table_256_V_address0),
    .ce0(ref_4oPi_table_256_V_ce0),
    .q0(ref_4oPi_table_256_V_q0)
);

sin_or_cos_doublecud #(
    .DataWidth( 59 ),
    .AddressRange( 256 ),
    .AddressWidth( 8 ))
fourth_order_double_4_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(fourth_order_double_4_address0),
    .ce0(fourth_order_double_4_ce0),
    .q0(fourth_order_double_4_q0)
);

sin_or_cos_doubledEe #(
    .DataWidth( 52 ),
    .AddressRange( 256 ),
    .AddressWidth( 8 ))
fourth_order_double_5_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(fourth_order_double_5_address0),
    .ce0(fourth_order_double_5_ce0),
    .q0(fourth_order_double_5_q0)
);

sin_or_cos_doubleeOg #(
    .DataWidth( 44 ),
    .AddressRange( 256 ),
    .AddressWidth( 8 ))
fourth_order_double_6_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(fourth_order_double_6_address0),
    .ce0(fourth_order_double_6_ce0),
    .q0(fourth_order_double_6_q0)
);

sin_or_cos_doublefYi #(
    .DataWidth( 33 ),
    .AddressRange( 256 ),
    .AddressWidth( 8 ))
fourth_order_double_7_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(fourth_order_double_7_address0),
    .ce0(fourth_order_double_7_ce0),
    .q0(fourth_order_double_7_q0)
);

sin_or_cos_doubleg8j #(
    .DataWidth( 25 ),
    .AddressRange( 256 ),
    .AddressWidth( 8 ))
fourth_order_double_s_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(fourth_order_double_s_address0),
    .ce0(fourth_order_double_s_ce0),
    .q0(fourth_order_double_s_q0)
);

pic_detec_mul_53nhbi #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 53 ),
    .din1_WIDTH( 170 ),
    .dout_WIDTH( 223 ))
pic_detec_mul_53nhbi_U1(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_396_p0),
    .din1(grp_fu_396_p1),
    .ce(grp_fu_396_ce),
    .dout(grp_fu_396_p2)
);

pic_detec_mux_83_ibs #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 1 ),
    .din1_WIDTH( 1 ),
    .din2_WIDTH( 1 ),
    .din3_WIDTH( 1 ),
    .din4_WIDTH( 1 ),
    .din5_WIDTH( 1 ),
    .din6_WIDTH( 1 ),
    .din7_WIDTH( 1 ),
    .din8_WIDTH( 3 ),
    .dout_WIDTH( 1 ))
pic_detec_mux_83_ibs_U2(
    .din0(1'd0),
    .din1(1'd1),
    .din2(1'd1),
    .din3(1'd0),
    .din4(1'd0),
    .din5(1'd1),
    .din6(1'd1),
    .din7(1'd0),
    .din8(p_Val2_45_fu_427_p3),
    .dout(sin_basis_fu_459_p10)
);

pic_detec_mux_164jbC #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 1 ),
    .din1_WIDTH( 1 ),
    .din2_WIDTH( 1 ),
    .din3_WIDTH( 1 ),
    .din4_WIDTH( 1 ),
    .din5_WIDTH( 1 ),
    .din6_WIDTH( 1 ),
    .din7_WIDTH( 1 ),
    .din8_WIDTH( 1 ),
    .din9_WIDTH( 1 ),
    .din10_WIDTH( 1 ),
    .din11_WIDTH( 1 ),
    .din12_WIDTH( 1 ),
    .din13_WIDTH( 1 ),
    .din14_WIDTH( 1 ),
    .din15_WIDTH( 1 ),
    .din16_WIDTH( 4 ),
    .dout_WIDTH( 1 ))
pic_detec_mux_164jbC_U3(
    .din0(1'd0),
    .din1(1'd0),
    .din2(1'd1),
    .din3(1'd0),
    .din4(1'd1),
    .din5(1'd1),
    .din6(1'd0),
    .din7(1'd1),
    .din8(1'd1),
    .din9(1'd0),
    .din10(1'd1),
    .din11(1'd1),
    .din12(1'd0),
    .din13(1'd1),
    .din14(1'd0),
    .din15(1'd0),
    .din16(p_Result_38_fu_481_p3),
    .dout(tmp_fu_488_p18)
);

pic_detec_mux_164jbC #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 1 ),
    .din1_WIDTH( 1 ),
    .din2_WIDTH( 1 ),
    .din3_WIDTH( 1 ),
    .din4_WIDTH( 1 ),
    .din5_WIDTH( 1 ),
    .din6_WIDTH( 1 ),
    .din7_WIDTH( 1 ),
    .din8_WIDTH( 1 ),
    .din9_WIDTH( 1 ),
    .din10_WIDTH( 1 ),
    .din11_WIDTH( 1 ),
    .din12_WIDTH( 1 ),
    .din13_WIDTH( 1 ),
    .din14_WIDTH( 1 ),
    .din15_WIDTH( 1 ),
    .din16_WIDTH( 4 ),
    .dout_WIDTH( 1 ))
pic_detec_mux_164jbC_U4(
    .din0(1'd0),
    .din1(1'd0),
    .din2(1'd0),
    .din3(1'd1),
    .din4(1'd1),
    .din5(1'd1),
    .din6(1'd1),
    .din7(1'd0),
    .din8(1'd0),
    .din9(1'd1),
    .din10(1'd1),
    .din11(1'd1),
    .din12(1'd1),
    .din13(1'd0),
    .din14(1'd0),
    .din15(1'd0),
    .din16(p_Result_38_fu_481_p3),
    .dout(tmp_s_fu_526_p18)
);

pic_detec_mul_49nkbM #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 49 ),
    .din1_WIDTH( 49 ),
    .dout_WIDTH( 98 ))
pic_detec_mul_49nkbM_U5(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_770_p0),
    .din1(grp_fu_770_p1),
    .ce(grp_fu_770_ce),
    .dout(grp_fu_770_p2)
);

pic_detec_mul_49nkbM #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 49 ),
    .din1_WIDTH( 49 ),
    .dout_WIDTH( 98 ))
pic_detec_mul_49nkbM_U6(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_801_p0),
    .din1(grp_fu_801_p1),
    .ce(grp_fu_801_ce),
    .dout(grp_fu_801_p2)
);

pic_detec_mul_49nkbM #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 49 ),
    .din1_WIDTH( 49 ),
    .dout_WIDTH( 98 ))
pic_detec_mul_49nkbM_U7(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_806_p0),
    .din1(grp_fu_806_p1),
    .ce(grp_fu_806_ce),
    .dout(grp_fu_806_p2)
);

pic_detec_mul_52slbW #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 52 ),
    .din1_WIDTH( 56 ),
    .dout_WIDTH( 108 ))
pic_detec_mul_52slbW_U8(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(fourth_order_double_10_reg_1637),
    .din1(grp_fu_818_p1),
    .ce(grp_fu_818_ce),
    .dout(grp_fu_818_p2)
);

pic_detec_mul_44smb6 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 44 ),
    .din1_WIDTH( 49 ),
    .dout_WIDTH( 93 ))
pic_detec_mul_44smb6_U9(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(fourth_order_double_12_reg_1642),
    .din1(grp_fu_830_p1),
    .ce(grp_fu_830_ce),
    .dout(grp_fu_830_p2)
);

pic_detec_mul_33nncg #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 33 ),
    .din1_WIDTH( 42 ),
    .dout_WIDTH( 75 ))
pic_detec_mul_33nncg_U10(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_889_p0),
    .din1(grp_fu_889_p1),
    .ce(grp_fu_889_ce),
    .dout(grp_fu_889_p2)
);

pic_detec_mul_63nocq #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 63 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 126 ))
pic_detec_mul_63nocq_U11(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_979_p0),
    .din1(ret_V_reg_1749),
    .ce(grp_fu_979_ce),
    .dout(grp_fu_979_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter10 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter11 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter12 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter12 <= ap_enable_reg_pp0_iter11;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter13 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter13 <= ap_enable_reg_pp0_iter12;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter14 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter14 <= ap_enable_reg_pp0_iter13;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter15 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter15 <= ap_enable_reg_pp0_iter14;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter16 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter16 <= ap_enable_reg_pp0_iter15;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter17 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter17 <= ap_enable_reg_pp0_iter16;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter18 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter18 <= ap_enable_reg_pp0_iter17;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter19 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter19 <= ap_enable_reg_pp0_iter18;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter20 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter20 <= ap_enable_reg_pp0_iter19;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter21 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter21 <= ap_enable_reg_pp0_iter20;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter22 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter22 <= ap_enable_reg_pp0_iter21;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter23 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter23 <= ap_enable_reg_pp0_iter22;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter24 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter24 <= ap_enable_reg_pp0_iter23;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter8 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter9 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        B_V_reg_1597 <= B_V_fu_753_p1;
        B_V_reg_1597_pp0_iter10_reg <= B_V_reg_1597;
        B_V_reg_1597_pp0_iter11_reg <= B_V_reg_1597_pp0_iter10_reg;
        B_fourth_power_V_reg_1694 <= {{grp_fu_806_p2[97:63]}};
        B_squared_V_reg_1631 <= {{grp_fu_770_p2[97:49]}};
        B_third_power_V_reg_1689 <= {{grp_fu_801_p2[97:56]}};
        B_trunc_V_reg_1602 <= {{r_V_20_fu_736_p3[55:7]}};
        Ex_V_reg_1580 <= Ex_V_fu_688_p2;
        Ex_V_reg_1580_pp0_iter10_reg <= Ex_V_reg_1580_pp0_iter9_reg;
        Ex_V_reg_1580_pp0_iter11_reg <= Ex_V_reg_1580_pp0_iter10_reg;
        Ex_V_reg_1580_pp0_iter12_reg <= Ex_V_reg_1580_pp0_iter11_reg;
        Ex_V_reg_1580_pp0_iter13_reg <= Ex_V_reg_1580_pp0_iter12_reg;
        Ex_V_reg_1580_pp0_iter14_reg <= Ex_V_reg_1580_pp0_iter13_reg;
        Ex_V_reg_1580_pp0_iter15_reg <= Ex_V_reg_1580_pp0_iter14_reg;
        Ex_V_reg_1580_pp0_iter16_reg <= Ex_V_reg_1580_pp0_iter15_reg;
        Ex_V_reg_1580_pp0_iter17_reg <= Ex_V_reg_1580_pp0_iter16_reg;
        Ex_V_reg_1580_pp0_iter18_reg <= Ex_V_reg_1580_pp0_iter17_reg;
        Ex_V_reg_1580_pp0_iter19_reg <= Ex_V_reg_1580_pp0_iter18_reg;
        Ex_V_reg_1580_pp0_iter20_reg <= Ex_V_reg_1580_pp0_iter19_reg;
        Ex_V_reg_1580_pp0_iter21_reg <= Ex_V_reg_1580_pp0_iter20_reg;
        Ex_V_reg_1580_pp0_iter22_reg <= Ex_V_reg_1580_pp0_iter21_reg;
        Ex_V_reg_1580_pp0_iter23_reg <= Ex_V_reg_1580_pp0_iter22_reg;
        Ex_V_reg_1580_pp0_iter9_reg <= Ex_V_reg_1580;
        Mx_V_reg_1573 <= {{r_V_19_fu_669_p2[123:61]}};
        Mx_V_reg_1573_pp0_iter10_reg <= Mx_V_reg_1573_pp0_iter9_reg;
        Mx_V_reg_1573_pp0_iter11_reg <= Mx_V_reg_1573_pp0_iter10_reg;
        Mx_V_reg_1573_pp0_iter12_reg <= Mx_V_reg_1573_pp0_iter11_reg;
        Mx_V_reg_1573_pp0_iter13_reg <= Mx_V_reg_1573_pp0_iter12_reg;
        Mx_V_reg_1573_pp0_iter14_reg <= Mx_V_reg_1573_pp0_iter13_reg;
        Mx_V_reg_1573_pp0_iter15_reg <= Mx_V_reg_1573_pp0_iter14_reg;
        Mx_V_reg_1573_pp0_iter16_reg <= Mx_V_reg_1573_pp0_iter15_reg;
        Mx_V_reg_1573_pp0_iter9_reg <= Mx_V_reg_1573;
        add_ln442_2_reg_1853 <= add_ln442_2_fu_1242_p2;
        add_ln442_reg_1826 <= add_ln442_fu_1202_p2;
        and_ln300_reg_1556 <= and_ln300_fu_577_p2;
        and_ln300_reg_1556_pp0_iter10_reg <= and_ln300_reg_1556_pp0_iter9_reg;
        and_ln300_reg_1556_pp0_iter11_reg <= and_ln300_reg_1556_pp0_iter10_reg;
        and_ln300_reg_1556_pp0_iter12_reg <= and_ln300_reg_1556_pp0_iter11_reg;
        and_ln300_reg_1556_pp0_iter13_reg <= and_ln300_reg_1556_pp0_iter12_reg;
        and_ln300_reg_1556_pp0_iter14_reg <= and_ln300_reg_1556_pp0_iter13_reg;
        and_ln300_reg_1556_pp0_iter15_reg <= and_ln300_reg_1556_pp0_iter14_reg;
        and_ln300_reg_1556_pp0_iter16_reg <= and_ln300_reg_1556_pp0_iter15_reg;
        and_ln300_reg_1556_pp0_iter17_reg <= and_ln300_reg_1556_pp0_iter16_reg;
        and_ln300_reg_1556_pp0_iter18_reg <= and_ln300_reg_1556_pp0_iter17_reg;
        and_ln300_reg_1556_pp0_iter19_reg <= and_ln300_reg_1556_pp0_iter18_reg;
        and_ln300_reg_1556_pp0_iter20_reg <= and_ln300_reg_1556_pp0_iter19_reg;
        and_ln300_reg_1556_pp0_iter21_reg <= and_ln300_reg_1556_pp0_iter20_reg;
        and_ln300_reg_1556_pp0_iter22_reg <= and_ln300_reg_1556_pp0_iter21_reg;
        and_ln300_reg_1556_pp0_iter23_reg <= and_ln300_reg_1556_pp0_iter22_reg;
        and_ln300_reg_1556_pp0_iter8_reg <= and_ln300_reg_1556;
        and_ln300_reg_1556_pp0_iter9_reg <= and_ln300_reg_1556_pp0_iter8_reg;
        closepath_reg_1491_pp0_iter2_reg <= closepath_reg_1491_pp0_iter1_reg;
        closepath_reg_1491_pp0_iter3_reg <= closepath_reg_1491_pp0_iter2_reg;
        closepath_reg_1491_pp0_iter4_reg <= closepath_reg_1491_pp0_iter3_reg;
        closepath_reg_1491_pp0_iter5_reg <= closepath_reg_1491_pp0_iter4_reg;
        closepath_reg_1491_pp0_iter6_reg <= closepath_reg_1491_pp0_iter5_reg;
        closepath_reg_1491_pp0_iter7_reg <= closepath_reg_1491_pp0_iter6_reg;
        fourth_order_double_10_reg_1637 <= fourth_order_double_5_q0;
        fourth_order_double_12_reg_1642 <= fourth_order_double_6_q0;
        fourth_order_double_14_reg_1714 <= fourth_order_double_7_q0;
        fourth_order_double_16_reg_1719 <= fourth_order_double_s_q0;
        icmp_ln1452_reg_1809 <= icmp_ln1452_fu_1118_p2;
        icmp_ln1452_reg_1809_pp0_iter23_reg <= icmp_ln1452_reg_1809;
        icmp_ln444_1_reg_1836 <= icmp_ln444_1_fu_1215_p2;
        icmp_ln444_2_reg_1848 <= icmp_ln444_2_fu_1236_p2;
        icmp_ln444_reg_1819 <= icmp_ln444_fu_1197_p2;
        icmp_ln833_1_reg_1522 <= icmp_ln833_1_fu_402_p2;
        icmp_ln833_1_reg_1522_pp0_iter3_reg <= icmp_ln833_1_reg_1522;
        icmp_ln833_1_reg_1522_pp0_iter4_reg <= icmp_ln833_1_reg_1522_pp0_iter3_reg;
        icmp_ln833_1_reg_1522_pp0_iter5_reg <= icmp_ln833_1_reg_1522_pp0_iter4_reg;
        icmp_ln833_1_reg_1522_pp0_iter6_reg <= icmp_ln833_1_reg_1522_pp0_iter5_reg;
        icmp_ln833_2_reg_1563 <= icmp_ln833_2_fu_582_p2;
        icmp_ln833_2_reg_1563_pp0_iter10_reg <= icmp_ln833_2_reg_1563_pp0_iter9_reg;
        icmp_ln833_2_reg_1563_pp0_iter11_reg <= icmp_ln833_2_reg_1563_pp0_iter10_reg;
        icmp_ln833_2_reg_1563_pp0_iter12_reg <= icmp_ln833_2_reg_1563_pp0_iter11_reg;
        icmp_ln833_2_reg_1563_pp0_iter13_reg <= icmp_ln833_2_reg_1563_pp0_iter12_reg;
        icmp_ln833_2_reg_1563_pp0_iter14_reg <= icmp_ln833_2_reg_1563_pp0_iter13_reg;
        icmp_ln833_2_reg_1563_pp0_iter15_reg <= icmp_ln833_2_reg_1563_pp0_iter14_reg;
        icmp_ln833_2_reg_1563_pp0_iter16_reg <= icmp_ln833_2_reg_1563_pp0_iter15_reg;
        icmp_ln833_2_reg_1563_pp0_iter17_reg <= icmp_ln833_2_reg_1563_pp0_iter16_reg;
        icmp_ln833_2_reg_1563_pp0_iter18_reg <= icmp_ln833_2_reg_1563_pp0_iter17_reg;
        icmp_ln833_2_reg_1563_pp0_iter19_reg <= icmp_ln833_2_reg_1563_pp0_iter18_reg;
        icmp_ln833_2_reg_1563_pp0_iter20_reg <= icmp_ln833_2_reg_1563_pp0_iter19_reg;
        icmp_ln833_2_reg_1563_pp0_iter21_reg <= icmp_ln833_2_reg_1563_pp0_iter20_reg;
        icmp_ln833_2_reg_1563_pp0_iter22_reg <= icmp_ln833_2_reg_1563_pp0_iter21_reg;
        icmp_ln833_2_reg_1563_pp0_iter23_reg <= icmp_ln833_2_reg_1563_pp0_iter22_reg;
        icmp_ln833_2_reg_1563_pp0_iter8_reg <= icmp_ln833_2_reg_1563;
        icmp_ln833_2_reg_1563_pp0_iter9_reg <= icmp_ln833_2_reg_1563_pp0_iter8_reg;
        isNeg_reg_1586 <= Ex_V_fu_688_p2[32'd10];
        p_Repl2_3_reg_1568 <= p_Repl2_3_fu_610_p2;
        p_Repl2_3_reg_1568_pp0_iter10_reg <= p_Repl2_3_reg_1568_pp0_iter9_reg;
        p_Repl2_3_reg_1568_pp0_iter11_reg <= p_Repl2_3_reg_1568_pp0_iter10_reg;
        p_Repl2_3_reg_1568_pp0_iter12_reg <= p_Repl2_3_reg_1568_pp0_iter11_reg;
        p_Repl2_3_reg_1568_pp0_iter13_reg <= p_Repl2_3_reg_1568_pp0_iter12_reg;
        p_Repl2_3_reg_1568_pp0_iter14_reg <= p_Repl2_3_reg_1568_pp0_iter13_reg;
        p_Repl2_3_reg_1568_pp0_iter15_reg <= p_Repl2_3_reg_1568_pp0_iter14_reg;
        p_Repl2_3_reg_1568_pp0_iter16_reg <= p_Repl2_3_reg_1568_pp0_iter15_reg;
        p_Repl2_3_reg_1568_pp0_iter17_reg <= p_Repl2_3_reg_1568_pp0_iter16_reg;
        p_Repl2_3_reg_1568_pp0_iter18_reg <= p_Repl2_3_reg_1568_pp0_iter17_reg;
        p_Repl2_3_reg_1568_pp0_iter19_reg <= p_Repl2_3_reg_1568_pp0_iter18_reg;
        p_Repl2_3_reg_1568_pp0_iter20_reg <= p_Repl2_3_reg_1568_pp0_iter19_reg;
        p_Repl2_3_reg_1568_pp0_iter21_reg <= p_Repl2_3_reg_1568_pp0_iter20_reg;
        p_Repl2_3_reg_1568_pp0_iter22_reg <= p_Repl2_3_reg_1568_pp0_iter21_reg;
        p_Repl2_3_reg_1568_pp0_iter23_reg <= p_Repl2_3_reg_1568_pp0_iter22_reg;
        p_Repl2_3_reg_1568_pp0_iter8_reg <= p_Repl2_3_reg_1568;
        p_Repl2_3_reg_1568_pp0_iter9_reg <= p_Repl2_3_reg_1568_pp0_iter8_reg;
        p_Result_13_1_i_reg_1775 <= {{grp_fu_979_p2[109:94]}};
        p_Result_13_2_i_reg_1780 <= {{grp_fu_979_p2[93:78]}};
        p_Result_13_2_i_reg_1780_pp0_iter22_reg <= p_Result_13_2_i_reg_1780;
        p_Result_1_i_reg_1770 <= {{grp_fu_979_p2[125:110]}};
        p_Result_28_reg_1473_pp0_iter2_reg <= p_Result_28_reg_1473_pp0_iter1_reg;
        p_Result_28_reg_1473_pp0_iter3_reg <= p_Result_28_reg_1473_pp0_iter2_reg;
        p_Result_28_reg_1473_pp0_iter4_reg <= p_Result_28_reg_1473_pp0_iter3_reg;
        p_Result_28_reg_1473_pp0_iter5_reg <= p_Result_28_reg_1473_pp0_iter4_reg;
        p_Result_28_reg_1473_pp0_iter6_reg <= p_Result_28_reg_1473_pp0_iter5_reg;
        p_Result_i_55_reg_1785 <= {{grp_fu_979_p2[77:63]}};
        p_Result_i_55_reg_1785_pp0_iter22_reg <= p_Result_i_55_reg_1785;
        p_Result_i_i_54_reg_1544 <= {{p_Val2_14_fu_442_p3[123:63]}};
        p_Result_i_reg_1592 <= {{r_V_20_fu_736_p3[62:56]}};
        p_Val2_14_reg_1539 <= p_Val2_14_fu_442_p3;
        p_Val2_22_reg_1699 <= fourth_order_double_4_q0;
        p_Val2_44_reg_1528 <= {{grp_fu_396_p2[166:43]}};
        r_V_6_reg_1607[48 : 0] <= r_V_6_fu_767_p1[48 : 0];
        r_V_6_reg_1607_pp0_iter11_reg[48 : 0] <= r_V_6_reg_1607[48 : 0];
        result_V_reg_1764 <= {{grp_fu_979_p2[125:63]}};
        ret_V_18_reg_1739 <= ret_V_18_fu_933_p2;
        ret_V_18_reg_1739_pp0_iter15_reg <= ret_V_18_reg_1739;
        ret_V_reg_1749 <= ret_V_fu_960_p2;
        select_ln444_1_reg_1858 <= select_ln444_1_fu_1248_p3;
        shl_ln1253_1_reg_1831 <= shl_ln1253_1_fu_1210_p2;
        shl_ln1253_2_reg_1842 <= shl_ln1253_2_fu_1230_p2;
        shl_ln1253_reg_1803 <= shl_ln1253_fu_1113_p2;
        shl_ln1253_reg_1803_pp0_iter23_reg <= shl_ln1253_reg_1803;
        sin_basis_reg_1549 <= sin_basis_fu_459_p10;
        sin_basis_reg_1549_pp0_iter10_reg <= sin_basis_reg_1549_pp0_iter9_reg;
        sin_basis_reg_1549_pp0_iter11_reg <= sin_basis_reg_1549_pp0_iter10_reg;
        sin_basis_reg_1549_pp0_iter12_reg <= sin_basis_reg_1549_pp0_iter11_reg;
        sin_basis_reg_1549_pp0_iter13_reg <= sin_basis_reg_1549_pp0_iter12_reg;
        sin_basis_reg_1549_pp0_iter14_reg <= sin_basis_reg_1549_pp0_iter13_reg;
        sin_basis_reg_1549_pp0_iter15_reg <= sin_basis_reg_1549_pp0_iter14_reg;
        sin_basis_reg_1549_pp0_iter16_reg <= sin_basis_reg_1549_pp0_iter15_reg;
        sin_basis_reg_1549_pp0_iter17_reg <= sin_basis_reg_1549_pp0_iter16_reg;
        sin_basis_reg_1549_pp0_iter18_reg <= sin_basis_reg_1549_pp0_iter17_reg;
        sin_basis_reg_1549_pp0_iter19_reg <= sin_basis_reg_1549_pp0_iter18_reg;
        sin_basis_reg_1549_pp0_iter20_reg <= sin_basis_reg_1549_pp0_iter19_reg;
        sin_basis_reg_1549_pp0_iter21_reg <= sin_basis_reg_1549_pp0_iter20_reg;
        sin_basis_reg_1549_pp0_iter22_reg <= sin_basis_reg_1549_pp0_iter21_reg;
        sin_basis_reg_1549_pp0_iter23_reg <= sin_basis_reg_1549_pp0_iter22_reg;
        sin_basis_reg_1549_pp0_iter8_reg <= sin_basis_reg_1549;
        sin_basis_reg_1549_pp0_iter9_reg <= sin_basis_reg_1549_pp0_iter8_reg;
        tmp_1_reg_1744 <= {{grp_fu_889_p2[74:38]}};
        tmp_2_reg_1734 <= {{r_V_27_fu_901_p2[59:31]}};
        tmp_2_reg_1734_pp0_iter15_reg <= tmp_2_reg_1734;
        tmp_V_reg_1478_pp0_iter2_reg <= tmp_V_reg_1478_pp0_iter1_reg;
        tmp_V_reg_1478_pp0_iter3_reg <= tmp_V_reg_1478_pp0_iter2_reg;
        tmp_V_reg_1478_pp0_iter4_reg <= tmp_V_reg_1478_pp0_iter3_reg;
        tmp_V_reg_1478_pp0_iter5_reg <= tmp_V_reg_1478_pp0_iter4_reg;
        tmp_V_reg_1478_pp0_iter6_reg <= tmp_V_reg_1478_pp0_iter5_reg;
        tmp_V_reg_1478_pp0_iter7_reg <= tmp_V_reg_1478_pp0_iter6_reg;
        tmp_i2_i_reg_1796 <= tmp_i2_i_fu_1101_p3;
        tmp_i6_i_reg_1814 <= tmp_i6_i_fu_1189_p3;
        tmp_i_i2_reg_1790 <= tmp_i_i2_fu_1083_p3;
        trunc_ln1_reg_1704 <= {{grp_fu_818_p2[107:52]}};
        trunc_ln662_1_reg_1709 <= {{grp_fu_830_p2[92:45]}};
        zext_ln498_reg_1614[7 : 0] <= zext_ln498_fu_782_p1[7 : 0];
        zext_ln498_reg_1614_pp0_iter11_reg[7 : 0] <= zext_ln498_reg_1614[7 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        closepath_reg_1491 <= closepath_fu_324_p2;
        closepath_reg_1491_pp0_iter1_reg <= closepath_reg_1491;
        p_Result_28_reg_1473 <= p_Val2_s_fu_298_p1[32'd63];
        p_Result_28_reg_1473_pp0_iter1_reg <= p_Result_28_reg_1473;
        ret_V_15_reg_1507 <= {{r_V_18_fu_366_p2[255:86]}};
        tmp_V_2_reg_1485 <= tmp_V_2_fu_320_p1;
        tmp_V_2_reg_1485_pp0_iter1_reg <= tmp_V_2_reg_1485;
        tmp_V_reg_1478 <= {{p_Val2_s_fu_298_p1[62:52]}};
        tmp_V_reg_1478_pp0_iter1_reg <= tmp_V_reg_1478;
        trunc_ln601_reg_1502 <= trunc_ln601_fu_359_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((closepath_reg_1491_pp0_iter5_reg == 1'd0) & (1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        trunc_ln_i_reg_1534 <= {{grp_fu_396_p2[169:167]}};
    end
end

always @ (*) begin
    if ((((ap_start == 1'b0) & (1'b0 == ap_block_pp0_stage0) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((ap_enable_reg_pp0_iter24 == 1'b1) & (1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_idle_pp0 == 1'b1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter24 == 1'b0) & (ap_enable_reg_pp0_iter23 == 1'b0) & (ap_enable_reg_pp0_iter22 == 1'b0) & (ap_enable_reg_pp0_iter21 == 1'b0) & (ap_enable_reg_pp0_iter20 == 1'b0) & (ap_enable_reg_pp0_iter19 == 1'b0) & (ap_enable_reg_pp0_iter18 == 1'b0) & (ap_enable_reg_pp0_iter17 == 1'b0) & (ap_enable_reg_pp0_iter16 == 1'b0) & (ap_enable_reg_pp0_iter15 == 1'b0) & (ap_enable_reg_pp0_iter14 == 1'b0) & (ap_enable_reg_pp0_iter13 == 1'b0) & (ap_enable_reg_pp0_iter12 == 1'b0) & (ap_enable_reg_pp0_iter11 == 1'b0) & (ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter23 == 1'b0) & (ap_enable_reg_pp0_iter22 == 1'b0) & (ap_enable_reg_pp0_iter21 == 1'b0) & (ap_enable_reg_pp0_iter20 == 1'b0) & (ap_enable_reg_pp0_iter19 == 1'b0) & (ap_enable_reg_pp0_iter18 == 1'b0) & (ap_enable_reg_pp0_iter17 == 1'b0) & (ap_enable_reg_pp0_iter16 == 1'b0) & (ap_enable_reg_pp0_iter15 == 1'b0) & (ap_enable_reg_pp0_iter14 == 1'b0) & (ap_enable_reg_pp0_iter13 == 1'b0) & (ap_enable_reg_pp0_iter12 == 1'b0) & (ap_enable_reg_pp0_iter11 == 1'b0) & (ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0_0to23 = 1'b1;
    end else begin
        ap_idle_pp0_0to23 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (ap_idle_pp0_0to23 == 1'b1))) begin
        ap_reset_idle_pp0 = 1'b1;
    end else begin
        ap_reset_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter12 == 1'b1) & (1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        fourth_order_double_4_ce0 = 1'b1;
    end else begin
        fourth_order_double_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter10 == 1'b1) & (1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        fourth_order_double_5_ce0 = 1'b1;
    end else begin
        fourth_order_double_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter10 == 1'b1) & (1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        fourth_order_double_6_ce0 = 1'b1;
    end else begin
        fourth_order_double_6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter12 == 1'b1) & (1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        fourth_order_double_7_ce0 = 1'b1;
    end else begin
        fourth_order_double_7_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter12 == 1'b1) & (1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        fourth_order_double_s_ce0 = 1'b1;
    end else begin
        fourth_order_double_s_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_396_ce = 1'b1;
    end else begin
        grp_fu_396_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_770_ce = 1'b1;
    end else begin
        grp_fu_770_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_801_ce = 1'b1;
    end else begin
        grp_fu_801_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_806_ce = 1'b1;
    end else begin
        grp_fu_806_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_818_ce = 1'b1;
    end else begin
        grp_fu_818_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_830_ce = 1'b1;
    end else begin
        grp_fu_830_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_889_ce = 1'b1;
    end else begin
        grp_fu_889_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_979_ce = 1'b1;
    end else begin
        grp_fu_979_ce = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ref_4oPi_table_256_V_ce0 = 1'b1;
    end else begin
        ref_4oPi_table_256_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign B_V_fu_753_p1 = r_V_20_fu_736_p3[55:0];

assign Ex_V_fu_688_p2 = (select_ln482_fu_621_p3 - zext_ln655_fu_684_p1);

assign Mx_bits_V_1_fu_437_p2 = (124'd0 - p_Val2_44_reg_1528);

assign Mx_zeros_V_fu_661_p1 = tmp_i_i_fu_653_p3[5:0];

assign add_ln114_1_fu_330_p2 = ($signed(11'd1101) + $signed(tmp_V_fu_310_p4));

assign add_ln114_fu_616_p2 = ($signed(11'd1027) + $signed(tmp_V_reg_1478_pp0_iter7_reg));

assign add_ln442_1_fu_1220_p2 = (tmp_i4_i_fu_1171_p3 + add_ln442_fu_1202_p2);

assign add_ln442_2_fu_1242_p2 = (tmp_i6_i_fu_1189_p3 + add_ln442_1_fu_1220_p2);

assign add_ln442_fu_1202_p2 = (32'd16 + tmp_i2_i_reg_1796);

assign add_ln452_fu_1311_p2 = ($signed(12'd1023) + $signed(rhs_V_fu_1261_p1));

assign addr_V_fu_336_p3 = ((closepath_fu_324_p2[0:0] === 1'b1) ? 11'd74 : add_ln114_1_fu_330_p2);

assign and_ln300_1_fu_599_p2 = (icmp_ln833_fu_572_p2 & icmp_ln833_1_reg_1522_pp0_iter6_reg);

assign and_ln300_fu_577_p2 = (icmp_ln833_fu_572_p2 & icmp_ln833_1_reg_1522_pp0_iter6_reg);

assign and_ln311_fu_593_p2 = (xor_ln311_fu_587_p2 & select_ln271_fu_564_p3);

assign and_ln444_1_fu_1283_p2 = (icmp_ln444_2_reg_1848 & icmp_ln444_1_reg_1836);

assign and_ln444_2_fu_1287_p2 = (icmp_ln444_reg_1819 & and_ln444_1_fu_1283_p2);

assign and_ln444_fu_1278_p2 = (xor_ln444_fu_1273_p2 & icmp_ln444_reg_1819);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((ap_start == 1'b0) & (ap_start == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((1'b0 == ap_ce) | ((ap_start == 1'b0) & (ap_start == 1'b1)));
end

assign ap_block_state10_pp0_stage0_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage0_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage0_iter11 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage0_iter12 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage0_iter13 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp0_stage0_iter14 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp0_stage0_iter15 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp0_stage0_iter16 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp0_stage0_iter17 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp0_stage0_iter18 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state1_pp0_stage0_iter0 = (ap_start == 1'b0);
end

assign ap_block_state20_pp0_stage0_iter19 = ~(1'b1 == 1'b1);

assign ap_block_state21_pp0_stage0_iter20 = ~(1'b1 == 1'b1);

assign ap_block_state22_pp0_stage0_iter21 = ~(1'b1 == 1'b1);

assign ap_block_state23_pp0_stage0_iter22 = ~(1'b1 == 1'b1);

assign ap_block_state24_pp0_stage0_iter23 = ~(1'b1 == 1'b1);

assign ap_block_state25_pp0_stage0_iter24 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage0_iter8 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start;

assign ap_return = p_Result_39_fu_1460_p4;

assign closepath_fu_324_p2 = ((tmp_V_fu_310_p4 < 11'd1022) ? 1'b1 : 1'b0);

assign empty_fu_1340_p1 = newexp_fu_1321_p2[10:0];

assign fourth_order_double_4_address0 = zext_ln498_reg_1614_pp0_iter11_reg;

assign fourth_order_double_5_address0 = zext_ln498_fu_782_p1;

assign fourth_order_double_6_address0 = zext_ln498_fu_782_p1;

assign fourth_order_double_7_address0 = zext_ln498_reg_1614_pp0_iter11_reg;

assign fourth_order_double_s_address0 = zext_ln498_reg_1614_pp0_iter11_reg;

assign grp_fu_396_p0 = grp_fu_396_p00;

assign grp_fu_396_p00 = p_Result_29_fu_382_p3;

assign grp_fu_396_p1 = grp_fu_396_p10;

assign grp_fu_396_p10 = ret_V_15_reg_1507;

assign grp_fu_770_p0 = r_V_6_fu_767_p1;

assign grp_fu_770_p1 = r_V_6_fu_767_p1;

assign grp_fu_801_p0 = r_V_6_reg_1607_pp0_iter11_reg;

assign grp_fu_801_p1 = r_V_9_fu_798_p1;

assign grp_fu_806_p0 = r_V_9_fu_798_p1;

assign grp_fu_806_p1 = r_V_9_fu_798_p1;

assign grp_fu_818_p1 = grp_fu_818_p10;

assign grp_fu_818_p10 = B_V_reg_1597_pp0_iter11_reg;

assign grp_fu_830_p1 = grp_fu_830_p10;

assign grp_fu_830_p10 = B_squared_V_reg_1631;

assign grp_fu_889_p0 = grp_fu_889_p00;

assign grp_fu_889_p00 = fourth_order_double_14_reg_1714;

assign grp_fu_889_p1 = grp_fu_889_p10;

assign grp_fu_889_p10 = B_third_power_V_reg_1689;

assign grp_fu_979_p0 = grp_fu_979_p00;

assign grp_fu_979_p00 = select_ln272_1_fu_966_p3;

assign icmp_ln1452_fu_1118_p2 = ((result_V_reg_1764 == 63'd0) ? 1'b1 : 1'b0);

assign icmp_ln444_1_fu_1215_p2 = ((tmp_i2_i_reg_1796 == 32'd16) ? 1'b1 : 1'b0);

assign icmp_ln444_2_fu_1236_p2 = ((tmp_i4_i_fu_1171_p3 == 32'd16) ? 1'b1 : 1'b0);

assign icmp_ln444_fu_1197_p2 = ((tmp_i_i2_reg_1790 == 32'd16) ? 1'b1 : 1'b0);

assign icmp_ln833_1_fu_402_p2 = ((tmp_V_2_reg_1485_pp0_iter1_reg == 52'd0) ? 1'b1 : 1'b0);

assign icmp_ln833_2_fu_582_p2 = ((tmp_V_reg_1478_pp0_iter6_reg == 11'd2047) ? 1'b1 : 1'b0);

assign icmp_ln833_fu_572_p2 = ((tmp_V_reg_1478_pp0_iter6_reg == 11'd0) ? 1'b1 : 1'b0);

assign lhs_V_1_fu_917_p1 = $signed(t1_V_fu_876_p3);

assign newexp_fu_1321_p2 = ($signed(sext_ln452_fu_1317_p1) - $signed(select_ln444_2_fu_1304_p3));

assign or_ln300_fu_1427_p2 = (icmp_ln833_2_reg_1563_pp0_iter23_reg | and_ln300_reg_1556_pp0_iter23_reg);

assign or_ln444_fu_1292_p2 = (and_ln444_fu_1278_p2 | and_ln444_2_fu_1287_p2);

assign or_ln453_fu_1335_p2 = (tmp_3_fu_1327_p3 | icmp_ln1452_reg_1809_pp0_iter23_reg);

assign out_exp_V_fu_1412_p3 = ((or_ln453_fu_1335_p2[0:0] === 1'b1) ? 11'd0 : empty_fu_1340_p1);

assign p_Repl2_3_fu_610_p2 = (xor_ln300_fu_604_p2 & and_ln311_fu_593_p2);

assign p_Result_29_fu_382_p3 = {{1'd1}, {tmp_V_2_reg_1485_pp0_iter1_reg}};

assign p_Result_30_fu_628_p3 = {{p_Result_i_i_54_reg_1544}, {1'd1}};

assign p_Result_31_fu_645_p3 = {{2'd3}, {p_Result_s_fu_635_p4}};

assign p_Result_32_fu_776_p3 = {{sin_basis_reg_1549_pp0_iter9_reg}, {p_Result_i_reg_1592}};

assign p_Result_33_fu_1149_p5 = {{tmp_i_56_fu_1142_p3}, {ap_const_lv32_0[15:0]}};

integer ap_tvar_int_0;

always @ (p_Val2_34_fu_1042_p5) begin
    for (ap_tvar_int_0 = 32 - 1; ap_tvar_int_0 >= 0; ap_tvar_int_0 = ap_tvar_int_0 - 1) begin
        if (ap_tvar_int_0 > 31 - 0) begin
            p_Result_34_fu_1073_p4[ap_tvar_int_0] = 1'b0;
        end else begin
            p_Result_34_fu_1073_p4[ap_tvar_int_0] = p_Val2_34_fu_1042_p5[31 - ap_tvar_int_0];
        end
    end
end

integer ap_tvar_int_1;

always @ (p_Val2_35_fu_1061_p5) begin
    for (ap_tvar_int_1 = 32 - 1; ap_tvar_int_1 >= 0; ap_tvar_int_1 = ap_tvar_int_1 - 1) begin
        if (ap_tvar_int_1 > 31 - 0) begin
            p_Result_35_fu_1091_p4[ap_tvar_int_1] = 1'b0;
        end else begin
            p_Result_35_fu_1091_p4[ap_tvar_int_1] = p_Val2_35_fu_1061_p5[31 - ap_tvar_int_1];
        end
    end
end

integer ap_tvar_int_2;

always @ (p_Val2_36_fu_1130_p5) begin
    for (ap_tvar_int_2 = 32 - 1; ap_tvar_int_2 >= 0; ap_tvar_int_2 = ap_tvar_int_2 - 1) begin
        if (ap_tvar_int_2 > 31 - 0) begin
            p_Result_36_fu_1161_p4[ap_tvar_int_2] = 1'b0;
        end else begin
            p_Result_36_fu_1161_p4[ap_tvar_int_2] = p_Val2_36_fu_1130_p5[31 - ap_tvar_int_2];
        end
    end
end

integer ap_tvar_int_3;

always @ (p_Result_33_fu_1149_p5) begin
    for (ap_tvar_int_3 = 32 - 1; ap_tvar_int_3 >= 0; ap_tvar_int_3 = ap_tvar_int_3 - 1) begin
        if (ap_tvar_int_3 > 31 - 0) begin
            p_Result_37_fu_1179_p4[ap_tvar_int_3] = 1'b0;
        end else begin
            p_Result_37_fu_1179_p4[ap_tvar_int_3] = p_Result_33_fu_1149_p5[31 - ap_tvar_int_3];
        end
    end
end

assign p_Result_38_fu_481_p3 = {{p_Result_28_reg_1473_pp0_iter6_reg}, {p_Val2_45_fu_427_p3}};

assign p_Result_39_fu_1460_p4 = {{{p_Repl2_3_reg_1568_pp0_iter23_reg}, {ret_V_13_fu_1431_p3}}, {ret_V_14_fu_1452_p3}};

assign p_Result_i_i_fu_344_p4 = {{addr_V_fu_336_p3[10:7]}};

integer ap_tvar_int_4;

always @ (p_Result_30_fu_628_p3) begin
    for (ap_tvar_int_4 = 62 - 1; ap_tvar_int_4 >= 0; ap_tvar_int_4 = ap_tvar_int_4 - 1) begin
        if (ap_tvar_int_4 > 61 - 0) begin
            p_Result_s_fu_635_p4[ap_tvar_int_4] = 1'b0;
        end else begin
            p_Result_s_fu_635_p4[ap_tvar_int_4] = p_Result_30_fu_628_p3[61 - ap_tvar_int_4];
        end
    end
end

assign p_Val2_14_fu_442_p3 = ((trunc_ln745_fu_433_p1[0:0] === 1'b1) ? Mx_bits_V_1_fu_437_p2 : p_Val2_44_reg_1528);

assign p_Val2_34_fu_1042_p5 = {{tmp_i_fu_1035_p3}, {ap_const_lv32_0[14:0]}};

assign p_Val2_35_fu_1061_p5 = {{tmp_8_i_fu_1054_p3}, {ap_const_lv32_0[14:0]}};

assign p_Val2_36_fu_1130_p5 = {{tmp_9_i_fu_1123_p3}, {ap_const_lv32_0[14:0]}};

assign p_Val2_45_fu_427_p3 = ((closepath_reg_1491_pp0_iter6_reg[0:0] === 1'b1) ? 3'd0 : trunc_ln_i_reg_1534);

assign p_Val2_s_fu_298_p1 = t_in;

assign r_V_18_fu_366_p2 = ref_4oPi_table_256_V_q0 << zext_ln744_fu_363_p1;

assign r_V_19_fu_669_p2 = p_Val2_14_reg_1539 << zext_ln1253_fu_665_p1;

assign r_V_20_fu_736_p3 = ((isNeg_reg_1586[0:0] === 1'b1) ? r_V_fu_726_p2 : r_V_4_fu_731_p2);

assign r_V_27_fu_901_p0 = r_V_27_fu_901_p00;

assign r_V_27_fu_901_p00 = fourth_order_double_16_reg_1719;

assign r_V_27_fu_901_p1 = r_V_27_fu_901_p10;

assign r_V_27_fu_901_p10 = B_fourth_power_V_reg_1694;

assign r_V_27_fu_901_p2 = (r_V_27_fu_901_p0 * r_V_27_fu_901_p1);

assign r_V_4_fu_731_p2 = Mx_V_reg_1573 << zext_ln1287_fu_722_p1;

assign r_V_6_fu_767_p1 = B_trunc_V_reg_1602;

assign r_V_9_fu_798_p1 = B_squared_V_reg_1631;

assign r_V_fu_726_p2 = Mx_V_reg_1573 >> zext_ln1287_fu_722_p1;

assign ref_4oPi_table_256_V_address0 = zext_ln635_fu_354_p1;

assign ret_V_13_fu_1431_p3 = ((or_ln300_fu_1427_p2[0:0] === 1'b1) ? select_ln300_fu_1420_p3 : out_exp_V_fu_1412_p3);

assign ret_V_14_fu_1452_p3 = ((or_ln300_fu_1427_p2[0:0] === 1'b1) ? select_ln300_2_fu_1444_p3 : significand_V_fu_1404_p3);

assign ret_V_17_fu_924_p2 = ($signed(rhs_V_2_fu_921_p1) + $signed(lhs_V_1_fu_917_p1));

assign ret_V_18_fu_933_p2 = ($signed(sext_ln657_fu_930_p1) + $signed(ret_V_17_fu_924_p2));

assign ret_V_19_fu_952_p2 = (zext_ln657_fu_949_p1 + ret_V_18_reg_1739_pp0_iter15_reg);

assign ret_V_fu_960_p2 = (zext_ln657_1_fu_957_p1 + ret_V_19_fu_952_p2);

assign rhs_V_2_fu_921_p1 = $signed(trunc_ln1_reg_1704);

assign rhs_V_fu_1261_p1 = $signed(select_ln272_fu_1255_p3);

assign select_ln271_fu_564_p3 = ((sin_basis_fu_459_p10[0:0] === 1'b1) ? tmp_fu_488_p18 : tmp_s_fu_526_p18);

assign select_ln272_1_fu_966_p3 = ((sin_basis_reg_1549_pp0_iter16_reg[0:0] === 1'b1) ? Mx_V_reg_1573_pp0_iter16_reg : 63'd9223372036854775807);

assign select_ln272_fu_1255_p3 = ((sin_basis_reg_1549_pp0_iter23_reg[0:0] === 1'b1) ? Ex_V_reg_1580_pp0_iter23_reg : 11'd0);

assign select_ln300_2_fu_1444_p3 = ((xor_ln300_1_fu_1439_p2[0:0] === 1'b1) ? 52'd4503599627370495 : 52'd0);

assign select_ln300_fu_1420_p3 = ((and_ln300_reg_1556_pp0_iter23_reg[0:0] === 1'b1) ? 11'd1023 : 11'd2047);

assign select_ln444_1_fu_1248_p3 = ((icmp_ln444_fu_1197_p2[0:0] === 1'b1) ? add_ln442_1_fu_1220_p2 : tmp_i_i2_reg_1790);

assign select_ln444_2_fu_1304_p3 = ((or_ln444_fu_1292_p2[0:0] === 1'b1) ? select_ln444_fu_1298_p3 : select_ln444_1_reg_1858);

assign select_ln444_3_fu_1363_p3 = ((and_ln444_2_fu_1287_p2[0:0] === 1'b1) ? tmp_4_fu_1344_p4 : tmp_5_fu_1354_p4);

assign select_ln444_4_fu_1389_p3 = ((icmp_ln444_reg_1819[0:0] === 1'b1) ? tmp_6_fu_1371_p4 : tmp_7_fu_1380_p4);

assign select_ln444_5_fu_1396_p3 = ((or_ln444_fu_1292_p2[0:0] === 1'b1) ? select_ln444_3_fu_1363_p3 : select_ln444_4_fu_1389_p3);

assign select_ln444_fu_1298_p3 = ((and_ln444_2_fu_1287_p2[0:0] === 1'b1) ? add_ln442_2_reg_1853 : add_ln442_reg_1826);

assign select_ln482_fu_621_p3 = ((closepath_reg_1491_pp0_iter7_reg[0:0] === 1'b1) ? add_ln114_fu_616_p2 : 11'd0);

assign sext_ln1311_fu_718_p1 = $signed(ush_fu_711_p3);

assign sext_ln1334_fu_702_p1 = Ex_V_reg_1580;

assign sext_ln452_fu_1317_p1 = $signed(add_ln452_fu_1311_p2);

assign sext_ln657_fu_930_p1 = $signed(trunc_ln662_1_reg_1709);

assign shl_ln1253_1_fu_1210_p2 = shl_ln1253_reg_1803 << zext_ln1287_2_fu_1207_p1;

assign shl_ln1253_2_fu_1230_p2 = shl_ln1253_1_fu_1210_p2 << zext_ln1287_3_fu_1226_p1;

assign shl_ln1253_3_fu_1268_p2 = shl_ln1253_2_reg_1842 << zext_ln1287_4_fu_1265_p1;

assign shl_ln1253_fu_1113_p2 = result_V_reg_1764 << zext_ln1287_1_fu_1109_p1;

assign significand_V_fu_1404_p3 = ((or_ln453_fu_1335_p2[0:0] === 1'b1) ? 52'd0 : select_ln444_5_fu_1396_p3);

assign sub_ln1311_fu_705_p2 = ($signed(12'd0) - $signed(sext_ln1334_fu_702_p1));

assign t1_V_fu_876_p3 = {{p_Val2_22_reg_1699}, {4'd0}};

assign tmp_3_fu_1327_p3 = newexp_fu_1321_p2[32'd31];

assign tmp_4_fu_1344_p4 = {{shl_ln1253_3_fu_1268_p2[61:10]}};

assign tmp_5_fu_1354_p4 = {{shl_ln1253_1_reg_1831[61:10]}};

assign tmp_6_fu_1371_p4 = {{shl_ln1253_2_reg_1842[61:10]}};

assign tmp_7_fu_1380_p4 = {{shl_ln1253_reg_1803_pp0_iter23_reg[61:10]}};

assign tmp_8_i_fu_1054_p3 = {{p_Result_13_1_i_reg_1775}, {1'd1}};

assign tmp_9_i_fu_1123_p3 = {{p_Result_13_2_i_reg_1780_pp0_iter22_reg}, {1'd1}};

assign tmp_V_2_fu_320_p1 = p_Val2_s_fu_298_p1[51:0];

assign tmp_V_fu_310_p4 = {{p_Val2_s_fu_298_p1[62:52]}};


always @ (p_Result_35_fu_1091_p4) begin
    if (p_Result_35_fu_1091_p4[0] == 1'b1) begin
        tmp_i2_i_fu_1101_p3 = 32'd0;
    end else if (p_Result_35_fu_1091_p4[1] == 1'b1) begin
        tmp_i2_i_fu_1101_p3 = 32'd1;
    end else if (p_Result_35_fu_1091_p4[2] == 1'b1) begin
        tmp_i2_i_fu_1101_p3 = 32'd2;
    end else if (p_Result_35_fu_1091_p4[3] == 1'b1) begin
        tmp_i2_i_fu_1101_p3 = 32'd3;
    end else if (p_Result_35_fu_1091_p4[4] == 1'b1) begin
        tmp_i2_i_fu_1101_p3 = 32'd4;
    end else if (p_Result_35_fu_1091_p4[5] == 1'b1) begin
        tmp_i2_i_fu_1101_p3 = 32'd5;
    end else if (p_Result_35_fu_1091_p4[6] == 1'b1) begin
        tmp_i2_i_fu_1101_p3 = 32'd6;
    end else if (p_Result_35_fu_1091_p4[7] == 1'b1) begin
        tmp_i2_i_fu_1101_p3 = 32'd7;
    end else if (p_Result_35_fu_1091_p4[8] == 1'b1) begin
        tmp_i2_i_fu_1101_p3 = 32'd8;
    end else if (p_Result_35_fu_1091_p4[9] == 1'b1) begin
        tmp_i2_i_fu_1101_p3 = 32'd9;
    end else if (p_Result_35_fu_1091_p4[10] == 1'b1) begin
        tmp_i2_i_fu_1101_p3 = 32'd10;
    end else if (p_Result_35_fu_1091_p4[11] == 1'b1) begin
        tmp_i2_i_fu_1101_p3 = 32'd11;
    end else if (p_Result_35_fu_1091_p4[12] == 1'b1) begin
        tmp_i2_i_fu_1101_p3 = 32'd12;
    end else if (p_Result_35_fu_1091_p4[13] == 1'b1) begin
        tmp_i2_i_fu_1101_p3 = 32'd13;
    end else if (p_Result_35_fu_1091_p4[14] == 1'b1) begin
        tmp_i2_i_fu_1101_p3 = 32'd14;
    end else if (p_Result_35_fu_1091_p4[15] == 1'b1) begin
        tmp_i2_i_fu_1101_p3 = 32'd15;
    end else if (p_Result_35_fu_1091_p4[16] == 1'b1) begin
        tmp_i2_i_fu_1101_p3 = 32'd16;
    end else if (p_Result_35_fu_1091_p4[17] == 1'b1) begin
        tmp_i2_i_fu_1101_p3 = 32'd17;
    end else if (p_Result_35_fu_1091_p4[18] == 1'b1) begin
        tmp_i2_i_fu_1101_p3 = 32'd18;
    end else if (p_Result_35_fu_1091_p4[19] == 1'b1) begin
        tmp_i2_i_fu_1101_p3 = 32'd19;
    end else if (p_Result_35_fu_1091_p4[20] == 1'b1) begin
        tmp_i2_i_fu_1101_p3 = 32'd20;
    end else if (p_Result_35_fu_1091_p4[21] == 1'b1) begin
        tmp_i2_i_fu_1101_p3 = 32'd21;
    end else if (p_Result_35_fu_1091_p4[22] == 1'b1) begin
        tmp_i2_i_fu_1101_p3 = 32'd22;
    end else if (p_Result_35_fu_1091_p4[23] == 1'b1) begin
        tmp_i2_i_fu_1101_p3 = 32'd23;
    end else if (p_Result_35_fu_1091_p4[24] == 1'b1) begin
        tmp_i2_i_fu_1101_p3 = 32'd24;
    end else if (p_Result_35_fu_1091_p4[25] == 1'b1) begin
        tmp_i2_i_fu_1101_p3 = 32'd25;
    end else if (p_Result_35_fu_1091_p4[26] == 1'b1) begin
        tmp_i2_i_fu_1101_p3 = 32'd26;
    end else if (p_Result_35_fu_1091_p4[27] == 1'b1) begin
        tmp_i2_i_fu_1101_p3 = 32'd27;
    end else if (p_Result_35_fu_1091_p4[28] == 1'b1) begin
        tmp_i2_i_fu_1101_p3 = 32'd28;
    end else if (p_Result_35_fu_1091_p4[29] == 1'b1) begin
        tmp_i2_i_fu_1101_p3 = 32'd29;
    end else if (p_Result_35_fu_1091_p4[30] == 1'b1) begin
        tmp_i2_i_fu_1101_p3 = 32'd30;
    end else if (p_Result_35_fu_1091_p4[31] == 1'b1) begin
        tmp_i2_i_fu_1101_p3 = 32'd31;
    end else begin
        tmp_i2_i_fu_1101_p3 = 32'd32;
    end
end


always @ (p_Result_36_fu_1161_p4) begin
    if (p_Result_36_fu_1161_p4[0] == 1'b1) begin
        tmp_i4_i_fu_1171_p3 = 32'd0;
    end else if (p_Result_36_fu_1161_p4[1] == 1'b1) begin
        tmp_i4_i_fu_1171_p3 = 32'd1;
    end else if (p_Result_36_fu_1161_p4[2] == 1'b1) begin
        tmp_i4_i_fu_1171_p3 = 32'd2;
    end else if (p_Result_36_fu_1161_p4[3] == 1'b1) begin
        tmp_i4_i_fu_1171_p3 = 32'd3;
    end else if (p_Result_36_fu_1161_p4[4] == 1'b1) begin
        tmp_i4_i_fu_1171_p3 = 32'd4;
    end else if (p_Result_36_fu_1161_p4[5] == 1'b1) begin
        tmp_i4_i_fu_1171_p3 = 32'd5;
    end else if (p_Result_36_fu_1161_p4[6] == 1'b1) begin
        tmp_i4_i_fu_1171_p3 = 32'd6;
    end else if (p_Result_36_fu_1161_p4[7] == 1'b1) begin
        tmp_i4_i_fu_1171_p3 = 32'd7;
    end else if (p_Result_36_fu_1161_p4[8] == 1'b1) begin
        tmp_i4_i_fu_1171_p3 = 32'd8;
    end else if (p_Result_36_fu_1161_p4[9] == 1'b1) begin
        tmp_i4_i_fu_1171_p3 = 32'd9;
    end else if (p_Result_36_fu_1161_p4[10] == 1'b1) begin
        tmp_i4_i_fu_1171_p3 = 32'd10;
    end else if (p_Result_36_fu_1161_p4[11] == 1'b1) begin
        tmp_i4_i_fu_1171_p3 = 32'd11;
    end else if (p_Result_36_fu_1161_p4[12] == 1'b1) begin
        tmp_i4_i_fu_1171_p3 = 32'd12;
    end else if (p_Result_36_fu_1161_p4[13] == 1'b1) begin
        tmp_i4_i_fu_1171_p3 = 32'd13;
    end else if (p_Result_36_fu_1161_p4[14] == 1'b1) begin
        tmp_i4_i_fu_1171_p3 = 32'd14;
    end else if (p_Result_36_fu_1161_p4[15] == 1'b1) begin
        tmp_i4_i_fu_1171_p3 = 32'd15;
    end else if (p_Result_36_fu_1161_p4[16] == 1'b1) begin
        tmp_i4_i_fu_1171_p3 = 32'd16;
    end else if (p_Result_36_fu_1161_p4[17] == 1'b1) begin
        tmp_i4_i_fu_1171_p3 = 32'd17;
    end else if (p_Result_36_fu_1161_p4[18] == 1'b1) begin
        tmp_i4_i_fu_1171_p3 = 32'd18;
    end else if (p_Result_36_fu_1161_p4[19] == 1'b1) begin
        tmp_i4_i_fu_1171_p3 = 32'd19;
    end else if (p_Result_36_fu_1161_p4[20] == 1'b1) begin
        tmp_i4_i_fu_1171_p3 = 32'd20;
    end else if (p_Result_36_fu_1161_p4[21] == 1'b1) begin
        tmp_i4_i_fu_1171_p3 = 32'd21;
    end else if (p_Result_36_fu_1161_p4[22] == 1'b1) begin
        tmp_i4_i_fu_1171_p3 = 32'd22;
    end else if (p_Result_36_fu_1161_p4[23] == 1'b1) begin
        tmp_i4_i_fu_1171_p3 = 32'd23;
    end else if (p_Result_36_fu_1161_p4[24] == 1'b1) begin
        tmp_i4_i_fu_1171_p3 = 32'd24;
    end else if (p_Result_36_fu_1161_p4[25] == 1'b1) begin
        tmp_i4_i_fu_1171_p3 = 32'd25;
    end else if (p_Result_36_fu_1161_p4[26] == 1'b1) begin
        tmp_i4_i_fu_1171_p3 = 32'd26;
    end else if (p_Result_36_fu_1161_p4[27] == 1'b1) begin
        tmp_i4_i_fu_1171_p3 = 32'd27;
    end else if (p_Result_36_fu_1161_p4[28] == 1'b1) begin
        tmp_i4_i_fu_1171_p3 = 32'd28;
    end else if (p_Result_36_fu_1161_p4[29] == 1'b1) begin
        tmp_i4_i_fu_1171_p3 = 32'd29;
    end else if (p_Result_36_fu_1161_p4[30] == 1'b1) begin
        tmp_i4_i_fu_1171_p3 = 32'd30;
    end else if (p_Result_36_fu_1161_p4[31] == 1'b1) begin
        tmp_i4_i_fu_1171_p3 = 32'd31;
    end else begin
        tmp_i4_i_fu_1171_p3 = 32'd32;
    end
end


always @ (p_Result_37_fu_1179_p4) begin
    if (p_Result_37_fu_1179_p4[0] == 1'b1) begin
        tmp_i6_i_fu_1189_p3 = 32'd0;
    end else if (p_Result_37_fu_1179_p4[1] == 1'b1) begin
        tmp_i6_i_fu_1189_p3 = 32'd1;
    end else if (p_Result_37_fu_1179_p4[2] == 1'b1) begin
        tmp_i6_i_fu_1189_p3 = 32'd2;
    end else if (p_Result_37_fu_1179_p4[3] == 1'b1) begin
        tmp_i6_i_fu_1189_p3 = 32'd3;
    end else if (p_Result_37_fu_1179_p4[4] == 1'b1) begin
        tmp_i6_i_fu_1189_p3 = 32'd4;
    end else if (p_Result_37_fu_1179_p4[5] == 1'b1) begin
        tmp_i6_i_fu_1189_p3 = 32'd5;
    end else if (p_Result_37_fu_1179_p4[6] == 1'b1) begin
        tmp_i6_i_fu_1189_p3 = 32'd6;
    end else if (p_Result_37_fu_1179_p4[7] == 1'b1) begin
        tmp_i6_i_fu_1189_p3 = 32'd7;
    end else if (p_Result_37_fu_1179_p4[8] == 1'b1) begin
        tmp_i6_i_fu_1189_p3 = 32'd8;
    end else if (p_Result_37_fu_1179_p4[9] == 1'b1) begin
        tmp_i6_i_fu_1189_p3 = 32'd9;
    end else if (p_Result_37_fu_1179_p4[10] == 1'b1) begin
        tmp_i6_i_fu_1189_p3 = 32'd10;
    end else if (p_Result_37_fu_1179_p4[11] == 1'b1) begin
        tmp_i6_i_fu_1189_p3 = 32'd11;
    end else if (p_Result_37_fu_1179_p4[12] == 1'b1) begin
        tmp_i6_i_fu_1189_p3 = 32'd12;
    end else if (p_Result_37_fu_1179_p4[13] == 1'b1) begin
        tmp_i6_i_fu_1189_p3 = 32'd13;
    end else if (p_Result_37_fu_1179_p4[14] == 1'b1) begin
        tmp_i6_i_fu_1189_p3 = 32'd14;
    end else if (p_Result_37_fu_1179_p4[15] == 1'b1) begin
        tmp_i6_i_fu_1189_p3 = 32'd15;
    end else if (p_Result_37_fu_1179_p4[16] == 1'b1) begin
        tmp_i6_i_fu_1189_p3 = 32'd16;
    end else if (p_Result_37_fu_1179_p4[17] == 1'b1) begin
        tmp_i6_i_fu_1189_p3 = 32'd17;
    end else if (p_Result_37_fu_1179_p4[18] == 1'b1) begin
        tmp_i6_i_fu_1189_p3 = 32'd18;
    end else if (p_Result_37_fu_1179_p4[19] == 1'b1) begin
        tmp_i6_i_fu_1189_p3 = 32'd19;
    end else if (p_Result_37_fu_1179_p4[20] == 1'b1) begin
        tmp_i6_i_fu_1189_p3 = 32'd20;
    end else if (p_Result_37_fu_1179_p4[21] == 1'b1) begin
        tmp_i6_i_fu_1189_p3 = 32'd21;
    end else if (p_Result_37_fu_1179_p4[22] == 1'b1) begin
        tmp_i6_i_fu_1189_p3 = 32'd22;
    end else if (p_Result_37_fu_1179_p4[23] == 1'b1) begin
        tmp_i6_i_fu_1189_p3 = 32'd23;
    end else if (p_Result_37_fu_1179_p4[24] == 1'b1) begin
        tmp_i6_i_fu_1189_p3 = 32'd24;
    end else if (p_Result_37_fu_1179_p4[25] == 1'b1) begin
        tmp_i6_i_fu_1189_p3 = 32'd25;
    end else if (p_Result_37_fu_1179_p4[26] == 1'b1) begin
        tmp_i6_i_fu_1189_p3 = 32'd26;
    end else if (p_Result_37_fu_1179_p4[27] == 1'b1) begin
        tmp_i6_i_fu_1189_p3 = 32'd27;
    end else if (p_Result_37_fu_1179_p4[28] == 1'b1) begin
        tmp_i6_i_fu_1189_p3 = 32'd28;
    end else if (p_Result_37_fu_1179_p4[29] == 1'b1) begin
        tmp_i6_i_fu_1189_p3 = 32'd29;
    end else if (p_Result_37_fu_1179_p4[30] == 1'b1) begin
        tmp_i6_i_fu_1189_p3 = 32'd30;
    end else if (p_Result_37_fu_1179_p4[31] == 1'b1) begin
        tmp_i6_i_fu_1189_p3 = 32'd31;
    end else begin
        tmp_i6_i_fu_1189_p3 = 32'd32;
    end
end

assign tmp_i_56_fu_1142_p3 = {{p_Result_i_55_reg_1785_pp0_iter22_reg}, {1'd1}};

assign tmp_i_fu_1035_p3 = {{p_Result_1_i_reg_1770}, {1'd1}};


always @ (p_Result_34_fu_1073_p4) begin
    if (p_Result_34_fu_1073_p4[0] == 1'b1) begin
        tmp_i_i2_fu_1083_p3 = 32'd0;
    end else if (p_Result_34_fu_1073_p4[1] == 1'b1) begin
        tmp_i_i2_fu_1083_p3 = 32'd1;
    end else if (p_Result_34_fu_1073_p4[2] == 1'b1) begin
        tmp_i_i2_fu_1083_p3 = 32'd2;
    end else if (p_Result_34_fu_1073_p4[3] == 1'b1) begin
        tmp_i_i2_fu_1083_p3 = 32'd3;
    end else if (p_Result_34_fu_1073_p4[4] == 1'b1) begin
        tmp_i_i2_fu_1083_p3 = 32'd4;
    end else if (p_Result_34_fu_1073_p4[5] == 1'b1) begin
        tmp_i_i2_fu_1083_p3 = 32'd5;
    end else if (p_Result_34_fu_1073_p4[6] == 1'b1) begin
        tmp_i_i2_fu_1083_p3 = 32'd6;
    end else if (p_Result_34_fu_1073_p4[7] == 1'b1) begin
        tmp_i_i2_fu_1083_p3 = 32'd7;
    end else if (p_Result_34_fu_1073_p4[8] == 1'b1) begin
        tmp_i_i2_fu_1083_p3 = 32'd8;
    end else if (p_Result_34_fu_1073_p4[9] == 1'b1) begin
        tmp_i_i2_fu_1083_p3 = 32'd9;
    end else if (p_Result_34_fu_1073_p4[10] == 1'b1) begin
        tmp_i_i2_fu_1083_p3 = 32'd10;
    end else if (p_Result_34_fu_1073_p4[11] == 1'b1) begin
        tmp_i_i2_fu_1083_p3 = 32'd11;
    end else if (p_Result_34_fu_1073_p4[12] == 1'b1) begin
        tmp_i_i2_fu_1083_p3 = 32'd12;
    end else if (p_Result_34_fu_1073_p4[13] == 1'b1) begin
        tmp_i_i2_fu_1083_p3 = 32'd13;
    end else if (p_Result_34_fu_1073_p4[14] == 1'b1) begin
        tmp_i_i2_fu_1083_p3 = 32'd14;
    end else if (p_Result_34_fu_1073_p4[15] == 1'b1) begin
        tmp_i_i2_fu_1083_p3 = 32'd15;
    end else if (p_Result_34_fu_1073_p4[16] == 1'b1) begin
        tmp_i_i2_fu_1083_p3 = 32'd16;
    end else if (p_Result_34_fu_1073_p4[17] == 1'b1) begin
        tmp_i_i2_fu_1083_p3 = 32'd17;
    end else if (p_Result_34_fu_1073_p4[18] == 1'b1) begin
        tmp_i_i2_fu_1083_p3 = 32'd18;
    end else if (p_Result_34_fu_1073_p4[19] == 1'b1) begin
        tmp_i_i2_fu_1083_p3 = 32'd19;
    end else if (p_Result_34_fu_1073_p4[20] == 1'b1) begin
        tmp_i_i2_fu_1083_p3 = 32'd20;
    end else if (p_Result_34_fu_1073_p4[21] == 1'b1) begin
        tmp_i_i2_fu_1083_p3 = 32'd21;
    end else if (p_Result_34_fu_1073_p4[22] == 1'b1) begin
        tmp_i_i2_fu_1083_p3 = 32'd22;
    end else if (p_Result_34_fu_1073_p4[23] == 1'b1) begin
        tmp_i_i2_fu_1083_p3 = 32'd23;
    end else if (p_Result_34_fu_1073_p4[24] == 1'b1) begin
        tmp_i_i2_fu_1083_p3 = 32'd24;
    end else if (p_Result_34_fu_1073_p4[25] == 1'b1) begin
        tmp_i_i2_fu_1083_p3 = 32'd25;
    end else if (p_Result_34_fu_1073_p4[26] == 1'b1) begin
        tmp_i_i2_fu_1083_p3 = 32'd26;
    end else if (p_Result_34_fu_1073_p4[27] == 1'b1) begin
        tmp_i_i2_fu_1083_p3 = 32'd27;
    end else if (p_Result_34_fu_1073_p4[28] == 1'b1) begin
        tmp_i_i2_fu_1083_p3 = 32'd28;
    end else if (p_Result_34_fu_1073_p4[29] == 1'b1) begin
        tmp_i_i2_fu_1083_p3 = 32'd29;
    end else if (p_Result_34_fu_1073_p4[30] == 1'b1) begin
        tmp_i_i2_fu_1083_p3 = 32'd30;
    end else if (p_Result_34_fu_1073_p4[31] == 1'b1) begin
        tmp_i_i2_fu_1083_p3 = 32'd31;
    end else begin
        tmp_i_i2_fu_1083_p3 = 32'd32;
    end
end


always @ (p_Result_31_fu_645_p3) begin
    if (p_Result_31_fu_645_p3[0] == 1'b1) begin
        tmp_i_i_fu_653_p3 = 64'd0;
    end else if (p_Result_31_fu_645_p3[1] == 1'b1) begin
        tmp_i_i_fu_653_p3 = 64'd1;
    end else if (p_Result_31_fu_645_p3[2] == 1'b1) begin
        tmp_i_i_fu_653_p3 = 64'd2;
    end else if (p_Result_31_fu_645_p3[3] == 1'b1) begin
        tmp_i_i_fu_653_p3 = 64'd3;
    end else if (p_Result_31_fu_645_p3[4] == 1'b1) begin
        tmp_i_i_fu_653_p3 = 64'd4;
    end else if (p_Result_31_fu_645_p3[5] == 1'b1) begin
        tmp_i_i_fu_653_p3 = 64'd5;
    end else if (p_Result_31_fu_645_p3[6] == 1'b1) begin
        tmp_i_i_fu_653_p3 = 64'd6;
    end else if (p_Result_31_fu_645_p3[7] == 1'b1) begin
        tmp_i_i_fu_653_p3 = 64'd7;
    end else if (p_Result_31_fu_645_p3[8] == 1'b1) begin
        tmp_i_i_fu_653_p3 = 64'd8;
    end else if (p_Result_31_fu_645_p3[9] == 1'b1) begin
        tmp_i_i_fu_653_p3 = 64'd9;
    end else if (p_Result_31_fu_645_p3[10] == 1'b1) begin
        tmp_i_i_fu_653_p3 = 64'd10;
    end else if (p_Result_31_fu_645_p3[11] == 1'b1) begin
        tmp_i_i_fu_653_p3 = 64'd11;
    end else if (p_Result_31_fu_645_p3[12] == 1'b1) begin
        tmp_i_i_fu_653_p3 = 64'd12;
    end else if (p_Result_31_fu_645_p3[13] == 1'b1) begin
        tmp_i_i_fu_653_p3 = 64'd13;
    end else if (p_Result_31_fu_645_p3[14] == 1'b1) begin
        tmp_i_i_fu_653_p3 = 64'd14;
    end else if (p_Result_31_fu_645_p3[15] == 1'b1) begin
        tmp_i_i_fu_653_p3 = 64'd15;
    end else if (p_Result_31_fu_645_p3[16] == 1'b1) begin
        tmp_i_i_fu_653_p3 = 64'd16;
    end else if (p_Result_31_fu_645_p3[17] == 1'b1) begin
        tmp_i_i_fu_653_p3 = 64'd17;
    end else if (p_Result_31_fu_645_p3[18] == 1'b1) begin
        tmp_i_i_fu_653_p3 = 64'd18;
    end else if (p_Result_31_fu_645_p3[19] == 1'b1) begin
        tmp_i_i_fu_653_p3 = 64'd19;
    end else if (p_Result_31_fu_645_p3[20] == 1'b1) begin
        tmp_i_i_fu_653_p3 = 64'd20;
    end else if (p_Result_31_fu_645_p3[21] == 1'b1) begin
        tmp_i_i_fu_653_p3 = 64'd21;
    end else if (p_Result_31_fu_645_p3[22] == 1'b1) begin
        tmp_i_i_fu_653_p3 = 64'd22;
    end else if (p_Result_31_fu_645_p3[23] == 1'b1) begin
        tmp_i_i_fu_653_p3 = 64'd23;
    end else if (p_Result_31_fu_645_p3[24] == 1'b1) begin
        tmp_i_i_fu_653_p3 = 64'd24;
    end else if (p_Result_31_fu_645_p3[25] == 1'b1) begin
        tmp_i_i_fu_653_p3 = 64'd25;
    end else if (p_Result_31_fu_645_p3[26] == 1'b1) begin
        tmp_i_i_fu_653_p3 = 64'd26;
    end else if (p_Result_31_fu_645_p3[27] == 1'b1) begin
        tmp_i_i_fu_653_p3 = 64'd27;
    end else if (p_Result_31_fu_645_p3[28] == 1'b1) begin
        tmp_i_i_fu_653_p3 = 64'd28;
    end else if (p_Result_31_fu_645_p3[29] == 1'b1) begin
        tmp_i_i_fu_653_p3 = 64'd29;
    end else if (p_Result_31_fu_645_p3[30] == 1'b1) begin
        tmp_i_i_fu_653_p3 = 64'd30;
    end else if (p_Result_31_fu_645_p3[31] == 1'b1) begin
        tmp_i_i_fu_653_p3 = 64'd31;
    end else if (p_Result_31_fu_645_p3[32] == 1'b1) begin
        tmp_i_i_fu_653_p3 = 64'd32;
    end else if (p_Result_31_fu_645_p3[33] == 1'b1) begin
        tmp_i_i_fu_653_p3 = 64'd33;
    end else if (p_Result_31_fu_645_p3[34] == 1'b1) begin
        tmp_i_i_fu_653_p3 = 64'd34;
    end else if (p_Result_31_fu_645_p3[35] == 1'b1) begin
        tmp_i_i_fu_653_p3 = 64'd35;
    end else if (p_Result_31_fu_645_p3[36] == 1'b1) begin
        tmp_i_i_fu_653_p3 = 64'd36;
    end else if (p_Result_31_fu_645_p3[37] == 1'b1) begin
        tmp_i_i_fu_653_p3 = 64'd37;
    end else if (p_Result_31_fu_645_p3[38] == 1'b1) begin
        tmp_i_i_fu_653_p3 = 64'd38;
    end else if (p_Result_31_fu_645_p3[39] == 1'b1) begin
        tmp_i_i_fu_653_p3 = 64'd39;
    end else if (p_Result_31_fu_645_p3[40] == 1'b1) begin
        tmp_i_i_fu_653_p3 = 64'd40;
    end else if (p_Result_31_fu_645_p3[41] == 1'b1) begin
        tmp_i_i_fu_653_p3 = 64'd41;
    end else if (p_Result_31_fu_645_p3[42] == 1'b1) begin
        tmp_i_i_fu_653_p3 = 64'd42;
    end else if (p_Result_31_fu_645_p3[43] == 1'b1) begin
        tmp_i_i_fu_653_p3 = 64'd43;
    end else if (p_Result_31_fu_645_p3[44] == 1'b1) begin
        tmp_i_i_fu_653_p3 = 64'd44;
    end else if (p_Result_31_fu_645_p3[45] == 1'b1) begin
        tmp_i_i_fu_653_p3 = 64'd45;
    end else if (p_Result_31_fu_645_p3[46] == 1'b1) begin
        tmp_i_i_fu_653_p3 = 64'd46;
    end else if (p_Result_31_fu_645_p3[47] == 1'b1) begin
        tmp_i_i_fu_653_p3 = 64'd47;
    end else if (p_Result_31_fu_645_p3[48] == 1'b1) begin
        tmp_i_i_fu_653_p3 = 64'd48;
    end else if (p_Result_31_fu_645_p3[49] == 1'b1) begin
        tmp_i_i_fu_653_p3 = 64'd49;
    end else if (p_Result_31_fu_645_p3[50] == 1'b1) begin
        tmp_i_i_fu_653_p3 = 64'd50;
    end else if (p_Result_31_fu_645_p3[51] == 1'b1) begin
        tmp_i_i_fu_653_p3 = 64'd51;
    end else if (p_Result_31_fu_645_p3[52] == 1'b1) begin
        tmp_i_i_fu_653_p3 = 64'd52;
    end else if (p_Result_31_fu_645_p3[53] == 1'b1) begin
        tmp_i_i_fu_653_p3 = 64'd53;
    end else if (p_Result_31_fu_645_p3[54] == 1'b1) begin
        tmp_i_i_fu_653_p3 = 64'd54;
    end else if (p_Result_31_fu_645_p3[55] == 1'b1) begin
        tmp_i_i_fu_653_p3 = 64'd55;
    end else if (p_Result_31_fu_645_p3[56] == 1'b1) begin
        tmp_i_i_fu_653_p3 = 64'd56;
    end else if (p_Result_31_fu_645_p3[57] == 1'b1) begin
        tmp_i_i_fu_653_p3 = 64'd57;
    end else if (p_Result_31_fu_645_p3[58] == 1'b1) begin
        tmp_i_i_fu_653_p3 = 64'd58;
    end else if (p_Result_31_fu_645_p3[59] == 1'b1) begin
        tmp_i_i_fu_653_p3 = 64'd59;
    end else if (p_Result_31_fu_645_p3[60] == 1'b1) begin
        tmp_i_i_fu_653_p3 = 64'd60;
    end else if (p_Result_31_fu_645_p3[61] == 1'b1) begin
        tmp_i_i_fu_653_p3 = 64'd61;
    end else if (p_Result_31_fu_645_p3[62] == 1'b1) begin
        tmp_i_i_fu_653_p3 = 64'd62;
    end else if (p_Result_31_fu_645_p3[63] == 1'b1) begin
        tmp_i_i_fu_653_p3 = 64'd63;
    end else begin
        tmp_i_i_fu_653_p3 = 64'd64;
    end
end

assign trunc_ln601_fu_359_p1 = addr_V_fu_336_p3[6:0];

assign trunc_ln745_fu_433_p1 = p_Val2_45_fu_427_p3[0:0];

assign ush_fu_711_p3 = ((isNeg_reg_1586[0:0] === 1'b1) ? sub_ln1311_fu_705_p2 : sext_ln1334_fu_702_p1);

assign xor_ln300_1_fu_1439_p2 = (1'd1 ^ and_ln300_reg_1556_pp0_iter23_reg);

assign xor_ln300_fu_604_p2 = (1'd1 ^ and_ln300_1_fu_599_p2);

assign xor_ln311_fu_587_p2 = (icmp_ln833_2_fu_582_p2 ^ 1'd1);

assign xor_ln444_fu_1273_p2 = (icmp_ln444_1_reg_1836 ^ 1'd1);

assign zext_ln1253_fu_665_p1 = Mx_zeros_V_fu_661_p1;

assign zext_ln1287_1_fu_1109_p1 = tmp_i_i2_fu_1083_p3;

assign zext_ln1287_2_fu_1207_p1 = tmp_i2_i_reg_1796;

assign zext_ln1287_3_fu_1226_p1 = tmp_i4_i_fu_1171_p3;

assign zext_ln1287_4_fu_1265_p1 = tmp_i6_i_reg_1814;

assign zext_ln1287_fu_722_p1 = $unsigned(sext_ln1311_fu_718_p1);

assign zext_ln498_fu_782_p1 = p_Result_32_fu_776_p3;

assign zext_ln635_fu_354_p1 = p_Result_i_i_fu_344_p4;

assign zext_ln655_fu_684_p1 = Mx_zeros_V_fu_661_p1;

assign zext_ln657_1_fu_957_p1 = tmp_2_reg_1734_pp0_iter15_reg;

assign zext_ln657_fu_949_p1 = tmp_1_reg_1744;

assign zext_ln744_fu_363_p1 = trunc_ln601_reg_1502;

always @ (posedge ap_clk) begin
    r_V_6_reg_1607[97:49] <= 49'b0000000000000000000000000000000000000000000000000;
    r_V_6_reg_1607_pp0_iter11_reg[97:49] <= 49'b0000000000000000000000000000000000000000000000000;
    zext_ln498_reg_1614[63:8] <= 56'b00000000000000000000000000000000000000000000000000000000;
    zext_ln498_reg_1614_pp0_iter11_reg[63:8] <= 56'b00000000000000000000000000000000000000000000000000000000;
end

endmodule //sin_or_cos_double_s

// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module grucell (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        in_stream_V_V_dout,
        in_stream_V_V_empty_n,
        in_stream_V_V_read,
        out_stream_V_V_din,
        out_stream_V_V_full_n,
        out_stream_V_V_write,
        keep_stream_V_dout,
        keep_stream_V_empty_n,
        keep_stream_V_read,
        pw12gru_scale_V_dout,
        pw12gru_scale_V_empty_n,
        pw12gru_scale_V_read,
        gru2fc_scale_V_din,
        gru2fc_scale_V_full_n,
        gru2fc_scale_V_write,
        zu_weights_scale,
        ru_weights_scale,
        hu_weights_scale,
        tmp_scale_gru1,
        tmp_scale_gru2,
        tmp_scale_gru3,
        tmp_scale_gru4,
        tmp_scale_gru5,
        tmp_scale_gru6,
        tmp_scale_gru7,
        weights_zu_V_address0,
        weights_zu_V_ce0,
        weights_zu_V_q0,
        weights_ru_V_address0,
        weights_ru_V_ce0,
        weights_ru_V_q0,
        weights_zw_V_address0,
        weights_zw_V_ce0,
        weights_zw_V_q0,
        weights_rw_V_address0,
        weights_rw_V_ce0,
        weights_rw_V_q0,
        bias_z_V_address0,
        bias_z_V_ce0,
        bias_z_V_q0,
        bias_r_V_address0,
        bias_r_V_ce0,
        bias_r_V_q0,
        weights_hw_V_address0,
        weights_hw_V_ce0,
        weights_hw_V_q0,
        weights_hu_V_address0,
        weights_hu_V_ce0,
        weights_hu_V_q0,
        bias_h_V_address0,
        bias_h_V_ce0,
        bias_h_V_q0
);

parameter    ap_ST_fsm_state1 = 95'd1;
parameter    ap_ST_fsm_state2 = 95'd2;
parameter    ap_ST_fsm_state3 = 95'd4;
parameter    ap_ST_fsm_state4 = 95'd8;
parameter    ap_ST_fsm_state5 = 95'd16;
parameter    ap_ST_fsm_pp0_stage0 = 95'd32;
parameter    ap_ST_fsm_state8 = 95'd64;
parameter    ap_ST_fsm_pp1_stage0 = 95'd128;
parameter    ap_ST_fsm_state24 = 95'd256;
parameter    ap_ST_fsm_state25 = 95'd512;
parameter    ap_ST_fsm_pp2_stage0 = 95'd1024;
parameter    ap_ST_fsm_state30 = 95'd2048;
parameter    ap_ST_fsm_pp3_stage0 = 95'd4096;
parameter    ap_ST_fsm_state34 = 95'd8192;
parameter    ap_ST_fsm_state35 = 95'd16384;
parameter    ap_ST_fsm_state36 = 95'd32768;
parameter    ap_ST_fsm_state37 = 95'd65536;
parameter    ap_ST_fsm_state38 = 95'd131072;
parameter    ap_ST_fsm_state39 = 95'd262144;
parameter    ap_ST_fsm_state40 = 95'd524288;
parameter    ap_ST_fsm_state41 = 95'd1048576;
parameter    ap_ST_fsm_state42 = 95'd2097152;
parameter    ap_ST_fsm_state43 = 95'd4194304;
parameter    ap_ST_fsm_state44 = 95'd8388608;
parameter    ap_ST_fsm_state45 = 95'd16777216;
parameter    ap_ST_fsm_state46 = 95'd33554432;
parameter    ap_ST_fsm_state47 = 95'd67108864;
parameter    ap_ST_fsm_state48 = 95'd134217728;
parameter    ap_ST_fsm_state49 = 95'd268435456;
parameter    ap_ST_fsm_state50 = 95'd536870912;
parameter    ap_ST_fsm_state51 = 95'd1073741824;
parameter    ap_ST_fsm_state52 = 95'd2147483648;
parameter    ap_ST_fsm_state53 = 95'd4294967296;
parameter    ap_ST_fsm_state54 = 95'd8589934592;
parameter    ap_ST_fsm_state55 = 95'd17179869184;
parameter    ap_ST_fsm_state56 = 95'd34359738368;
parameter    ap_ST_fsm_state57 = 95'd68719476736;
parameter    ap_ST_fsm_pp4_stage0 = 95'd137438953472;
parameter    ap_ST_fsm_pp4_stage1 = 95'd274877906944;
parameter    ap_ST_fsm_pp4_stage2 = 95'd549755813888;
parameter    ap_ST_fsm_pp4_stage3 = 95'd1099511627776;
parameter    ap_ST_fsm_pp4_stage4 = 95'd2199023255552;
parameter    ap_ST_fsm_pp4_stage5 = 95'd4398046511104;
parameter    ap_ST_fsm_pp4_stage6 = 95'd8796093022208;
parameter    ap_ST_fsm_pp4_stage7 = 95'd17592186044416;
parameter    ap_ST_fsm_pp4_stage8 = 95'd35184372088832;
parameter    ap_ST_fsm_state75 = 95'd70368744177664;
parameter    ap_ST_fsm_pp5_stage0 = 95'd140737488355328;
parameter    ap_ST_fsm_state79 = 95'd281474976710656;
parameter    ap_ST_fsm_state80 = 95'd562949953421312;
parameter    ap_ST_fsm_state81 = 95'd1125899906842624;
parameter    ap_ST_fsm_state82 = 95'd2251799813685248;
parameter    ap_ST_fsm_state83 = 95'd4503599627370496;
parameter    ap_ST_fsm_state84 = 95'd9007199254740992;
parameter    ap_ST_fsm_state85 = 95'd18014398509481984;
parameter    ap_ST_fsm_state86 = 95'd36028797018963968;
parameter    ap_ST_fsm_state87 = 95'd72057594037927936;
parameter    ap_ST_fsm_state88 = 95'd144115188075855872;
parameter    ap_ST_fsm_state89 = 95'd288230376151711744;
parameter    ap_ST_fsm_state90 = 95'd576460752303423488;
parameter    ap_ST_fsm_state91 = 95'd1152921504606846976;
parameter    ap_ST_fsm_state92 = 95'd2305843009213693952;
parameter    ap_ST_fsm_state93 = 95'd4611686018427387904;
parameter    ap_ST_fsm_state94 = 95'd9223372036854775808;
parameter    ap_ST_fsm_state95 = 95'd18446744073709551616;
parameter    ap_ST_fsm_state96 = 95'd36893488147419103232;
parameter    ap_ST_fsm_state97 = 95'd73786976294838206464;
parameter    ap_ST_fsm_state98 = 95'd147573952589676412928;
parameter    ap_ST_fsm_state99 = 95'd295147905179352825856;
parameter    ap_ST_fsm_state100 = 95'd590295810358705651712;
parameter    ap_ST_fsm_state101 = 95'd1180591620717411303424;
parameter    ap_ST_fsm_pp6_stage0 = 95'd2361183241434822606848;
parameter    ap_ST_fsm_state125 = 95'd4722366482869645213696;
parameter    ap_ST_fsm_state126 = 95'd9444732965739290427392;
parameter    ap_ST_fsm_state127 = 95'd18889465931478580854784;
parameter    ap_ST_fsm_state128 = 95'd37778931862957161709568;
parameter    ap_ST_fsm_state129 = 95'd75557863725914323419136;
parameter    ap_ST_fsm_state130 = 95'd151115727451828646838272;
parameter    ap_ST_fsm_state131 = 95'd302231454903657293676544;
parameter    ap_ST_fsm_state132 = 95'd604462909807314587353088;
parameter    ap_ST_fsm_state133 = 95'd1208925819614629174706176;
parameter    ap_ST_fsm_state134 = 95'd2417851639229258349412352;
parameter    ap_ST_fsm_state135 = 95'd4835703278458516698824704;
parameter    ap_ST_fsm_state136 = 95'd9671406556917033397649408;
parameter    ap_ST_fsm_state137 = 95'd19342813113834066795298816;
parameter    ap_ST_fsm_state138 = 95'd38685626227668133590597632;
parameter    ap_ST_fsm_state139 = 95'd77371252455336267181195264;
parameter    ap_ST_fsm_state140 = 95'd154742504910672534362390528;
parameter    ap_ST_fsm_state141 = 95'd309485009821345068724781056;
parameter    ap_ST_fsm_state142 = 95'd618970019642690137449562112;
parameter    ap_ST_fsm_state143 = 95'd1237940039285380274899124224;
parameter    ap_ST_fsm_state144 = 95'd2475880078570760549798248448;
parameter    ap_ST_fsm_pp7_stage0 = 95'd4951760157141521099596496896;
parameter    ap_ST_fsm_state159 = 95'd9903520314283042199192993792;
parameter    ap_ST_fsm_state160 = 95'd19807040628566084398385987584;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [7:0] in_stream_V_V_dout;
input   in_stream_V_V_empty_n;
output   in_stream_V_V_read;
output  [7:0] out_stream_V_V_din;
input   out_stream_V_V_full_n;
output   out_stream_V_V_write;
input  [31:0] keep_stream_V_dout;
input   keep_stream_V_empty_n;
output   keep_stream_V_read;
input  [31:0] pw12gru_scale_V_dout;
input   pw12gru_scale_V_empty_n;
output   pw12gru_scale_V_read;
output  [31:0] gru2fc_scale_V_din;
input   gru2fc_scale_V_full_n;
output   gru2fc_scale_V_write;
input  [31:0] zu_weights_scale;
input  [31:0] ru_weights_scale;
input  [31:0] hu_weights_scale;
input  [31:0] tmp_scale_gru1;
input  [31:0] tmp_scale_gru2;
input  [31:0] tmp_scale_gru3;
input  [31:0] tmp_scale_gru4;
input  [31:0] tmp_scale_gru5;
input  [31:0] tmp_scale_gru6;
input  [31:0] tmp_scale_gru7;
output  [12:0] weights_zu_V_address0;
output   weights_zu_V_ce0;
input  [7:0] weights_zu_V_q0;
output  [12:0] weights_ru_V_address0;
output   weights_ru_V_ce0;
input  [7:0] weights_ru_V_q0;
output  [11:0] weights_zw_V_address0;
output   weights_zw_V_ce0;
input  [7:0] weights_zw_V_q0;
output  [11:0] weights_rw_V_address0;
output   weights_rw_V_ce0;
input  [7:0] weights_rw_V_q0;
output  [5:0] bias_z_V_address0;
output   bias_z_V_ce0;
input  [7:0] bias_z_V_q0;
output  [5:0] bias_r_V_address0;
output   bias_r_V_ce0;
input  [7:0] bias_r_V_q0;
output  [11:0] weights_hw_V_address0;
output   weights_hw_V_ce0;
input  [7:0] weights_hw_V_q0;
output  [12:0] weights_hu_V_address0;
output   weights_hu_V_ce0;
input  [7:0] weights_hu_V_q0;
output  [5:0] bias_h_V_address0;
output   bias_h_V_ce0;
input  [7:0] bias_h_V_q0;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg in_stream_V_V_read;
reg out_stream_V_V_write;
reg keep_stream_V_read;
reg pw12gru_scale_V_read;
reg gru2fc_scale_V_write;
reg[12:0] weights_zu_V_address0;
reg weights_zu_V_ce0;
reg[12:0] weights_ru_V_address0;
reg weights_ru_V_ce0;
reg weights_zw_V_ce0;
reg weights_rw_V_ce0;
reg bias_z_V_ce0;
reg bias_r_V_ce0;
reg weights_hw_V_ce0;
reg[12:0] weights_hu_V_address0;
reg weights_hu_V_ce0;
reg bias_h_V_ce0;

(* fsm_encoding = "none" *) reg   [94:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [31:0] gru_output_flag;
reg   [6:0] x_V_2_address0;
reg    x_V_2_ce0;
reg    x_V_2_we0;
wire   [7:0] x_V_2_q0;
reg   [5:0] state_1_V_address0;
reg    state_1_V_ce0;
wire   [31:0] state_1_V_q0;
reg   [5:0] state_1_V_address1;
reg    state_1_V_ce1;
reg    state_1_V_we1;
reg   [31:0] state_1_V_d1;
wire   [31:0] state_1_V_q1;
reg   [5:0] zz_address0;
reg    zz_ce0;
reg    zz_we0;
wire   [31:0] zz_q0;
reg   [5:0] rr_address0;
reg    rr_ce0;
reg    rr_we0;
wire   [31:0] rr_q0;
reg   [5:0] hh_address0;
reg    hh_ce0;
reg    hh_we0;
wire   [31:0] hh_q0;
reg   [5:0] state_tmp_address0;
reg    state_tmp_ce0;
reg    state_tmp_we0;
wire   [31:0] state_tmp_q0;
wire   [5:0] mask_table2_address0;
reg    mask_table2_ce0;
wire   [51:0] mask_table2_q0;
wire   [5:0] one_half_table3_address0;
reg    one_half_table3_ce0;
wire   [52:0] one_half_table3_q0;
reg    in_stream_V_V_blk_n;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter1;
wire    ap_block_pp0_stage0;
reg   [0:0] icmp_ln93_reg_2922;
reg    out_stream_V_V_blk_n;
reg    ap_enable_reg_pp7_iter13;
wire    ap_block_pp7_stage0;
reg   [0:0] icmp_ln201_reg_3433;
reg    keep_stream_V_blk_n;
reg    pw12gru_scale_V_blk_n;
reg    gru2fc_scale_V_blk_n;
wire    ap_CS_fsm_state159;
reg   [6:0] j_0_reg_735;
reg   [6:0] i_0_reg_747;
reg   [21:0] tmp_ze_V_reg_769;
reg   [21:0] tmp_re_V_reg_781;
reg   [31:0] p_0174_0_reg_793;
reg   [31:0] p_0326_0_reg_805;
reg   [6:0] j2_0_reg_817;
reg  signed [21:0] p_0322_0_reg_828;
reg  signed [21:0] p_0406_0_reg_839;
reg   [6:0] k_0_reg_850;
reg   [21:0] tmp_he_V_reg_872;
reg   [31:0] p_0387_0_reg_884;
reg   [6:0] k4_0_reg_896;
reg  signed [21:0] p_0510_0_reg_907;
reg   [6:0] j5_0_reg_918;
reg   [31:0] phi_ln187_reg_929;
reg   [31:0] tmp_min_0_reg_941;
reg   [6:0] i6_0_reg_953;
reg   [6:0] h_0_reg_964;
wire   [31:0] grp_fu_1016_p2;
reg   [31:0] reg_1099;
wire    ap_CS_fsm_state5;
wire    ap_block_state145_pp7_stage0_iter0;
wire    ap_block_state146_pp7_stage0_iter1;
wire    ap_block_state147_pp7_stage0_iter2;
wire    ap_block_state148_pp7_stage0_iter3;
wire    ap_block_state149_pp7_stage0_iter4;
wire    ap_block_state150_pp7_stage0_iter5;
wire    ap_block_state151_pp7_stage0_iter6;
wire    ap_block_state152_pp7_stage0_iter7;
wire    ap_block_state153_pp7_stage0_iter8;
wire    ap_block_state154_pp7_stage0_iter9;
wire    ap_block_state155_pp7_stage0_iter10;
wire    ap_block_state156_pp7_stage0_iter11;
wire    ap_block_state157_pp7_stage0_iter12;
reg    ap_block_state158_pp7_stage0_iter13;
reg    ap_block_pp7_stage0_11001;
reg    ap_enable_reg_pp7_iter5;
wire   [31:0] grp_fu_1021_p2;
reg   [31:0] reg_1106;
wire    ap_block_state102_pp6_stage0_iter0;
wire    ap_block_state103_pp6_stage0_iter1;
wire    ap_block_state104_pp6_stage0_iter2;
wire    ap_block_state105_pp6_stage0_iter3;
wire    ap_block_state106_pp6_stage0_iter4;
wire    ap_block_state107_pp6_stage0_iter5;
wire    ap_block_state108_pp6_stage0_iter6;
wire    ap_block_state109_pp6_stage0_iter7;
wire    ap_block_state110_pp6_stage0_iter8;
wire    ap_block_state111_pp6_stage0_iter9;
wire    ap_block_state112_pp6_stage0_iter10;
wire    ap_block_state113_pp6_stage0_iter11;
wire    ap_block_state114_pp6_stage0_iter12;
wire    ap_block_state115_pp6_stage0_iter13;
wire    ap_block_state116_pp6_stage0_iter14;
wire    ap_block_state117_pp6_stage0_iter15;
wire    ap_block_state118_pp6_stage0_iter16;
wire    ap_block_state119_pp6_stage0_iter17;
wire    ap_block_state120_pp6_stage0_iter18;
wire    ap_block_state121_pp6_stage0_iter19;
wire    ap_block_state122_pp6_stage0_iter20;
wire    ap_block_state123_pp6_stage0_iter21;
wire    ap_block_state124_pp6_stage0_iter22;
wire    ap_block_pp6_stage0_11001;
reg    ap_enable_reg_pp6_iter15;
reg   [0:0] icmp_ln173_reg_3333;
reg   [0:0] icmp_ln173_reg_3333_pp6_iter14_reg;
wire   [31:0] grp_fu_1026_p2;
reg   [31:0] reg_1112;
reg   [31:0] reg_1118;
wire    ap_CS_fsm_pp1_stage0;
reg    ap_enable_reg_pp1_iter1;
wire    ap_block_state9_pp1_stage0_iter0;
wire    ap_block_state10_pp1_stage0_iter1;
wire    ap_block_state11_pp1_stage0_iter2;
wire    ap_block_state12_pp1_stage0_iter3;
wire    ap_block_state13_pp1_stage0_iter4;
wire    ap_block_state14_pp1_stage0_iter5;
wire    ap_block_state15_pp1_stage0_iter6;
wire    ap_block_state16_pp1_stage0_iter7;
wire    ap_block_state17_pp1_stage0_iter8;
wire    ap_block_state18_pp1_stage0_iter9;
wire    ap_block_state19_pp1_stage0_iter10;
wire    ap_block_state20_pp1_stage0_iter11;
wire    ap_block_state21_pp1_stage0_iter12;
wire    ap_block_state22_pp1_stage0_iter13;
wire    ap_block_state23_pp1_stage0_iter14;
wire    ap_block_pp1_stage0_11001;
reg   [0:0] icmp_ln100_reg_2931;
wire    ap_CS_fsm_pp2_stage0;
reg    ap_enable_reg_pp2_iter1;
wire    ap_block_state26_pp2_stage0_iter0;
wire    ap_block_state27_pp2_stage0_iter1;
wire    ap_block_state28_pp2_stage0_iter2;
wire    ap_block_state29_pp2_stage0_iter3;
wire    ap_block_pp2_stage0_11001;
reg   [0:0] icmp_ln118_reg_3019;
wire    ap_CS_fsm_pp4_stage1;
reg    ap_enable_reg_pp4_iter0;
wire    ap_block_state59_pp4_stage1_iter0;
wire    ap_block_state68_pp4_stage1_iter1;
wire    ap_block_pp4_stage1_11001;
reg   [0:0] icmp_ln150_reg_3220;
wire    ap_CS_fsm_pp6_stage0;
reg    ap_enable_reg_pp6_iter1;
wire   [31:0] grp_fu_1068_p1;
reg   [31:0] reg_1124;
reg    ap_enable_reg_pp1_iter7;
reg   [0:0] icmp_ln100_reg_2931_pp1_iter6_reg;
wire    ap_CS_fsm_state39;
wire    ap_CS_fsm_state44;
wire    ap_CS_fsm_pp4_stage6;
wire    ap_block_state64_pp4_stage6_iter0;
wire    ap_block_state73_pp4_stage6_iter1;
wire    ap_block_pp4_stage6_11001;
wire    ap_CS_fsm_state84;
wire    ap_CS_fsm_state89;
reg    ap_enable_reg_pp6_iter7;
reg   [0:0] icmp_ln173_reg_3333_pp6_iter6_reg;
reg   [31:0] reg_1130;
reg    ap_enable_reg_pp1_iter11;
reg   [0:0] icmp_ln100_reg_2931_pp1_iter10_reg;
wire    ap_CS_fsm_state43;
wire    ap_CS_fsm_state48;
wire    ap_CS_fsm_pp4_stage0;
reg    ap_enable_reg_pp4_iter1;
wire    ap_block_state58_pp4_stage0_iter0;
wire    ap_block_state67_pp4_stage0_iter1;
wire    ap_block_pp4_stage0_11001;
wire    ap_CS_fsm_pp4_stage3;
wire    ap_block_state61_pp4_stage3_iter0;
wire    ap_block_state70_pp4_stage3_iter1;
wire    ap_block_pp4_stage3_11001;
reg   [0:0] icmp_ln150_reg_3220_pp4_iter1_reg;
wire    ap_CS_fsm_state88;
wire    ap_CS_fsm_state93;
reg    ap_enable_reg_pp6_iter11;
reg   [0:0] icmp_ln173_reg_3333_pp6_iter10_reg;
reg  signed [7:0] reg_1138;
reg    ap_enable_reg_pp2_iter2;
reg   [0:0] icmp_ln118_reg_3019_pp2_iter1_reg;
wire    ap_CS_fsm_pp3_stage0;
reg    ap_enable_reg_pp3_iter1;
wire    ap_block_state31_pp3_stage0_iter0;
wire    ap_block_state32_pp3_stage0_iter1;
wire    ap_block_state33_pp3_stage0_iter2;
wire    ap_block_pp3_stage0_11001;
reg   [0:0] icmp_ln132_reg_3109;
reg  signed [7:0] reg_1142;
wire    ap_CS_fsm_pp5_stage0;
reg    ap_enable_reg_pp5_iter1;
wire    ap_block_state76_pp5_stage0_iter0;
wire    ap_block_state77_pp5_stage0_iter1;
wire    ap_block_state78_pp5_stage0_iter2;
wire    ap_block_pp5_stage0_11001;
reg   [0:0] icmp_ln159_reg_3289;
reg  signed [7:0] reg_1146;
wire   [31:0] grp_fu_1072_p1;
reg   [31:0] reg_1150;
reg   [31:0] reg_1155;
wire    ap_CS_fsm_state40;
wire    ap_CS_fsm_pp4_stage7;
wire    ap_block_state65_pp4_stage7_iter0;
wire    ap_block_state74_pp4_stage7_iter1;
wire    ap_block_pp4_stage7_11001;
wire    ap_CS_fsm_state85;
reg   [31:0] reg_1162;
wire   [31:0] grp_fu_1004_p2;
reg   [31:0] reg_1167;
wire    ap_CS_fsm_state53;
wire    ap_CS_fsm_state98;
wire   [31:0] grp_fu_1008_p2;
reg   [31:0] reg_1175;
reg   [31:0] reg_1175_pp6_iter21_reg;
reg    ap_enable_reg_pp6_iter20;
reg   [0:0] icmp_ln173_reg_3333_pp6_iter19_reg;
reg  signed [7:0] reg_1184;
reg   [31:0] tmp_105_reg_2819;
reg    ap_block_state1;
reg   [31:0] tmp_reg_2832;
wire    ap_CS_fsm_state2;
wire   [31:0] grp_fu_1031_p2;
reg   [31:0] tmp_scale3_reg_2887;
wire   [31:0] grp_fu_1036_p2;
reg   [31:0] tmp_scale4_reg_2892;
wire   [31:0] grp_fu_1041_p2;
reg   [31:0] tmp_scale5_reg_2897;
wire   [31:0] grp_fu_1046_p2;
reg   [31:0] tmp_scale6_reg_2902;
wire   [31:0] grp_fu_1051_p2;
reg   [31:0] tmp_scale8_reg_2907;
wire   [31:0] grp_fu_1056_p2;
reg   [31:0] tmp_scale9_reg_2912;
reg   [31:0] gru_output_flag_load_reg_2917;
wire   [0:0] icmp_ln93_fu_1192_p2;
wire    ap_block_state6_pp0_stage0_iter0;
reg    ap_block_state7_pp0_stage0_iter1;
reg    ap_block_pp0_stage0_11001;
wire   [6:0] j_fu_1198_p2;
reg   [6:0] j_reg_2926;
reg    ap_enable_reg_pp0_iter0;
wire   [0:0] icmp_ln100_fu_1209_p2;
reg   [0:0] icmp_ln100_reg_2931_pp1_iter1_reg;
reg   [0:0] icmp_ln100_reg_2931_pp1_iter2_reg;
reg   [0:0] icmp_ln100_reg_2931_pp1_iter3_reg;
reg   [0:0] icmp_ln100_reg_2931_pp1_iter4_reg;
reg   [0:0] icmp_ln100_reg_2931_pp1_iter5_reg;
reg   [0:0] icmp_ln100_reg_2931_pp1_iter7_reg;
reg   [0:0] icmp_ln100_reg_2931_pp1_iter8_reg;
reg   [0:0] icmp_ln100_reg_2931_pp1_iter9_reg;
reg   [0:0] icmp_ln100_reg_2931_pp1_iter11_reg;
reg   [0:0] icmp_ln100_reg_2931_pp1_iter12_reg;
reg   [0:0] icmp_ln100_reg_2931_pp1_iter13_reg;
wire   [6:0] i_29_fu_1215_p2;
reg    ap_enable_reg_pp1_iter0;
reg   [5:0] state_1_V_addr_reg_2940;
reg   [5:0] state_1_V_addr_reg_2940_pp1_iter1_reg;
reg   [5:0] state_1_V_addr_reg_2940_pp1_iter2_reg;
reg   [5:0] state_1_V_addr_reg_2940_pp1_iter3_reg;
reg   [5:0] state_1_V_addr_reg_2940_pp1_iter4_reg;
reg   [5:0] state_1_V_addr_reg_2940_pp1_iter5_reg;
reg   [5:0] state_1_V_addr_reg_2940_pp1_iter6_reg;
reg   [5:0] state_1_V_addr_reg_2940_pp1_iter7_reg;
reg   [5:0] state_1_V_addr_reg_2940_pp1_iter8_reg;
reg   [5:0] state_1_V_addr_reg_2940_pp1_iter9_reg;
reg   [5:0] state_1_V_addr_reg_2940_pp1_iter10_reg;
reg   [5:0] state_1_V_addr_reg_2940_pp1_iter11_reg;
reg   [5:0] state_1_V_addr_reg_2940_pp1_iter12_reg;
reg   [5:0] state_1_V_addr_reg_2940_pp1_iter13_reg;
wire   [31:0] reg_V_fu_1226_p1;
reg   [31:0] reg_V_reg_2946;
reg   [0:0] p_Result_34_reg_2951;
wire   [23:0] tmp_64_fu_1260_p3;
reg   [23:0] tmp_64_reg_2956;
wire   [0:0] icmp_ln278_fu_1268_p2;
reg   [0:0] icmp_ln278_reg_2961;
wire   [0:0] icmp_ln285_fu_1296_p2;
reg   [0:0] icmp_ln285_reg_2966;
wire  signed [8:0] sh_amt_3_fu_1302_p2;
reg  signed [8:0] sh_amt_3_reg_2971;
wire   [0:0] and_ln284_fu_1362_p2;
reg   [0:0] and_ln284_reg_2976;
wire   [23:0] select_ln285_fu_1374_p3;
reg   [23:0] select_ln285_reg_2981;
wire   [0:0] and_ln295_fu_1394_p2;
reg   [0:0] and_ln295_reg_2986;
wire   [31:0] select_ln303_fu_1468_p3;
reg   [31:0] select_ln303_reg_2991;
wire   [0:0] icmp_ln111_fu_1475_p2;
wire    ap_CS_fsm_state25;
wire   [6:0] i_30_fu_1481_p2;
reg   [6:0] i_30_reg_3000;
wire   [63:0] zext_ln120_fu_1487_p1;
reg   [63:0] zext_ln120_reg_3005;
wire   [13:0] zext_ln118_fu_1491_p1;
reg   [13:0] zext_ln118_reg_3013;
wire   [0:0] icmp_ln118_fu_1495_p2;
reg   [0:0] icmp_ln118_reg_3019_pp2_iter2_reg;
wire   [6:0] j_11_fu_1501_p2;
reg    ap_enable_reg_pp2_iter0;
wire   [63:0] zext_ln120_1_fu_1507_p1;
reg   [63:0] zext_ln120_1_reg_3028;
wire   [63:0] zext_ln215_3_fu_1529_p1;
reg   [63:0] zext_ln215_3_reg_3033;
reg   [7:0] weights_zw_V_load_reg_3069;
reg   [7:0] weights_rw_V_load_reg_3074;
wire   [31:0] mul_ln68_fu_1538_p2;
reg   [31:0] mul_ln68_reg_3079;
wire   [31:0] mul_ln68_1_fu_1547_p2;
reg   [31:0] mul_ln68_1_reg_3084;
wire  signed [21:0] grp_fu_2771_p3;
reg    ap_enable_reg_pp2_iter3;
wire  signed [21:0] grp_fu_2779_p3;
wire   [31:0] tmp_zw_V_fu_1565_p2;
wire   [31:0] tmp_rw_V_fu_1570_p2;
wire   [0:0] icmp_ln132_fu_1575_p2;
reg   [0:0] icmp_ln132_reg_3109_pp3_iter1_reg;
wire   [6:0] k_fu_1609_p2;
reg    ap_enable_reg_pp3_iter0;
wire  signed [21:0] grp_fu_2787_p3;
reg    ap_enable_reg_pp3_iter2;
wire  signed [21:0] grp_fu_2795_p3;
wire  signed [31:0] sext_ln138_fu_1627_p1;
wire    ap_CS_fsm_state35;
wire  signed [31:0] sext_ln140_fu_1632_p1;
wire    ap_CS_fsm_state37;
wire    ap_CS_fsm_state38;
reg   [7:0] bias_r_V_load_reg_3163;
wire  signed [31:0] sext_ln138_1_fu_1637_p1;
wire  signed [31:0] sext_ln140_1_fu_1642_p1;
reg   [31:0] tmp_267_reg_3178;
wire   [31:0] grp_mysigmoid_fu_986_ap_return;
reg   [31:0] tmp_266_reg_3183;
wire    ap_CS_fsm_state55;
wire    grp_mysigmoid_fu_986_ap_ready;
wire    grp_mysigmoid_fu_986_ap_done;
wire    grp_mysigmoid_fu_992_ap_ready;
wire    grp_mysigmoid_fu_992_ap_done;
reg    ap_block_state55_on_subcall_done;
wire   [31:0] grp_mysigmoid_fu_992_ap_return;
reg   [31:0] tmp_273_reg_3188;
wire   [0:0] icmp_ln145_fu_1646_p2;
wire    ap_CS_fsm_state57;
wire   [6:0] i_31_fu_1652_p2;
reg   [6:0] i_31_reg_3197;
wire   [63:0] zext_ln152_fu_1658_p1;
reg   [63:0] zext_ln152_reg_3202;
wire   [13:0] zext_ln150_fu_1662_p1;
reg   [13:0] zext_ln150_reg_3208;
wire   [31:0] add_ln173_fu_1666_p2;
reg   [31:0] add_ln173_reg_3214;
wire   [0:0] icmp_ln150_fu_1671_p2;
wire   [6:0] k_1_fu_1677_p2;
reg   [6:0] k_1_reg_3224;
wire   [63:0] zext_ln152_1_fu_1683_p1;
reg   [63:0] zext_ln152_1_reg_3229;
wire   [63:0] zext_ln215_5_fu_1706_p1;
reg   [63:0] zext_ln215_5_reg_3234;
reg   [31:0] rr_load_reg_3254;
reg   [7:0] weights_hw_V_load_reg_3259;
wire  signed [31:0] sext_ln1428_fu_1711_p1;
wire    ap_CS_fsm_pp4_stage2;
wire    ap_block_state60_pp4_stage2_iter0;
wire    ap_block_state69_pp4_stage2_iter1;
wire    ap_block_pp4_stage2_11001;
wire  signed [21:0] grp_fu_2803_p3;
reg  signed [21:0] tmp_hu_V_reg_3279;
wire   [31:0] tmp_hw_V_fu_1973_p3;
wire   [0:0] icmp_ln159_fu_1981_p2;
reg   [0:0] icmp_ln159_reg_3289_pp5_iter1_reg;
wire   [6:0] j_12_fu_2014_p2;
reg    ap_enable_reg_pp5_iter0;
wire  signed [21:0] grp_fu_2811_p3;
reg    ap_enable_reg_pp5_iter2;
wire  signed [31:0] sext_ln163_fu_2028_p1;
wire    ap_CS_fsm_state80;
wire    ap_CS_fsm_state83;
wire  signed [31:0] sext_ln163_1_fu_2033_p1;
wire   [31:0] grp_mytanh_fu_998_ap_return;
reg   [31:0] tmp_281_reg_3328;
wire    ap_CS_fsm_state100;
wire    grp_mytanh_fu_998_ap_ready;
wire    grp_mytanh_fu_998_ap_done;
wire   [0:0] icmp_ln173_fu_2038_p2;
reg   [0:0] icmp_ln173_reg_3333_pp6_iter1_reg;
reg   [0:0] icmp_ln173_reg_3333_pp6_iter2_reg;
reg   [0:0] icmp_ln173_reg_3333_pp6_iter3_reg;
reg   [0:0] icmp_ln173_reg_3333_pp6_iter4_reg;
reg   [0:0] icmp_ln173_reg_3333_pp6_iter5_reg;
reg   [0:0] icmp_ln173_reg_3333_pp6_iter7_reg;
reg   [0:0] icmp_ln173_reg_3333_pp6_iter8_reg;
reg   [0:0] icmp_ln173_reg_3333_pp6_iter9_reg;
reg   [0:0] icmp_ln173_reg_3333_pp6_iter11_reg;
reg   [0:0] icmp_ln173_reg_3333_pp6_iter12_reg;
reg   [0:0] icmp_ln173_reg_3333_pp6_iter13_reg;
reg   [0:0] icmp_ln173_reg_3333_pp6_iter15_reg;
reg   [0:0] icmp_ln173_reg_3333_pp6_iter16_reg;
reg   [0:0] icmp_ln173_reg_3333_pp6_iter17_reg;
reg   [0:0] icmp_ln173_reg_3333_pp6_iter18_reg;
reg   [0:0] icmp_ln173_reg_3333_pp6_iter20_reg;
reg   [0:0] icmp_ln173_reg_3333_pp6_iter21_reg;
wire   [6:0] i_fu_2044_p2;
reg    ap_enable_reg_pp6_iter0;
wire   [63:0] zext_ln175_fu_2050_p1;
reg   [63:0] zext_ln175_reg_3342;
reg   [63:0] zext_ln175_reg_3342_pp6_iter1_reg;
reg   [63:0] zext_ln175_reg_3342_pp6_iter2_reg;
reg   [63:0] zext_ln175_reg_3342_pp6_iter3_reg;
reg   [63:0] zext_ln175_reg_3342_pp6_iter4_reg;
reg   [63:0] zext_ln175_reg_3342_pp6_iter5_reg;
reg   [63:0] zext_ln175_reg_3342_pp6_iter6_reg;
reg   [63:0] zext_ln175_reg_3342_pp6_iter7_reg;
reg   [63:0] zext_ln175_reg_3342_pp6_iter8_reg;
reg   [63:0] zext_ln175_reg_3342_pp6_iter9_reg;
reg   [63:0] zext_ln175_reg_3342_pp6_iter10_reg;
reg   [63:0] zext_ln175_reg_3342_pp6_iter11_reg;
reg   [63:0] zext_ln175_reg_3342_pp6_iter12_reg;
reg   [63:0] zext_ln175_reg_3342_pp6_iter13_reg;
reg   [63:0] zext_ln175_reg_3342_pp6_iter14_reg;
reg   [63:0] zext_ln175_reg_3342_pp6_iter15_reg;
reg   [63:0] zext_ln175_reg_3342_pp6_iter16_reg;
reg   [63:0] zext_ln175_reg_3342_pp6_iter17_reg;
reg   [63:0] zext_ln175_reg_3342_pp6_iter18_reg;
reg   [63:0] zext_ln175_reg_3342_pp6_iter19_reg;
reg   [63:0] zext_ln175_reg_3342_pp6_iter20_reg;
reg   [31:0] zz_load_reg_3359;
reg    ap_enable_reg_pp6_iter6;
reg   [31:0] zz_load_reg_3359_pp6_iter7_reg;
reg   [31:0] hh_load_reg_3370;
wire   [0:0] or_ln177_fu_2103_p2;
reg   [0:0] or_ln177_reg_3375;
wire   [0:0] icmp_ln177_2_fu_2109_p2;
reg   [0:0] icmp_ln177_2_reg_3381;
wire   [0:0] icmp_ln177_3_fu_2115_p2;
reg   [0:0] icmp_ln177_3_reg_3386;
wire   [0:0] icmp_ln179_fu_2139_p2;
reg   [0:0] icmp_ln179_reg_3391;
wire   [0:0] icmp_ln179_1_fu_2145_p2;
reg   [0:0] icmp_ln179_1_reg_3396;
wire   [31:0] tmp_min_7_fu_2166_p3;
reg    ap_enable_reg_pp6_iter22;
wire   [31:0] tmp_min_9_fu_2189_p3;
wire   [0:0] grp_fu_1086_p2;
reg   [0:0] tmp_292_reg_3411;
wire    ap_CS_fsm_state126;
wire   [31:0] tmp_min_6_fu_2248_p3;
reg   [31:0] tmp_min_6_reg_3416;
wire    ap_CS_fsm_state127;
wire   [31:0] select_ln186_fu_2340_p3;
reg   [31:0] select_ln186_reg_3423;
wire    ap_CS_fsm_state128;
wire   [31:0] grp_fu_1063_p2;
reg   [31:0] shrink_reg_3428;
wire    ap_CS_fsm_state144;
wire   [0:0] icmp_ln201_fu_2347_p2;
wire   [0:0] icmp_ln197_fu_2352_p2;
wire    ap_CS_fsm_pp7_stage0;
wire   [6:0] h_fu_2358_p2;
reg    ap_enable_reg_pp7_iter0;
wire   [63:0] zext_ln199_fu_2364_p1;
reg   [63:0] zext_ln199_reg_3446;
reg   [63:0] zext_ln199_reg_3446_pp7_iter1_reg;
reg   [63:0] zext_ln199_reg_3446_pp7_iter2_reg;
reg   [63:0] zext_ln199_reg_3446_pp7_iter3_reg;
reg   [63:0] zext_ln199_reg_3446_pp7_iter4_reg;
reg   [63:0] zext_ln199_reg_3446_pp7_iter5_reg;
reg   [63:0] zext_ln199_reg_3446_pp7_iter6_reg;
reg   [63:0] zext_ln199_reg_3446_pp7_iter7_reg;
reg   [63:0] zext_ln199_reg_3446_pp7_iter8_reg;
reg   [63:0] zext_ln199_reg_3446_pp7_iter9_reg;
reg   [63:0] zext_ln199_reg_3446_pp7_iter10_reg;
reg   [63:0] zext_ln199_reg_3446_pp7_iter11_reg;
reg   [63:0] zext_ln199_reg_3446_pp7_iter12_reg;
reg   [31:0] state_tmp_load_reg_3456;
reg    ap_enable_reg_pp7_iter1;
reg   [0:0] p_Result_36_reg_3461;
reg   [0:0] p_Result_36_reg_3461_pp7_iter7_reg;
wire   [63:0] grp_fu_1083_p1;
reg   [63:0] x_assign_reg_3467;
reg   [63:0] x_assign_reg_3467_pp7_iter8_reg;
wire   [0:0] icmp_ln849_fu_2395_p2;
reg   [0:0] icmp_ln849_reg_3472;
reg   [0:0] icmp_ln849_reg_3472_pp7_iter8_reg;
wire   [0:0] icmp_ln849_2_fu_2401_p2;
reg   [0:0] icmp_ln849_2_reg_3478;
reg   [0:0] icmp_ln849_2_reg_3478_pp7_iter8_reg;
wire   [62:0] trunc_ln368_fu_2423_p1;
reg   [62:0] trunc_ln368_reg_3493;
wire   [63:0] bitcast_ln849_fu_2491_p1;
reg   [63:0] bitcast_ln849_reg_3498;
wire   [31:0] grp_fu_1080_p1;
reg   [31:0] outprepare_tmp_reg_3508;
wire   [31:0] reg_V_2_fu_2512_p1;
reg   [31:0] reg_V_2_reg_3513;
reg   [0:0] p_Result_40_reg_3518;
wire   [7:0] trunc_ln283_fu_2545_p1;
reg   [7:0] trunc_ln283_reg_3523;
wire   [0:0] icmp_ln278_2_fu_2557_p2;
reg   [0:0] icmp_ln278_2_reg_3529;
wire   [0:0] icmp_ln282_2_fu_2573_p2;
reg   [0:0] icmp_ln282_2_reg_3535;
wire   [0:0] icmp_ln285_2_fu_2585_p2;
reg   [0:0] icmp_ln285_2_reg_3540;
wire  signed [8:0] sh_amt_7_fu_2591_p2;
reg  signed [8:0] sh_amt_7_reg_3545;
wire   [0:0] and_ln284_2_fu_2635_p2;
reg   [0:0] and_ln284_2_reg_3550;
wire   [7:0] select_ln285_6_fu_2647_p3;
reg   [7:0] select_ln285_6_reg_3555;
wire   [0:0] and_ln295_2_fu_2667_p2;
reg   [0:0] and_ln295_2_reg_3560;
wire  signed [7:0] outprepare_V_fu_2754_p3;
reg  signed [7:0] outprepare_V_reg_3565;
reg    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state6;
wire    ap_CS_fsm_state8;
wire    ap_block_pp1_stage0_subdone;
reg    ap_condition_pp1_exit_iter0_state9;
reg    ap_enable_reg_pp1_iter2;
reg    ap_enable_reg_pp1_iter3;
reg    ap_enable_reg_pp1_iter4;
reg    ap_enable_reg_pp1_iter5;
reg    ap_enable_reg_pp1_iter6;
reg    ap_enable_reg_pp1_iter8;
reg    ap_enable_reg_pp1_iter9;
reg    ap_enable_reg_pp1_iter10;
reg    ap_enable_reg_pp1_iter12;
reg    ap_enable_reg_pp1_iter13;
reg    ap_enable_reg_pp1_iter14;
wire    ap_block_pp2_stage0_subdone;
reg    ap_condition_pp2_exit_iter0_state26;
wire    ap_CS_fsm_state30;
wire    ap_block_pp3_stage0_subdone;
reg    ap_condition_pp3_exit_iter0_state31;
wire    ap_block_pp4_stage0_subdone;
reg    ap_condition_pp4_exit_iter0_state58;
wire    ap_block_state66_pp4_stage8_iter0;
wire    ap_block_pp4_stage8_subdone;
wire    ap_CS_fsm_pp4_stage8;
wire    ap_block_pp4_stage7_subdone;
wire    ap_CS_fsm_state75;
wire    ap_block_pp5_stage0_subdone;
reg    ap_condition_pp5_exit_iter0_state76;
wire    ap_block_pp6_stage0_subdone;
reg    ap_condition_pp6_exit_iter0_state102;
reg    ap_enable_reg_pp6_iter2;
reg    ap_enable_reg_pp6_iter3;
reg    ap_enable_reg_pp6_iter4;
reg    ap_enable_reg_pp6_iter5;
reg    ap_enable_reg_pp6_iter8;
reg    ap_enable_reg_pp6_iter9;
reg    ap_enable_reg_pp6_iter10;
reg    ap_enable_reg_pp6_iter12;
reg    ap_enable_reg_pp6_iter13;
reg    ap_enable_reg_pp6_iter14;
reg    ap_enable_reg_pp6_iter16;
reg    ap_enable_reg_pp6_iter17;
reg    ap_enable_reg_pp6_iter18;
reg    ap_enable_reg_pp6_iter19;
reg    ap_enable_reg_pp6_iter21;
reg    ap_block_pp7_stage0_subdone;
reg    ap_condition_pp7_exit_iter0_state145;
reg    ap_enable_reg_pp7_iter2;
reg    ap_enable_reg_pp7_iter3;
reg    ap_enable_reg_pp7_iter4;
reg    ap_enable_reg_pp7_iter6;
reg    ap_enable_reg_pp7_iter7;
reg    ap_enable_reg_pp7_iter8;
reg    ap_enable_reg_pp7_iter9;
reg    ap_enable_reg_pp7_iter10;
reg    ap_enable_reg_pp7_iter11;
reg    ap_enable_reg_pp7_iter12;
wire    grp_mysigmoid_fu_986_ap_start;
wire    grp_mysigmoid_fu_986_ap_idle;
wire    grp_mysigmoid_fu_992_ap_start;
wire    grp_mysigmoid_fu_992_ap_idle;
wire    grp_mytanh_fu_998_ap_start;
wire    grp_mytanh_fu_998_ap_idle;
reg   [6:0] ap_phi_mux_j_0_phi_fu_739_p4;
reg   [6:0] i1_0_reg_758;
wire    ap_CS_fsm_state56;
wire    ap_CS_fsm_state24;
reg   [6:0] i3_0_reg_861;
wire    ap_CS_fsm_state101;
reg   [31:0] ap_phi_mux_p_0387_0_phi_fu_888_p4;
wire    ap_block_pp4_stage7;
reg   [6:0] ap_phi_mux_k4_0_phi_fu_900_p4;
wire    ap_block_pp4_stage0;
reg   [31:0] ap_phi_mux_phi_ln187_phi_fu_933_p4;
wire    ap_block_pp6_stage0;
reg   [31:0] ap_phi_mux_tmp_min_0_phi_fu_945_p4;
reg   [31:0] gru_output_flag_new_1_reg_975;
reg    ap_block_state159;
reg    grp_mysigmoid_fu_986_ap_start_reg;
wire    ap_CS_fsm_state54;
reg    grp_mysigmoid_fu_992_ap_start_reg;
reg    grp_mytanh_fu_998_ap_start_reg;
wire    ap_CS_fsm_state99;
wire   [63:0] zext_ln96_fu_1204_p1;
wire   [63:0] zext_ln102_fu_1221_p1;
wire    ap_block_pp1_stage0;
wire    ap_block_pp2_stage0;
wire   [63:0] zext_ln215_7_fu_1603_p1;
wire    ap_block_pp3_stage0;
wire   [63:0] zext_ln134_fu_1581_p1;
wire   [63:0] zext_ln215_9_fu_2009_p1;
wire    ap_block_pp5_stage0;
wire   [63:0] zext_ln161_fu_1987_p1;
wire   [63:0] zext_ln498_fu_2417_p1;
wire    ap_CS_fsm_state160;
reg    ap_block_pp7_stage0_01001;
wire  signed [31:0] sext_ln68_7_fu_2761_p1;
reg   [31:0] grp_fu_1004_p0;
reg   [31:0] grp_fu_1004_p1;
wire    ap_CS_fsm_state49;
wire    ap_CS_fsm_state94;
reg   [31:0] grp_fu_1008_p0;
reg   [31:0] grp_fu_1008_p1;
wire    ap_block_pp4_stage3;
reg   [31:0] grp_fu_1016_p0;
reg   [31:0] grp_fu_1016_p1;
wire    ap_CS_fsm_state45;
wire    ap_block_pp4_stage6;
wire    ap_CS_fsm_state90;
reg   [31:0] grp_fu_1021_p0;
reg   [31:0] grp_fu_1021_p1;
reg   [31:0] grp_fu_1026_p0;
reg   [31:0] grp_fu_1026_p1;
wire    ap_CS_fsm_state129;
reg   [31:0] grp_fu_1068_p0;
wire    ap_CS_fsm_state34;
wire    ap_block_pp4_stage1;
wire    ap_block_pp4_stage2;
wire    ap_CS_fsm_state79;
reg   [31:0] grp_fu_1072_p0;
wire   [63:0] grp_fu_1080_p0;
reg   [31:0] grp_fu_1086_p0;
reg   [31:0] grp_fu_1086_p1;
wire    ap_CS_fsm_state125;
wire   [7:0] p_Result_s_fu_1242_p4;
wire   [22:0] trunc_ln270_fu_1256_p1;
wire   [30:0] trunc_ln262_fu_1230_p1;
wire   [8:0] exp_V_fu_1252_p1;
wire  signed [8:0] sh_amt_fu_1274_p2;
wire   [3:0] tmp_96_fu_1308_p4;
wire  signed [23:0] sext_ln281_fu_1280_p1;
wire   [0:0] icmp_ln282_fu_1284_p2;
wire   [0:0] xor_ln278_fu_1330_p2;
wire   [0:0] and_ln282_fu_1336_p2;
wire   [0:0] or_ln282_fu_1350_p2;
wire   [0:0] icmp_ln284_fu_1290_p2;
wire   [0:0] xor_ln282_fu_1356_p2;
wire   [0:0] and_ln285_fu_1368_p2;
wire   [23:0] lshr_ln286_fu_1324_p2;
wire   [23:0] select_ln282_fu_1342_p3;
wire   [0:0] or_ln284_fu_1382_p2;
wire   [0:0] icmp_ln295_fu_1318_p2;
wire   [0:0] xor_ln284_fu_1388_p2;
wire   [0:0] tmp_97_fu_1406_p3;
wire   [31:0] zext_ln283_fu_1400_p1;
wire  signed [31:0] sext_ln294_fu_1403_p1;
wire   [31:0] shl_ln297_fu_1421_p2;
wire   [31:0] zext_ln285_fu_1427_p1;
wire   [31:0] select_ln295_fu_1430_p3;
wire   [0:0] xor_ln285_fu_1444_p2;
wire   [0:0] and_ln285_3_fu_1449_p2;
wire   [31:0] select_ln288_fu_1413_p3;
wire   [31:0] select_ln278_fu_1437_p3;
wire   [31:0] select_ln285_3_fu_1454_p3;
wire   [31:0] sub_ln461_fu_1462_p2;
wire   [12:0] tmp_86_fu_1512_p3;
wire   [13:0] zext_ln215_fu_1520_p1;
wire   [13:0] add_ln215_fu_1524_p2;
wire  signed [31:0] mul_ln68_fu_1538_p0;
wire  signed [7:0] mul_ln68_fu_1538_p1;
wire  signed [31:0] mul_ln68_1_fu_1547_p0;
wire  signed [7:0] mul_ln68_1_fu_1547_p1;
wire   [12:0] tmp_88_fu_1586_p3;
wire   [13:0] zext_ln215_6_fu_1594_p1;
wire   [13:0] add_ln215_2_fu_1598_p2;
wire   [12:0] tmp_87_fu_1689_p3;
wire   [13:0] zext_ln215_4_fu_1697_p1;
wire   [13:0] add_ln215_1_fu_1701_p2;
wire   [31:0] grp_fu_1012_p2;
wire   [31:0] reg_V_1_fu_1723_p1;
wire   [7:0] p_Result_s_101_fu_1739_p4;
wire   [22:0] trunc_ln270_1_fu_1753_p1;
wire   [30:0] trunc_ln262_1_fu_1727_p1;
wire   [8:0] exp_V_1_fu_1749_p1;
wire  signed [8:0] sh_amt_4_fu_1771_p2;
wire   [23:0] tmp_70_fu_1757_p3;
wire  signed [8:0] sh_amt_5_fu_1803_p2;
wire   [3:0] tmp_99_fu_1813_p4;
wire  signed [23:0] sext_ln281_1_fu_1777_p1;
wire   [0:0] tmp_100_fu_1835_p3;
wire   [31:0] zext_ln283_1_fu_1787_p1;
wire  signed [31:0] sext_ln294_1_fu_1809_p1;
wire   [0:0] icmp_ln278_1_fu_1765_p2;
wire   [0:0] icmp_ln282_1_fu_1781_p2;
wire   [0:0] xor_ln278_1_fu_1857_p2;
wire   [0:0] and_ln282_1_fu_1863_p2;
wire   [0:0] or_ln282_1_fu_1877_p2;
wire   [0:0] icmp_ln284_1_fu_1791_p2;
wire   [0:0] xor_ln282_1_fu_1883_p2;
wire   [0:0] and_ln284_1_fu_1889_p2;
wire   [0:0] icmp_ln285_1_fu_1797_p2;
wire   [0:0] and_ln285_4_fu_1895_p2;
wire   [23:0] lshr_ln286_1_fu_1829_p2;
wire   [23:0] select_ln282_1_fu_1869_p3;
wire   [23:0] select_ln285_4_fu_1901_p3;
wire   [0:0] or_ln284_1_fu_1913_p2;
wire   [0:0] icmp_ln295_1_fu_1823_p2;
wire   [0:0] xor_ln284_1_fu_1919_p2;
wire   [0:0] and_ln295_1_fu_1925_p2;
wire   [31:0] shl_ln297_1_fu_1851_p2;
wire   [31:0] zext_ln285_1_fu_1909_p1;
wire   [31:0] select_ln295_1_fu_1931_p3;
wire   [0:0] xor_ln285_1_fu_1947_p2;
wire   [0:0] and_ln285_5_fu_1953_p2;
wire   [31:0] select_ln288_1_fu_1843_p3;
wire   [31:0] select_ln278_1_fu_1939_p3;
wire   [31:0] select_ln285_5_fu_1959_p3;
wire   [0:0] p_Result_35_fu_1731_p3;
wire   [31:0] sub_ln461_1_fu_1967_p2;
wire   [12:0] tmp_90_fu_1992_p3;
wire   [13:0] zext_ln215_8_fu_2000_p1;
wire   [13:0] add_ln215_3_fu_2004_p2;
wire   [31:0] bitcast_ln177_fu_2055_p1;
wire   [31:0] bitcast_ln177_1_fu_2073_p1;
wire   [7:0] tmp_296_fu_2059_p4;
wire   [22:0] trunc_ln177_fu_2069_p1;
wire   [0:0] icmp_ln177_1_fu_2097_p2;
wire   [0:0] icmp_ln177_fu_2091_p2;
wire   [7:0] tmp_297_fu_2077_p4;
wire   [22:0] trunc_ln177_1_fu_2087_p1;
wire   [31:0] bitcast_ln179_fu_2121_p1;
wire   [7:0] tmp_299_fu_2125_p4;
wire   [22:0] trunc_ln179_fu_2135_p1;
wire   [0:0] or_ln177_1_fu_2151_p2;
wire   [0:0] and_ln177_fu_2155_p2;
wire   [0:0] and_ln177_1_fu_2160_p2;
wire   [0:0] or_ln179_fu_2174_p2;
wire   [0:0] and_ln179_fu_2178_p2;
wire   [0:0] grp_fu_1091_p2;
wire   [0:0] and_ln179_1_fu_2183_p2;
wire   [31:0] bitcast_ln184_fu_2197_p1;
wire   [7:0] tmp_291_fu_2201_p4;
wire   [22:0] trunc_ln184_fu_2211_p1;
wire   [0:0] icmp_ln184_1_fu_2221_p2;
wire   [0:0] icmp_ln184_fu_2215_p2;
wire   [0:0] or_ln184_fu_2227_p2;
wire   [31:0] xor_ln185_fu_2238_p2;
wire   [0:0] and_ln184_fu_2233_p2;
wire   [31:0] tmp_min_fu_2244_p1;
wire   [31:0] bitcast_ln186_fu_2257_p1;
wire   [31:0] bitcast_ln186_1_fu_2275_p1;
wire   [7:0] tmp_293_fu_2261_p4;
wire   [22:0] trunc_ln186_fu_2271_p1;
wire   [0:0] icmp_ln186_1_fu_2298_p2;
wire   [0:0] icmp_ln186_fu_2292_p2;
wire   [7:0] tmp_294_fu_2278_p4;
wire   [22:0] trunc_ln186_1_fu_2288_p1;
wire   [0:0] icmp_ln186_3_fu_2316_p2;
wire   [0:0] icmp_ln186_2_fu_2310_p2;
wire   [0:0] or_ln186_fu_2304_p2;
wire   [0:0] or_ln186_1_fu_2322_p2;
wire   [0:0] and_ln186_fu_2328_p2;
wire   [0:0] and_ln186_1_fu_2334_p2;
wire   [31:0] bitcast_ln475_fu_2369_p1;
wire   [63:0] p_Val2_23_fu_2381_p1;
wire   [10:0] tmp_V_9_fu_2385_p4;
wire   [5:0] index_V_fu_2407_p4;
wire   [63:0] p_Result_38_fu_2438_p3;
wire   [63:0] zext_ln209_fu_2434_p1;
wire   [63:0] p_Val2_27_fu_2444_p2;
wire   [51:0] tmp_V_10_fu_2450_p1;
wire   [51:0] xor_ln1309_fu_2454_p2;
wire   [11:0] tmp_89_fu_2466_p4;
wire   [51:0] xs_sig_V_fu_2460_p2;
wire   [63:0] p_Result_37_fu_2427_p3;
wire   [63:0] p_Result_39_fu_2476_p3;
wire   [63:0] select_ln849_fu_2484_p3;
wire   [0:0] xor_ln849_fu_2495_p2;
wire   [0:0] and_ln849_fu_2500_p2;
wire   [7:0] p_Result_45_fu_2527_p4;
wire   [22:0] trunc_ln270_2_fu_2541_p1;
wire   [30:0] trunc_ln262_2_fu_2515_p1;
wire   [8:0] exp_V_2_fu_2537_p1;
wire  signed [8:0] sh_amt_6_fu_2563_p2;
wire   [5:0] tmp_103_fu_2597_p4;
wire   [23:0] tmp_74_fu_2549_p3;
wire  signed [23:0] sext_ln281_2_fu_2569_p1;
wire   [23:0] lshr_ln286_2_fu_2613_p2;
wire   [0:0] or_ln282_2_fu_2623_p2;
wire   [0:0] icmp_ln284_2_fu_2579_p2;
wire   [0:0] xor_ln282_2_fu_2629_p2;
wire   [0:0] and_ln285_6_fu_2641_p2;
wire   [7:0] trunc_ln286_fu_2619_p1;
wire   [0:0] or_ln284_2_fu_2655_p2;
wire   [0:0] icmp_ln295_2_fu_2607_p2;
wire   [0:0] xor_ln284_2_fu_2661_p2;
wire   [0:0] tmp_104_fu_2676_p3;
wire  signed [31:0] sext_ln294_2_fu_2673_p1;
wire   [7:0] sext_ln294_2cast_fu_2691_p1;
wire   [7:0] shl_ln297_2_fu_2695_p2;
wire   [7:0] select_ln295_2_fu_2700_p3;
wire   [0:0] xor_ln285_2_fu_2713_p2;
wire   [0:0] and_ln285_7_fu_2718_p2;
wire   [7:0] select_ln288_2_fu_2683_p3;
wire   [7:0] select_ln278_2_fu_2706_p3;
wire   [0:0] xor_ln278_2_fu_2731_p2;
wire   [0:0] and_ln282_2_fu_2736_p2;
wire   [7:0] select_ln285_7_fu_2723_p3;
wire   [7:0] select_ln282_2_fu_2741_p3;
wire   [7:0] sub_ln461_2_fu_2748_p2;
wire  signed [7:0] grp_fu_2771_p1;
wire  signed [15:0] rhs_V_fu_1557_p1;
wire  signed [7:0] grp_fu_2779_p0;
wire  signed [7:0] grp_fu_2787_p1;
wire  signed [15:0] rhs_V_2_fu_1619_p1;
wire  signed [7:0] grp_fu_2795_p0;
reg   [1:0] grp_fu_1004_opcode;
wire    ap_block_pp6_stage0_00001;
reg    grp_fu_1016_ce;
wire    ap_CS_fsm_state3;
wire    ap_CS_fsm_state4;
wire    ap_CS_fsm_state41;
wire    ap_CS_fsm_state42;
wire    ap_CS_fsm_state46;
wire    ap_CS_fsm_state47;
wire    ap_block_pp4_stage8_11001;
wire    ap_CS_fsm_state86;
wire    ap_CS_fsm_state87;
wire    ap_CS_fsm_state91;
wire    ap_CS_fsm_state92;
reg    grp_fu_1080_ce;
reg    grp_fu_1083_ce;
reg   [4:0] grp_fu_1086_opcode;
reg   [94:0] ap_NS_fsm;
wire    ap_block_pp4_stage1_subdone;
wire    ap_block_pp4_stage2_subdone;
wire    ap_block_pp4_stage3_subdone;
wire    ap_block_state62_pp4_stage4_iter0;
wire    ap_block_state71_pp4_stage4_iter1;
wire    ap_block_pp4_stage4_subdone;
wire    ap_block_state63_pp4_stage5_iter0;
wire    ap_block_state72_pp4_stage5_iter1;
wire    ap_block_pp4_stage5_subdone;
wire    ap_block_pp4_stage6_subdone;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
reg    ap_idle_pp1;
wire    ap_enable_pp1;
reg    ap_idle_pp2;
wire    ap_enable_pp2;
reg    ap_idle_pp3;
wire    ap_enable_pp3;
reg    ap_idle_pp4;
wire    ap_enable_pp4;
reg    ap_idle_pp5;
wire    ap_enable_pp5;
reg    ap_idle_pp6;
wire    ap_enable_pp6;
reg    ap_idle_pp7;
wire    ap_enable_pp7;
reg    ap_condition_1623;

// power-on initialization
initial begin
#0 ap_CS_fsm = 95'd1;
#0 gru_output_flag = 32'd0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp7_iter13 = 1'b0;
#0 ap_enable_reg_pp7_iter5 = 1'b0;
#0 ap_enable_reg_pp6_iter15 = 1'b0;
#0 ap_enable_reg_pp1_iter1 = 1'b0;
#0 ap_enable_reg_pp2_iter1 = 1'b0;
#0 ap_enable_reg_pp4_iter0 = 1'b0;
#0 ap_enable_reg_pp6_iter1 = 1'b0;
#0 ap_enable_reg_pp1_iter7 = 1'b0;
#0 ap_enable_reg_pp6_iter7 = 1'b0;
#0 ap_enable_reg_pp1_iter11 = 1'b0;
#0 ap_enable_reg_pp4_iter1 = 1'b0;
#0 ap_enable_reg_pp6_iter11 = 1'b0;
#0 ap_enable_reg_pp2_iter2 = 1'b0;
#0 ap_enable_reg_pp3_iter1 = 1'b0;
#0 ap_enable_reg_pp5_iter1 = 1'b0;
#0 ap_enable_reg_pp6_iter20 = 1'b0;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp1_iter0 = 1'b0;
#0 ap_enable_reg_pp2_iter0 = 1'b0;
#0 ap_enable_reg_pp2_iter3 = 1'b0;
#0 ap_enable_reg_pp3_iter0 = 1'b0;
#0 ap_enable_reg_pp3_iter2 = 1'b0;
#0 ap_enable_reg_pp5_iter0 = 1'b0;
#0 ap_enable_reg_pp5_iter2 = 1'b0;
#0 ap_enable_reg_pp6_iter0 = 1'b0;
#0 ap_enable_reg_pp6_iter6 = 1'b0;
#0 ap_enable_reg_pp6_iter22 = 1'b0;
#0 ap_enable_reg_pp7_iter0 = 1'b0;
#0 ap_enable_reg_pp7_iter1 = 1'b0;
#0 ap_enable_reg_pp1_iter2 = 1'b0;
#0 ap_enable_reg_pp1_iter3 = 1'b0;
#0 ap_enable_reg_pp1_iter4 = 1'b0;
#0 ap_enable_reg_pp1_iter5 = 1'b0;
#0 ap_enable_reg_pp1_iter6 = 1'b0;
#0 ap_enable_reg_pp1_iter8 = 1'b0;
#0 ap_enable_reg_pp1_iter9 = 1'b0;
#0 ap_enable_reg_pp1_iter10 = 1'b0;
#0 ap_enable_reg_pp1_iter12 = 1'b0;
#0 ap_enable_reg_pp1_iter13 = 1'b0;
#0 ap_enable_reg_pp1_iter14 = 1'b0;
#0 ap_enable_reg_pp6_iter2 = 1'b0;
#0 ap_enable_reg_pp6_iter3 = 1'b0;
#0 ap_enable_reg_pp6_iter4 = 1'b0;
#0 ap_enable_reg_pp6_iter5 = 1'b0;
#0 ap_enable_reg_pp6_iter8 = 1'b0;
#0 ap_enable_reg_pp6_iter9 = 1'b0;
#0 ap_enable_reg_pp6_iter10 = 1'b0;
#0 ap_enable_reg_pp6_iter12 = 1'b0;
#0 ap_enable_reg_pp6_iter13 = 1'b0;
#0 ap_enable_reg_pp6_iter14 = 1'b0;
#0 ap_enable_reg_pp6_iter16 = 1'b0;
#0 ap_enable_reg_pp6_iter17 = 1'b0;
#0 ap_enable_reg_pp6_iter18 = 1'b0;
#0 ap_enable_reg_pp6_iter19 = 1'b0;
#0 ap_enable_reg_pp6_iter21 = 1'b0;
#0 ap_enable_reg_pp7_iter2 = 1'b0;
#0 ap_enable_reg_pp7_iter3 = 1'b0;
#0 ap_enable_reg_pp7_iter4 = 1'b0;
#0 ap_enable_reg_pp7_iter6 = 1'b0;
#0 ap_enable_reg_pp7_iter7 = 1'b0;
#0 ap_enable_reg_pp7_iter8 = 1'b0;
#0 ap_enable_reg_pp7_iter9 = 1'b0;
#0 ap_enable_reg_pp7_iter10 = 1'b0;
#0 ap_enable_reg_pp7_iter11 = 1'b0;
#0 ap_enable_reg_pp7_iter12 = 1'b0;
#0 grp_mysigmoid_fu_986_ap_start_reg = 1'b0;
#0 grp_mysigmoid_fu_992_ap_start_reg = 1'b0;
#0 grp_mytanh_fu_998_ap_start_reg = 1'b0;
end

grucell_x_V_2 #(
    .DataWidth( 8 ),
    .AddressRange( 96 ),
    .AddressWidth( 7 ))
x_V_2_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(x_V_2_address0),
    .ce0(x_V_2_ce0),
    .we0(x_V_2_we0),
    .d0(in_stream_V_V_dout),
    .q0(x_V_2_q0)
);

grucell_state_1_V #(
    .DataWidth( 32 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
state_1_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(state_1_V_address0),
    .ce0(state_1_V_ce0),
    .q0(state_1_V_q0),
    .address1(state_1_V_address1),
    .ce1(state_1_V_ce1),
    .we1(state_1_V_we1),
    .d1(state_1_V_d1),
    .q1(state_1_V_q1)
);

grucell_zz #(
    .DataWidth( 32 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
zz_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(zz_address0),
    .ce0(zz_ce0),
    .we0(zz_we0),
    .d0(tmp_266_reg_3183),
    .q0(zz_q0)
);

grucell_zz #(
    .DataWidth( 32 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
rr_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(rr_address0),
    .ce0(rr_ce0),
    .we0(rr_we0),
    .d0(tmp_273_reg_3188),
    .q0(rr_q0)
);

grucell_zz #(
    .DataWidth( 32 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
hh_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(hh_address0),
    .ce0(hh_ce0),
    .we0(hh_we0),
    .d0(tmp_281_reg_3328),
    .q0(hh_q0)
);

grucell_zz #(
    .DataWidth( 32 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
state_tmp_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(state_tmp_address0),
    .ce0(state_tmp_ce0),
    .we0(state_tmp_we0),
    .d0(reg_1175),
    .q0(state_tmp_q0)
);

dw_layer1_mask_taIfE #(
    .DataWidth( 52 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
mask_table2_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(mask_table2_address0),
    .ce0(mask_table2_ce0),
    .q0(mask_table2_q0)
);

dw_layer1_one_halJfO #(
    .DataWidth( 53 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
one_half_table3_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(one_half_table3_address0),
    .ce0(one_half_table3_ce0),
    .q0(one_half_table3_q0)
);

mysigmoid grp_mysigmoid_fu_986(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_mysigmoid_fu_986_ap_start),
    .ap_done(grp_mysigmoid_fu_986_ap_done),
    .ap_idle(grp_mysigmoid_fu_986_ap_idle),
    .ap_ready(grp_mysigmoid_fu_986_ap_ready),
    .in_var(reg_1167),
    .scale(reg_1099),
    .ap_return(grp_mysigmoid_fu_986_ap_return)
);

mysigmoid grp_mysigmoid_fu_992(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_mysigmoid_fu_992_ap_start),
    .ap_done(grp_mysigmoid_fu_992_ap_done),
    .ap_idle(grp_mysigmoid_fu_992_ap_idle),
    .ap_ready(grp_mysigmoid_fu_992_ap_ready),
    .in_var(reg_1175),
    .scale(reg_1106),
    .ap_return(grp_mysigmoid_fu_992_ap_return)
);

mytanh grp_mytanh_fu_998(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_mytanh_fu_998_ap_start),
    .ap_done(grp_mytanh_fu_998_ap_done),
    .ap_idle(grp_mytanh_fu_998_ap_idle),
    .ap_ready(grp_mytanh_fu_998_ap_ready),
    .in_var(reg_1167),
    .scale(reg_1112),
    .ap_return(grp_mytanh_fu_998_ap_return)
);

kws_faddfsub_32nscud #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
kws_faddfsub_32nscud_U287(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1004_p0),
    .din1(grp_fu_1004_p1),
    .opcode(grp_fu_1004_opcode),
    .ce(1'b1),
    .dout(grp_fu_1004_p2)
);

kws_fadd_32ns_32nwdI #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
kws_fadd_32ns_32nwdI_U288(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1008_p0),
    .din1(grp_fu_1008_p1),
    .ce(1'b1),
    .dout(grp_fu_1008_p2)
);

kws_fadd_32ns_32nThq #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
kws_fadd_32ns_32nThq_U289(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1068_p1),
    .din1(grp_fu_1016_p2),
    .ce(1'b1),
    .dout(grp_fu_1012_p2)
);

kws_fmul_32ns_32neOg #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
kws_fmul_32ns_32neOg_U290(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1016_p0),
    .din1(grp_fu_1016_p1),
    .ce(grp_fu_1016_ce),
    .dout(grp_fu_1016_p2)
);

kws_fmul_32ns_32neOg #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
kws_fmul_32ns_32neOg_U291(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1021_p0),
    .din1(grp_fu_1021_p1),
    .ce(1'b1),
    .dout(grp_fu_1021_p2)
);

kws_fmul_32ns_32neOg #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
kws_fmul_32ns_32neOg_U292(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1026_p0),
    .din1(grp_fu_1026_p1),
    .ce(1'b1),
    .dout(grp_fu_1026_p2)
);

kws_fmul_32ns_32neOg #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
kws_fmul_32ns_32neOg_U293(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_105_reg_2819),
    .din1(tmp_scale_gru1),
    .ce(1'b1),
    .dout(grp_fu_1031_p2)
);

kws_fmul_32ns_32neOg #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
kws_fmul_32ns_32neOg_U294(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_105_reg_2819),
    .din1(tmp_scale_gru2),
    .ce(1'b1),
    .dout(grp_fu_1036_p2)
);

kws_fmul_32ns_32neOg #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
kws_fmul_32ns_32neOg_U295(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_105_reg_2819),
    .din1(tmp_scale_gru3),
    .ce(1'b1),
    .dout(grp_fu_1041_p2)
);

kws_fmul_32ns_32neOg #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
kws_fmul_32ns_32neOg_U296(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_105_reg_2819),
    .din1(tmp_scale_gru4),
    .ce(1'b1),
    .dout(grp_fu_1046_p2)
);

kws_fmul_32ns_32neOg #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
kws_fmul_32ns_32neOg_U297(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_105_reg_2819),
    .din1(tmp_scale_gru6),
    .ce(1'b1),
    .dout(grp_fu_1051_p2)
);

kws_fmul_32ns_32neOg #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
kws_fmul_32ns_32neOg_U298(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_105_reg_2819),
    .din1(tmp_scale_gru7),
    .ce(1'b1),
    .dout(grp_fu_1056_p2)
);

kws_fdiv_32ns_32nGfk #(
    .ID( 1 ),
    .NUM_STAGE( 16 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
kws_fdiv_32ns_32nGfk_U299(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(32'd1123942400),
    .din1(select_ln186_reg_3423),
    .ce(1'b1),
    .dout(grp_fu_1063_p2)
);

kws_sitofp_32ns_3KfY #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
kws_sitofp_32ns_3KfY_U300(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1068_p0),
    .ce(1'b1),
    .dout(grp_fu_1068_p1)
);

kws_sitofp_32ns_3KfY #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
kws_sitofp_32ns_3KfY_U301(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1072_p0),
    .ce(1'b1),
    .dout(grp_fu_1072_p1)
);

kws_fptrunc_64ns_Aem #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 64 ),
    .dout_WIDTH( 32 ))
kws_fptrunc_64ns_Aem_U302(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1080_p0),
    .ce(grp_fu_1080_ce),
    .dout(grp_fu_1080_p1)
);

kws_fpext_32ns_64Bew #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
kws_fpext_32ns_64Bew_U303(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(reg_1099),
    .ce(grp_fu_1083_ce),
    .dout(grp_fu_1083_p1)
);

kws_fcmp_32ns_32nHfu #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
kws_fcmp_32ns_32nHfu_U304(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1086_p0),
    .din1(grp_fu_1086_p1),
    .ce(1'b1),
    .opcode(grp_fu_1086_opcode),
    .dout(grp_fu_1086_p2)
);

kws_fcmp_32ns_32nHfu #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
kws_fcmp_32ns_32nHfu_U305(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(reg_1175),
    .din1(ap_phi_mux_tmp_min_0_phi_fu_945_p4),
    .ce(1'b1),
    .opcode(5'd4),
    .dout(grp_fu_1091_p2)
);

kws_mac_muladd_8sUhA #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 22 ),
    .dout_WIDTH( 22 ))
kws_mac_muladd_8sUhA_U306(
    .din0(reg_1138),
    .din1(grp_fu_2771_p1),
    .din2(tmp_ze_V_reg_769),
    .dout(grp_fu_2771_p3)
);

kws_mac_muladd_8sUhA #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 22 ),
    .dout_WIDTH( 22 ))
kws_mac_muladd_8sUhA_U307(
    .din0(grp_fu_2779_p0),
    .din1(reg_1146),
    .din2(tmp_re_V_reg_781),
    .dout(grp_fu_2779_p3)
);

kws_mac_muladd_8sVhK #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 22 ),
    .dout_WIDTH( 22 ))
kws_mac_muladd_8sVhK_U308(
    .din0(reg_1138),
    .din1(grp_fu_2787_p1),
    .din2(p_0322_0_reg_828),
    .dout(grp_fu_2787_p3)
);

kws_mac_muladd_8sVhK #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 22 ),
    .dout_WIDTH( 22 ))
kws_mac_muladd_8sVhK_U309(
    .din0(grp_fu_2795_p0),
    .din1(reg_1146),
    .din2(p_0406_0_reg_839),
    .dout(grp_fu_2795_p3)
);

kws_mac_muladd_8sUhA #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 22 ),
    .dout_WIDTH( 22 ))
kws_mac_muladd_8sUhA_U310(
    .din0(reg_1184),
    .din1(reg_1142),
    .din2(tmp_he_V_reg_872),
    .dout(grp_fu_2803_p3)
);

kws_mac_muladd_8sVhK #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 22 ),
    .dout_WIDTH( 22 ))
kws_mac_muladd_8sVhK_U311(
    .din0(reg_1184),
    .din1(reg_1142),
    .din2(p_0510_0_reg_907),
    .dout(grp_fu_2811_p3)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_condition_pp0_exit_iter0_state6) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state5)) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_pp0_exit_iter0_state6) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_enable_reg_pp0_iter1 <= (1'b1 ^ ap_condition_pp0_exit_iter0_state6);
        end else if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end else if ((1'b1 == ap_CS_fsm_state5)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b1 == ap_condition_pp1_exit_iter0_state9) & (1'b0 == ap_block_pp1_stage0_subdone))) begin
            ap_enable_reg_pp1_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state8)) begin
            ap_enable_reg_pp1_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp1_exit_iter0_state9)) begin
                ap_enable_reg_pp1_iter1 <= (1'b1 ^ ap_condition_pp1_exit_iter0_state9);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp1_iter1 <= ap_enable_reg_pp1_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter10 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter10 <= ap_enable_reg_pp1_iter9;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter11 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter11 <= ap_enable_reg_pp1_iter10;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter12 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter12 <= ap_enable_reg_pp1_iter11;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter13 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter13 <= ap_enable_reg_pp1_iter12;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter14 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter14 <= ap_enable_reg_pp1_iter13;
        end else if ((1'b1 == ap_CS_fsm_state8)) begin
            ap_enable_reg_pp1_iter14 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter2 <= ap_enable_reg_pp1_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter3 <= ap_enable_reg_pp1_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter4 <= ap_enable_reg_pp1_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter5 <= ap_enable_reg_pp1_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter6 <= ap_enable_reg_pp1_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter7 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter7 <= ap_enable_reg_pp1_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter8 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter8 <= ap_enable_reg_pp1_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter9 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter9 <= ap_enable_reg_pp1_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp2_stage0) & (1'b1 == ap_condition_pp2_exit_iter0_state26) & (1'b0 == ap_block_pp2_stage0_subdone))) begin
            ap_enable_reg_pp2_iter0 <= 1'b0;
        end else if (((icmp_ln111_fu_1475_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state25))) begin
            ap_enable_reg_pp2_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp2_exit_iter0_state26)) begin
                ap_enable_reg_pp2_iter1 <= (1'b1 ^ ap_condition_pp2_exit_iter0_state26);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp2_iter1 <= ap_enable_reg_pp2_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter2 <= ap_enable_reg_pp2_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter3 <= ap_enable_reg_pp2_iter2;
        end else if (((icmp_ln111_fu_1475_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state25))) begin
            ap_enable_reg_pp2_iter3 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp3_stage0) & (1'b1 == ap_condition_pp3_exit_iter0_state31) & (1'b0 == ap_block_pp3_stage0_subdone))) begin
            ap_enable_reg_pp3_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state30)) begin
            ap_enable_reg_pp3_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp3_exit_iter0_state31)) begin
                ap_enable_reg_pp3_iter1 <= (1'b1 ^ ap_condition_pp3_exit_iter0_state31);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp3_iter1 <= ap_enable_reg_pp3_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            ap_enable_reg_pp3_iter2 <= ap_enable_reg_pp3_iter1;
        end else if ((1'b1 == ap_CS_fsm_state30)) begin
            ap_enable_reg_pp3_iter2 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp4_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp4_stage0) & (1'b1 == ap_condition_pp4_exit_iter0_state58) & (1'b0 == ap_block_pp4_stage0_subdone))) begin
            ap_enable_reg_pp4_iter0 <= 1'b0;
        end else if (((icmp_ln145_fu_1646_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state57))) begin
            ap_enable_reg_pp4_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp4_iter1 <= 1'b0;
    end else begin
        if ((((1'b1 == ap_CS_fsm_pp4_stage7) & (1'b0 == ap_block_pp4_stage7_subdone)) | ((1'b1 == ap_CS_fsm_pp4_stage8) & (1'b0 == ap_block_pp4_stage8_subdone)))) begin
            ap_enable_reg_pp4_iter1 <= ap_enable_reg_pp4_iter0;
        end else if (((icmp_ln145_fu_1646_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state57))) begin
            ap_enable_reg_pp4_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp5_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp5_stage0) & (1'b1 == ap_condition_pp5_exit_iter0_state76) & (1'b0 == ap_block_pp5_stage0_subdone))) begin
            ap_enable_reg_pp5_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state75)) begin
            ap_enable_reg_pp5_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp5_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp5_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp5_exit_iter0_state76)) begin
                ap_enable_reg_pp5_iter1 <= (1'b1 ^ ap_condition_pp5_exit_iter0_state76);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp5_iter1 <= ap_enable_reg_pp5_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp5_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp5_stage0_subdone)) begin
            ap_enable_reg_pp5_iter2 <= ap_enable_reg_pp5_iter1;
        end else if ((1'b1 == ap_CS_fsm_state75)) begin
            ap_enable_reg_pp5_iter2 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp6_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp6_stage0) & (1'b1 == ap_condition_pp6_exit_iter0_state102) & (1'b0 == ap_block_pp6_stage0_subdone))) begin
            ap_enable_reg_pp6_iter0 <= 1'b0;
        end else if (((icmp_ln145_fu_1646_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state57))) begin
            ap_enable_reg_pp6_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp6_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp6_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp6_exit_iter0_state102)) begin
                ap_enable_reg_pp6_iter1 <= (1'b1 ^ ap_condition_pp6_exit_iter0_state102);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp6_iter1 <= ap_enable_reg_pp6_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp6_iter10 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp6_stage0_subdone)) begin
            ap_enable_reg_pp6_iter10 <= ap_enable_reg_pp6_iter9;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp6_iter11 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp6_stage0_subdone)) begin
            ap_enable_reg_pp6_iter11 <= ap_enable_reg_pp6_iter10;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp6_iter12 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp6_stage0_subdone)) begin
            ap_enable_reg_pp6_iter12 <= ap_enable_reg_pp6_iter11;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp6_iter13 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp6_stage0_subdone)) begin
            ap_enable_reg_pp6_iter13 <= ap_enable_reg_pp6_iter12;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp6_iter14 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp6_stage0_subdone)) begin
            ap_enable_reg_pp6_iter14 <= ap_enable_reg_pp6_iter13;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp6_iter15 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp6_stage0_subdone)) begin
            ap_enable_reg_pp6_iter15 <= ap_enable_reg_pp6_iter14;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp6_iter16 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp6_stage0_subdone)) begin
            ap_enable_reg_pp6_iter16 <= ap_enable_reg_pp6_iter15;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp6_iter17 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp6_stage0_subdone)) begin
            ap_enable_reg_pp6_iter17 <= ap_enable_reg_pp6_iter16;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp6_iter18 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp6_stage0_subdone)) begin
            ap_enable_reg_pp6_iter18 <= ap_enable_reg_pp6_iter17;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp6_iter19 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp6_stage0_subdone)) begin
            ap_enable_reg_pp6_iter19 <= ap_enable_reg_pp6_iter18;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp6_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp6_stage0_subdone)) begin
            ap_enable_reg_pp6_iter2 <= ap_enable_reg_pp6_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp6_iter20 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp6_stage0_subdone)) begin
            ap_enable_reg_pp6_iter20 <= ap_enable_reg_pp6_iter19;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp6_iter21 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp6_stage0_subdone)) begin
            ap_enable_reg_pp6_iter21 <= ap_enable_reg_pp6_iter20;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp6_iter22 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp6_stage0_subdone)) begin
            ap_enable_reg_pp6_iter22 <= ap_enable_reg_pp6_iter21;
        end else if (((icmp_ln145_fu_1646_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state57))) begin
            ap_enable_reg_pp6_iter22 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp6_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp6_stage0_subdone)) begin
            ap_enable_reg_pp6_iter3 <= ap_enable_reg_pp6_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp6_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp6_stage0_subdone)) begin
            ap_enable_reg_pp6_iter4 <= ap_enable_reg_pp6_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp6_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp6_stage0_subdone)) begin
            ap_enable_reg_pp6_iter5 <= ap_enable_reg_pp6_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp6_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp6_stage0_subdone)) begin
            ap_enable_reg_pp6_iter6 <= ap_enable_reg_pp6_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp6_iter7 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp6_stage0_subdone)) begin
            ap_enable_reg_pp6_iter7 <= ap_enable_reg_pp6_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp6_iter8 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp6_stage0_subdone)) begin
            ap_enable_reg_pp6_iter8 <= ap_enable_reg_pp6_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp6_iter9 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp6_stage0_subdone)) begin
            ap_enable_reg_pp6_iter9 <= ap_enable_reg_pp6_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp7_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_pp7_exit_iter0_state145) & (1'b1 == ap_CS_fsm_pp7_stage0) & (1'b0 == ap_block_pp7_stage0_subdone))) begin
            ap_enable_reg_pp7_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state144)) begin
            ap_enable_reg_pp7_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp7_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp7_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp7_exit_iter0_state145)) begin
                ap_enable_reg_pp7_iter1 <= (1'b1 ^ ap_condition_pp7_exit_iter0_state145);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp7_iter1 <= ap_enable_reg_pp7_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp7_iter10 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp7_stage0_subdone)) begin
            ap_enable_reg_pp7_iter10 <= ap_enable_reg_pp7_iter9;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp7_iter11 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp7_stage0_subdone)) begin
            ap_enable_reg_pp7_iter11 <= ap_enable_reg_pp7_iter10;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp7_iter12 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp7_stage0_subdone)) begin
            ap_enable_reg_pp7_iter12 <= ap_enable_reg_pp7_iter11;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp7_iter13 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp7_stage0_subdone)) begin
            ap_enable_reg_pp7_iter13 <= ap_enable_reg_pp7_iter12;
        end else if ((1'b1 == ap_CS_fsm_state144)) begin
            ap_enable_reg_pp7_iter13 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp7_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp7_stage0_subdone)) begin
            ap_enable_reg_pp7_iter2 <= ap_enable_reg_pp7_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp7_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp7_stage0_subdone)) begin
            ap_enable_reg_pp7_iter3 <= ap_enable_reg_pp7_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp7_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp7_stage0_subdone)) begin
            ap_enable_reg_pp7_iter4 <= ap_enable_reg_pp7_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp7_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp7_stage0_subdone)) begin
            ap_enable_reg_pp7_iter5 <= ap_enable_reg_pp7_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp7_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp7_stage0_subdone)) begin
            ap_enable_reg_pp7_iter6 <= ap_enable_reg_pp7_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp7_iter7 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp7_stage0_subdone)) begin
            ap_enable_reg_pp7_iter7 <= ap_enable_reg_pp7_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp7_iter8 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp7_stage0_subdone)) begin
            ap_enable_reg_pp7_iter8 <= ap_enable_reg_pp7_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp7_iter9 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp7_stage0_subdone)) begin
            ap_enable_reg_pp7_iter9 <= ap_enable_reg_pp7_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_mysigmoid_fu_986_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state54)) begin
            grp_mysigmoid_fu_986_ap_start_reg <= 1'b1;
        end else if ((grp_mysigmoid_fu_986_ap_ready == 1'b1)) begin
            grp_mysigmoid_fu_986_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_mysigmoid_fu_992_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state54)) begin
            grp_mysigmoid_fu_992_ap_start_reg <= 1'b1;
        end else if ((grp_mysigmoid_fu_992_ap_ready == 1'b1)) begin
            grp_mysigmoid_fu_992_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_mytanh_fu_998_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state99)) begin
            grp_mytanh_fu_998_ap_start_reg <= 1'b1;
        end else if ((grp_mytanh_fu_998_ap_ready == 1'b1)) begin
            grp_mytanh_fu_998_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_1623)) begin
        if ((icmp_ln201_reg_3433 == 1'd0)) begin
            gru_output_flag_new_1_reg_975 <= add_ln173_reg_3214;
        end else if ((icmp_ln201_reg_3433 == 1'd1)) begin
            gru_output_flag_new_1_reg_975 <= 32'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp7_stage0_11001) & (icmp_ln197_fu_2352_p2 == 1'd0) & (ap_enable_reg_pp7_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp7_stage0))) begin
        h_0_reg_964 <= h_fu_2358_p2;
    end else if ((1'b1 == ap_CS_fsm_state144)) begin
        h_0_reg_964 <= 7'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state24)) begin
        i1_0_reg_758 <= 7'd0;
    end else if ((1'b1 == ap_CS_fsm_state56)) begin
        i1_0_reg_758 <= i_30_reg_3000;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln111_fu_1475_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state25))) begin
        i3_0_reg_861 <= 7'd0;
    end else if ((1'b1 == ap_CS_fsm_state101)) begin
        i3_0_reg_861 <= i_31_reg_3197;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln145_fu_1646_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state57))) begin
        i6_0_reg_953 <= 7'd0;
    end else if (((1'b0 == ap_block_pp6_stage0_11001) & (icmp_ln173_fu_2038_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp6_stage0) & (ap_enable_reg_pp6_iter0 == 1'b1))) begin
        i6_0_reg_953 <= i_fu_2044_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        i_0_reg_747 <= 7'd0;
    end else if (((1'b0 == ap_block_pp1_stage0_11001) & (icmp_ln100_fu_1209_p2 == 1'd0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        i_0_reg_747 <= i_29_fu_1215_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (icmp_ln118_fu_1495_p2 == 1'd0) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        j2_0_reg_817 <= j_11_fu_1501_p2;
    end else if (((icmp_ln111_fu_1475_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state25))) begin
        j2_0_reg_817 <= 7'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state75)) begin
        j5_0_reg_918 <= 7'd64;
    end else if (((1'b0 == ap_block_pp5_stage0_11001) & (icmp_ln159_fu_1981_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp5_stage0) & (ap_enable_reg_pp5_iter0 == 1'b1))) begin
        j5_0_reg_918 <= j_12_fu_2014_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln93_reg_2922 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        j_0_reg_735 <= j_reg_2926;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        j_0_reg_735 <= 7'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp4_stage0_11001) & (icmp_ln150_reg_3220 == 1'd0) & (ap_enable_reg_pp4_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage0))) begin
        k4_0_reg_896 <= k_1_reg_3224;
    end else if (((icmp_ln145_fu_1646_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state57))) begin
        k4_0_reg_896 <= 7'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state30)) begin
        k_0_reg_850 <= 7'd64;
    end else if (((1'b0 == ap_block_pp3_stage0_11001) & (icmp_ln132_fu_1575_p2 == 1'd0) & (ap_enable_reg_pp3_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        k_0_reg_850 <= k_fu_1609_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (icmp_ln118_reg_3019_pp2_iter2_reg == 1'd0) & (ap_enable_reg_pp2_iter3 == 1'b1))) begin
        p_0174_0_reg_793 <= tmp_zw_V_fu_1565_p2;
    end else if (((icmp_ln111_fu_1475_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state25))) begin
        p_0174_0_reg_793 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state30)) begin
        p_0322_0_reg_828 <= tmp_ze_V_reg_769;
    end else if (((1'b0 == ap_block_pp3_stage0_11001) & (icmp_ln132_reg_3109_pp3_iter1_reg == 1'd0) & (ap_enable_reg_pp3_iter2 == 1'b1))) begin
        p_0322_0_reg_828 <= grp_fu_2787_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (icmp_ln118_reg_3019_pp2_iter2_reg == 1'd0) & (ap_enable_reg_pp2_iter3 == 1'b1))) begin
        p_0326_0_reg_805 <= tmp_rw_V_fu_1570_p2;
    end else if (((icmp_ln111_fu_1475_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state25))) begin
        p_0326_0_reg_805 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp4_stage7_11001) & (icmp_ln150_reg_3220_pp4_iter1_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp4_stage7) & (ap_enable_reg_pp4_iter1 == 1'b1))) begin
        p_0387_0_reg_884 <= tmp_hw_V_fu_1973_p3;
    end else if (((icmp_ln145_fu_1646_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state57))) begin
        p_0387_0_reg_884 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state30)) begin
        p_0406_0_reg_839 <= tmp_re_V_reg_781;
    end else if (((1'b0 == ap_block_pp3_stage0_11001) & (icmp_ln132_reg_3109_pp3_iter1_reg == 1'd0) & (ap_enable_reg_pp3_iter2 == 1'b1))) begin
        p_0406_0_reg_839 <= grp_fu_2795_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state75)) begin
        p_0510_0_reg_907 <= tmp_he_V_reg_872;
    end else if (((1'b0 == ap_block_pp5_stage0_11001) & (icmp_ln159_reg_3289_pp5_iter1_reg == 1'd0) & (ap_enable_reg_pp5_iter2 == 1'b1))) begin
        p_0510_0_reg_907 <= grp_fu_2811_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln145_fu_1646_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state57))) begin
        phi_ln187_reg_929 <= 32'd0;
    end else if (((1'b0 == ap_block_pp6_stage0_11001) & (icmp_ln173_reg_3333_pp6_iter21_reg == 1'd0) & (ap_enable_reg_pp6_iter22 == 1'b1))) begin
        phi_ln187_reg_929 <= tmp_min_7_fu_2166_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp4_stage1_11001) & (icmp_ln150_reg_3220 == 1'd0) & (ap_enable_reg_pp4_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage1))) begin
        reg_1118 <= state_1_V_q1;
    end else if ((((1'b0 == ap_block_pp2_stage0_11001) & (icmp_ln118_reg_3019 == 1'd0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0)) | ((1'b0 == ap_block_pp1_stage0_11001) & (icmp_ln100_reg_2931 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((1'b0 == ap_block_pp6_stage0_11001) & (icmp_ln173_reg_3333 == 1'd0) & (ap_enable_reg_pp6_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp6_stage0)))) begin
        reg_1118 <= state_1_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp4_stage7_11001) & (icmp_ln150_reg_3220_pp4_iter1_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp4_stage7) & (ap_enable_reg_pp4_iter1 == 1'b1))) begin
        tmp_he_V_reg_872 <= tmp_hu_V_reg_3279;
    end else if (((icmp_ln145_fu_1646_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state57))) begin
        tmp_he_V_reg_872 <= 22'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln145_fu_1646_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state57))) begin
        tmp_min_0_reg_941 <= 32'd0;
    end else if (((1'b0 == ap_block_pp6_stage0_11001) & (icmp_ln173_reg_3333_pp6_iter21_reg == 1'd0) & (ap_enable_reg_pp6_iter22 == 1'b1))) begin
        tmp_min_0_reg_941 <= tmp_min_9_fu_2189_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (icmp_ln118_reg_3019_pp2_iter2_reg == 1'd0) & (ap_enable_reg_pp2_iter3 == 1'b1))) begin
        tmp_re_V_reg_781 <= grp_fu_2779_p3;
    end else if (((icmp_ln111_fu_1475_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state25))) begin
        tmp_re_V_reg_781 <= 22'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (icmp_ln118_reg_3019_pp2_iter2_reg == 1'd0) & (ap_enable_reg_pp2_iter3 == 1'b1))) begin
        tmp_ze_V_reg_769 <= grp_fu_2771_p3;
    end else if (((icmp_ln111_fu_1475_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state25))) begin
        tmp_ze_V_reg_769 <= 22'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln145_fu_1646_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state57))) begin
        add_ln173_reg_3214 <= add_ln173_fu_1666_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp7_stage0_11001)) begin
        and_ln284_2_reg_3550 <= and_ln284_2_fu_2635_p2;
        and_ln295_2_reg_3560 <= and_ln295_2_fu_2667_p2;
        bitcast_ln849_reg_3498 <= bitcast_ln849_fu_2491_p1;
        icmp_ln278_2_reg_3529 <= icmp_ln278_2_fu_2557_p2;
        icmp_ln282_2_reg_3535 <= icmp_ln282_2_fu_2573_p2;
        icmp_ln285_2_reg_3540 <= icmp_ln285_2_fu_2585_p2;
        icmp_ln849_2_reg_3478 <= icmp_ln849_2_fu_2401_p2;
        icmp_ln849_2_reg_3478_pp7_iter8_reg <= icmp_ln849_2_reg_3478;
        icmp_ln849_reg_3472 <= icmp_ln849_fu_2395_p2;
        icmp_ln849_reg_3472_pp7_iter8_reg <= icmp_ln849_reg_3472;
        outprepare_V_reg_3565 <= outprepare_V_fu_2754_p3;
        outprepare_tmp_reg_3508 <= grp_fu_1080_p1;
        p_Result_36_reg_3461 <= bitcast_ln475_fu_2369_p1[32'd31];
        p_Result_36_reg_3461_pp7_iter7_reg <= p_Result_36_reg_3461;
        p_Result_40_reg_3518 <= reg_V_2_fu_2512_p1[32'd31];
        reg_V_2_reg_3513 <= reg_V_2_fu_2512_p1;
        select_ln285_6_reg_3555 <= select_ln285_6_fu_2647_p3;
        sh_amt_7_reg_3545 <= sh_amt_7_fu_2591_p2;
        trunc_ln283_reg_3523 <= trunc_ln283_fu_2545_p1;
        trunc_ln368_reg_3493 <= trunc_ln368_fu_2423_p1;
        x_assign_reg_3467 <= grp_fu_1083_p1;
        x_assign_reg_3467_pp7_iter8_reg <= x_assign_reg_3467;
        zext_ln199_reg_3446_pp7_iter10_reg[6 : 0] <= zext_ln199_reg_3446_pp7_iter9_reg[6 : 0];
        zext_ln199_reg_3446_pp7_iter11_reg[6 : 0] <= zext_ln199_reg_3446_pp7_iter10_reg[6 : 0];
        zext_ln199_reg_3446_pp7_iter12_reg[6 : 0] <= zext_ln199_reg_3446_pp7_iter11_reg[6 : 0];
        zext_ln199_reg_3446_pp7_iter2_reg[6 : 0] <= zext_ln199_reg_3446_pp7_iter1_reg[6 : 0];
        zext_ln199_reg_3446_pp7_iter3_reg[6 : 0] <= zext_ln199_reg_3446_pp7_iter2_reg[6 : 0];
        zext_ln199_reg_3446_pp7_iter4_reg[6 : 0] <= zext_ln199_reg_3446_pp7_iter3_reg[6 : 0];
        zext_ln199_reg_3446_pp7_iter5_reg[6 : 0] <= zext_ln199_reg_3446_pp7_iter4_reg[6 : 0];
        zext_ln199_reg_3446_pp7_iter6_reg[6 : 0] <= zext_ln199_reg_3446_pp7_iter5_reg[6 : 0];
        zext_ln199_reg_3446_pp7_iter7_reg[6 : 0] <= zext_ln199_reg_3446_pp7_iter6_reg[6 : 0];
        zext_ln199_reg_3446_pp7_iter8_reg[6 : 0] <= zext_ln199_reg_3446_pp7_iter7_reg[6 : 0];
        zext_ln199_reg_3446_pp7_iter9_reg[6 : 0] <= zext_ln199_reg_3446_pp7_iter8_reg[6 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (icmp_ln100_reg_2931_pp1_iter11_reg == 1'd0))) begin
        and_ln284_reg_2976 <= and_ln284_fu_1362_p2;
        and_ln295_reg_2986 <= and_ln295_fu_1394_p2;
        icmp_ln278_reg_2961 <= icmp_ln278_fu_1268_p2;
        icmp_ln285_reg_2966 <= icmp_ln285_fu_1296_p2;
        p_Result_34_reg_2951 <= reg_V_fu_1226_p1[32'd31];
        reg_V_reg_2946 <= reg_V_fu_1226_p1;
        select_ln285_reg_2981 <= select_ln285_fu_1374_p3;
        sh_amt_3_reg_2971 <= sh_amt_3_fu_1302_p2;
        tmp_64_reg_2956[22 : 0] <= tmp_64_fu_1260_p3[22 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state38)) begin
        bias_r_V_load_reg_3163 <= bias_r_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state160)) begin
        gru_output_flag <= gru_output_flag_new_1_reg_975;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        gru_output_flag_load_reg_2917 <= gru_output_flag;
        tmp_scale3_reg_2887 <= grp_fu_1031_p2;
        tmp_scale4_reg_2892 <= grp_fu_1036_p2;
        tmp_scale5_reg_2897 <= grp_fu_1041_p2;
        tmp_scale6_reg_2902 <= grp_fu_1046_p2;
        tmp_scale8_reg_2907 <= grp_fu_1051_p2;
        tmp_scale9_reg_2912 <= grp_fu_1056_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp6_stage0_11001) & (icmp_ln173_reg_3333_pp6_iter10_reg == 1'd0) & (ap_enable_reg_pp6_iter11 == 1'b1))) begin
        hh_load_reg_3370 <= hh_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        i_30_reg_3000 <= i_30_fu_1481_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state57)) begin
        i_31_reg_3197 <= i_31_fu_1652_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        icmp_ln100_reg_2931 <= icmp_ln100_fu_1209_p2;
        icmp_ln100_reg_2931_pp1_iter1_reg <= icmp_ln100_reg_2931;
        state_1_V_addr_reg_2940_pp1_iter1_reg <= state_1_V_addr_reg_2940;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp1_stage0_11001)) begin
        icmp_ln100_reg_2931_pp1_iter10_reg <= icmp_ln100_reg_2931_pp1_iter9_reg;
        icmp_ln100_reg_2931_pp1_iter11_reg <= icmp_ln100_reg_2931_pp1_iter10_reg;
        icmp_ln100_reg_2931_pp1_iter12_reg <= icmp_ln100_reg_2931_pp1_iter11_reg;
        icmp_ln100_reg_2931_pp1_iter13_reg <= icmp_ln100_reg_2931_pp1_iter12_reg;
        icmp_ln100_reg_2931_pp1_iter2_reg <= icmp_ln100_reg_2931_pp1_iter1_reg;
        icmp_ln100_reg_2931_pp1_iter3_reg <= icmp_ln100_reg_2931_pp1_iter2_reg;
        icmp_ln100_reg_2931_pp1_iter4_reg <= icmp_ln100_reg_2931_pp1_iter3_reg;
        icmp_ln100_reg_2931_pp1_iter5_reg <= icmp_ln100_reg_2931_pp1_iter4_reg;
        icmp_ln100_reg_2931_pp1_iter6_reg <= icmp_ln100_reg_2931_pp1_iter5_reg;
        icmp_ln100_reg_2931_pp1_iter7_reg <= icmp_ln100_reg_2931_pp1_iter6_reg;
        icmp_ln100_reg_2931_pp1_iter8_reg <= icmp_ln100_reg_2931_pp1_iter7_reg;
        icmp_ln100_reg_2931_pp1_iter9_reg <= icmp_ln100_reg_2931_pp1_iter8_reg;
        state_1_V_addr_reg_2940_pp1_iter10_reg <= state_1_V_addr_reg_2940_pp1_iter9_reg;
        state_1_V_addr_reg_2940_pp1_iter11_reg <= state_1_V_addr_reg_2940_pp1_iter10_reg;
        state_1_V_addr_reg_2940_pp1_iter12_reg <= state_1_V_addr_reg_2940_pp1_iter11_reg;
        state_1_V_addr_reg_2940_pp1_iter13_reg <= state_1_V_addr_reg_2940_pp1_iter12_reg;
        state_1_V_addr_reg_2940_pp1_iter2_reg <= state_1_V_addr_reg_2940_pp1_iter1_reg;
        state_1_V_addr_reg_2940_pp1_iter3_reg <= state_1_V_addr_reg_2940_pp1_iter2_reg;
        state_1_V_addr_reg_2940_pp1_iter4_reg <= state_1_V_addr_reg_2940_pp1_iter3_reg;
        state_1_V_addr_reg_2940_pp1_iter5_reg <= state_1_V_addr_reg_2940_pp1_iter4_reg;
        state_1_V_addr_reg_2940_pp1_iter6_reg <= state_1_V_addr_reg_2940_pp1_iter5_reg;
        state_1_V_addr_reg_2940_pp1_iter7_reg <= state_1_V_addr_reg_2940_pp1_iter6_reg;
        state_1_V_addr_reg_2940_pp1_iter8_reg <= state_1_V_addr_reg_2940_pp1_iter7_reg;
        state_1_V_addr_reg_2940_pp1_iter9_reg <= state_1_V_addr_reg_2940_pp1_iter8_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        icmp_ln118_reg_3019 <= icmp_ln118_fu_1495_p2;
        icmp_ln118_reg_3019_pp2_iter1_reg <= icmp_ln118_reg_3019;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp2_stage0_11001)) begin
        icmp_ln118_reg_3019_pp2_iter2_reg <= icmp_ln118_reg_3019_pp2_iter1_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp3_stage0_11001) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        icmp_ln132_reg_3109 <= icmp_ln132_fu_1575_p2;
        icmp_ln132_reg_3109_pp3_iter1_reg <= icmp_ln132_reg_3109;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp4_stage0_11001) & (1'b1 == ap_CS_fsm_pp4_stage0))) begin
        icmp_ln150_reg_3220 <= icmp_ln150_fu_1671_p2;
        icmp_ln150_reg_3220_pp4_iter1_reg <= icmp_ln150_reg_3220;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp5_stage0_11001) & (1'b1 == ap_CS_fsm_pp5_stage0))) begin
        icmp_ln159_reg_3289 <= icmp_ln159_fu_1981_p2;
        icmp_ln159_reg_3289_pp5_iter1_reg <= icmp_ln159_reg_3289;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp6_stage0_11001) & (1'b1 == ap_CS_fsm_pp6_stage0))) begin
        icmp_ln173_reg_3333 <= icmp_ln173_fu_2038_p2;
        icmp_ln173_reg_3333_pp6_iter1_reg <= icmp_ln173_reg_3333;
        zext_ln175_reg_3342_pp6_iter1_reg[6 : 0] <= zext_ln175_reg_3342[6 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp6_stage0_11001)) begin
        icmp_ln173_reg_3333_pp6_iter10_reg <= icmp_ln173_reg_3333_pp6_iter9_reg;
        icmp_ln173_reg_3333_pp6_iter11_reg <= icmp_ln173_reg_3333_pp6_iter10_reg;
        icmp_ln173_reg_3333_pp6_iter12_reg <= icmp_ln173_reg_3333_pp6_iter11_reg;
        icmp_ln173_reg_3333_pp6_iter13_reg <= icmp_ln173_reg_3333_pp6_iter12_reg;
        icmp_ln173_reg_3333_pp6_iter14_reg <= icmp_ln173_reg_3333_pp6_iter13_reg;
        icmp_ln173_reg_3333_pp6_iter15_reg <= icmp_ln173_reg_3333_pp6_iter14_reg;
        icmp_ln173_reg_3333_pp6_iter16_reg <= icmp_ln173_reg_3333_pp6_iter15_reg;
        icmp_ln173_reg_3333_pp6_iter17_reg <= icmp_ln173_reg_3333_pp6_iter16_reg;
        icmp_ln173_reg_3333_pp6_iter18_reg <= icmp_ln173_reg_3333_pp6_iter17_reg;
        icmp_ln173_reg_3333_pp6_iter19_reg <= icmp_ln173_reg_3333_pp6_iter18_reg;
        icmp_ln173_reg_3333_pp6_iter20_reg <= icmp_ln173_reg_3333_pp6_iter19_reg;
        icmp_ln173_reg_3333_pp6_iter21_reg <= icmp_ln173_reg_3333_pp6_iter20_reg;
        icmp_ln173_reg_3333_pp6_iter2_reg <= icmp_ln173_reg_3333_pp6_iter1_reg;
        icmp_ln173_reg_3333_pp6_iter3_reg <= icmp_ln173_reg_3333_pp6_iter2_reg;
        icmp_ln173_reg_3333_pp6_iter4_reg <= icmp_ln173_reg_3333_pp6_iter3_reg;
        icmp_ln173_reg_3333_pp6_iter5_reg <= icmp_ln173_reg_3333_pp6_iter4_reg;
        icmp_ln173_reg_3333_pp6_iter6_reg <= icmp_ln173_reg_3333_pp6_iter5_reg;
        icmp_ln173_reg_3333_pp6_iter7_reg <= icmp_ln173_reg_3333_pp6_iter6_reg;
        icmp_ln173_reg_3333_pp6_iter8_reg <= icmp_ln173_reg_3333_pp6_iter7_reg;
        icmp_ln173_reg_3333_pp6_iter9_reg <= icmp_ln173_reg_3333_pp6_iter8_reg;
        reg_1175_pp6_iter21_reg <= reg_1175;
        zext_ln175_reg_3342_pp6_iter10_reg[6 : 0] <= zext_ln175_reg_3342_pp6_iter9_reg[6 : 0];
        zext_ln175_reg_3342_pp6_iter11_reg[6 : 0] <= zext_ln175_reg_3342_pp6_iter10_reg[6 : 0];
        zext_ln175_reg_3342_pp6_iter12_reg[6 : 0] <= zext_ln175_reg_3342_pp6_iter11_reg[6 : 0];
        zext_ln175_reg_3342_pp6_iter13_reg[6 : 0] <= zext_ln175_reg_3342_pp6_iter12_reg[6 : 0];
        zext_ln175_reg_3342_pp6_iter14_reg[6 : 0] <= zext_ln175_reg_3342_pp6_iter13_reg[6 : 0];
        zext_ln175_reg_3342_pp6_iter15_reg[6 : 0] <= zext_ln175_reg_3342_pp6_iter14_reg[6 : 0];
        zext_ln175_reg_3342_pp6_iter16_reg[6 : 0] <= zext_ln175_reg_3342_pp6_iter15_reg[6 : 0];
        zext_ln175_reg_3342_pp6_iter17_reg[6 : 0] <= zext_ln175_reg_3342_pp6_iter16_reg[6 : 0];
        zext_ln175_reg_3342_pp6_iter18_reg[6 : 0] <= zext_ln175_reg_3342_pp6_iter17_reg[6 : 0];
        zext_ln175_reg_3342_pp6_iter19_reg[6 : 0] <= zext_ln175_reg_3342_pp6_iter18_reg[6 : 0];
        zext_ln175_reg_3342_pp6_iter20_reg[6 : 0] <= zext_ln175_reg_3342_pp6_iter19_reg[6 : 0];
        zext_ln175_reg_3342_pp6_iter2_reg[6 : 0] <= zext_ln175_reg_3342_pp6_iter1_reg[6 : 0];
        zext_ln175_reg_3342_pp6_iter3_reg[6 : 0] <= zext_ln175_reg_3342_pp6_iter2_reg[6 : 0];
        zext_ln175_reg_3342_pp6_iter4_reg[6 : 0] <= zext_ln175_reg_3342_pp6_iter3_reg[6 : 0];
        zext_ln175_reg_3342_pp6_iter5_reg[6 : 0] <= zext_ln175_reg_3342_pp6_iter4_reg[6 : 0];
        zext_ln175_reg_3342_pp6_iter6_reg[6 : 0] <= zext_ln175_reg_3342_pp6_iter5_reg[6 : 0];
        zext_ln175_reg_3342_pp6_iter7_reg[6 : 0] <= zext_ln175_reg_3342_pp6_iter6_reg[6 : 0];
        zext_ln175_reg_3342_pp6_iter8_reg[6 : 0] <= zext_ln175_reg_3342_pp6_iter7_reg[6 : 0];
        zext_ln175_reg_3342_pp6_iter9_reg[6 : 0] <= zext_ln175_reg_3342_pp6_iter8_reg[6 : 0];
        zz_load_reg_3359_pp6_iter7_reg <= zz_load_reg_3359;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp6_stage0_11001) & (icmp_ln173_reg_3333_pp6_iter20_reg == 1'd0))) begin
        icmp_ln177_2_reg_3381 <= icmp_ln177_2_fu_2109_p2;
        icmp_ln177_3_reg_3386 <= icmp_ln177_3_fu_2115_p2;
        icmp_ln179_1_reg_3396 <= icmp_ln179_1_fu_2145_p2;
        icmp_ln179_reg_3391 <= icmp_ln179_fu_2139_p2;
        or_ln177_reg_3375 <= or_ln177_fu_2103_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state144)) begin
        icmp_ln201_reg_3433 <= icmp_ln201_fu_2347_p2;
        shrink_reg_3428 <= grp_fu_1063_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln93_reg_2922 <= icmp_ln93_fu_1192_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        j_reg_2926 <= j_fu_1198_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp4_stage0_11001) & (1'b1 == ap_CS_fsm_pp4_stage0) & (ap_enable_reg_pp4_iter0 == 1'b1))) begin
        k_1_reg_3224 <= k_1_fu_1677_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (icmp_ln118_reg_3019_pp2_iter1_reg == 1'd0))) begin
        mul_ln68_1_reg_3084 <= mul_ln68_1_fu_1547_p2;
        mul_ln68_reg_3079 <= mul_ln68_fu_1538_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state5) | ((1'b0 == ap_block_pp7_stage0_11001) & (ap_enable_reg_pp7_iter5 == 1'b1)))) begin
        reg_1099 <= grp_fu_1016_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state5) | ((1'b0 == ap_block_pp6_stage0_11001) & (icmp_ln173_reg_3333_pp6_iter14_reg == 1'd0) & (ap_enable_reg_pp6_iter15 == 1'b1)))) begin
        reg_1106 <= grp_fu_1021_p2;
        reg_1112 <= grp_fu_1026_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state89) | (1'b1 == ap_CS_fsm_state84) | (1'b1 == ap_CS_fsm_state44) | (1'b1 == ap_CS_fsm_state39) | ((1'b0 == ap_block_pp4_stage6_11001) & (icmp_ln150_reg_3220 == 1'd0) & (1'b1 == ap_CS_fsm_pp4_stage6) & (ap_enable_reg_pp4_iter0 == 1'b1)) | ((1'b0 == ap_block_pp1_stage0_11001) & (icmp_ln100_reg_2931_pp1_iter6_reg == 1'd0) & (ap_enable_reg_pp1_iter7 == 1'b1)) | ((1'b0 == ap_block_pp6_stage0_11001) & (icmp_ln173_reg_3333_pp6_iter6_reg == 1'd0) & (ap_enable_reg_pp6_iter7 == 1'b1)))) begin
        reg_1124 <= grp_fu_1068_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state93) | (1'b1 == ap_CS_fsm_state88) | (1'b1 == ap_CS_fsm_state48) | (1'b1 == ap_CS_fsm_state43) | ((1'b0 == ap_block_pp4_stage3_11001) & (icmp_ln150_reg_3220_pp4_iter1_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp4_stage3) & (ap_enable_reg_pp4_iter1 == 1'b1)) | ((1'b0 == ap_block_pp4_stage0_11001) & (icmp_ln150_reg_3220 == 1'd0) & (ap_enable_reg_pp4_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage0)) | ((1'b0 == ap_block_pp1_stage0_11001) & (icmp_ln100_reg_2931_pp1_iter10_reg == 1'd0) & (ap_enable_reg_pp1_iter11 == 1'b1)) | ((1'b0 == ap_block_pp6_stage0_11001) & (icmp_ln173_reg_3333_pp6_iter10_reg == 1'd0) & (ap_enable_reg_pp6_iter11 == 1'b1)))) begin
        reg_1130 <= grp_fu_1016_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b0 == ap_block_pp3_stage0_11001) & (icmp_ln132_reg_3109 == 1'd0) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0)) | ((1'b0 == ap_block_pp2_stage0_11001) & (icmp_ln118_reg_3019_pp2_iter1_reg == 1'd0) & (ap_enable_reg_pp2_iter2 == 1'b1)))) begin
        reg_1138 <= weights_zu_V_q0;
        reg_1146 <= weights_ru_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b0 == ap_block_pp5_stage0_11001) & (icmp_ln159_reg_3289 == 1'd0) & (ap_enable_reg_pp5_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp5_stage0)) | ((1'b0 == ap_block_pp3_stage0_11001) & (icmp_ln132_reg_3109 == 1'd0) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0)) | ((1'b0 == ap_block_pp4_stage1_11001) & (icmp_ln150_reg_3220_pp4_iter1_reg == 1'd0) & (ap_enable_reg_pp4_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage1)) | ((1'b0 == ap_block_pp2_stage0_11001) & (icmp_ln118_reg_3019_pp2_iter1_reg == 1'd0) & (ap_enable_reg_pp2_iter2 == 1'b1)))) begin
        reg_1142 <= x_V_2_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state44) | (1'b1 == ap_CS_fsm_state39))) begin
        reg_1150 <= grp_fu_1072_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state85) | (1'b1 == ap_CS_fsm_state40) | ((1'b0 == ap_block_pp4_stage3_11001) & (icmp_ln150_reg_3220_pp4_iter1_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp4_stage3) & (ap_enable_reg_pp4_iter1 == 1'b1)) | ((1'b0 == ap_block_pp4_stage7_11001) & (icmp_ln150_reg_3220 == 1'd0) & (1'b1 == ap_CS_fsm_pp4_stage7) & (ap_enable_reg_pp4_iter0 == 1'b1)))) begin
        reg_1155 <= grp_fu_1068_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state48) | (1'b1 == ap_CS_fsm_state43))) begin
        reg_1162 <= grp_fu_1021_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state98) | (1'b1 == ap_CS_fsm_state53) | (1'b1 == ap_CS_fsm_state93) | (1'b1 == ap_CS_fsm_state48) | ((1'b0 == ap_block_pp6_stage0_11001) & (icmp_ln173_reg_3333_pp6_iter10_reg == 1'd0) & (ap_enable_reg_pp6_iter11 == 1'b1)))) begin
        reg_1167 <= grp_fu_1004_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state53) | (1'b1 == ap_CS_fsm_state48) | ((1'b0 == ap_block_pp6_stage0_11001) & (icmp_ln173_reg_3333_pp6_iter19_reg == 1'd0) & (ap_enable_reg_pp6_iter20 == 1'b1)))) begin
        reg_1175 <= grp_fu_1008_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b0 == ap_block_pp5_stage0_11001) & (icmp_ln159_reg_3289 == 1'd0) & (ap_enable_reg_pp5_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp5_stage0)) | ((1'b0 == ap_block_pp4_stage1_11001) & (icmp_ln150_reg_3220_pp4_iter1_reg == 1'd0) & (ap_enable_reg_pp4_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage1)))) begin
        reg_1184 <= weights_hu_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp4_stage1_11001) & (icmp_ln150_reg_3220 == 1'd0) & (ap_enable_reg_pp4_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage1))) begin
        rr_load_reg_3254 <= rr_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state128)) begin
        select_ln186_reg_3423 <= select_ln186_fu_2340_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (icmp_ln100_reg_2931_pp1_iter12_reg == 1'd0))) begin
        select_ln303_reg_2991 <= select_ln303_fu_1468_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (icmp_ln100_fu_1209_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        state_1_V_addr_reg_2940 <= zext_ln102_fu_1221_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp7_stage0_11001) & (ap_enable_reg_pp7_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp7_stage0))) begin
        state_tmp_load_reg_3456 <= state_tmp_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((~((pw12gru_scale_V_empty_n == 1'b0) | (keep_stream_V_empty_n == 1'b0) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        tmp_105_reg_2819 <= pw12gru_scale_V_dout;
        tmp_reg_2832 <= keep_stream_V_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state55) & (1'b0 == ap_block_state55_on_subcall_done))) begin
        tmp_266_reg_3183 <= grp_mysigmoid_fu_986_ap_return;
        tmp_273_reg_3188 <= grp_mysigmoid_fu_992_ap_return;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state40)) begin
        tmp_267_reg_3178 <= grp_fu_1072_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state100) & (grp_mytanh_fu_998_ap_done == 1'b1))) begin
        tmp_281_reg_3328 <= grp_mytanh_fu_998_ap_return;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state126)) begin
        tmp_292_reg_3411 <= grp_fu_1086_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln150_reg_3220_pp4_iter1_reg == 1'd0) & (ap_enable_reg_pp4_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage2) & (1'b0 == ap_block_pp4_stage2_11001))) begin
        tmp_hu_V_reg_3279 <= grp_fu_2803_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state127)) begin
        tmp_min_6_reg_3416 <= tmp_min_6_fu_2248_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp4_stage1_11001) & (icmp_ln150_reg_3220 == 1'd0) & (1'b1 == ap_CS_fsm_pp4_stage1))) begin
        weights_hw_V_load_reg_3259 <= weights_hw_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (icmp_ln118_reg_3019 == 1'd0) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        weights_rw_V_load_reg_3074 <= weights_rw_V_q0;
        weights_zw_V_load_reg_3069 <= weights_zw_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln111_fu_1475_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state25))) begin
        zext_ln118_reg_3013[6 : 0] <= zext_ln118_fu_1491_p1[6 : 0];
        zext_ln120_reg_3005[6 : 0] <= zext_ln120_fu_1487_p1[6 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (icmp_ln118_fu_1495_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        zext_ln120_1_reg_3028[6 : 0] <= zext_ln120_1_fu_1507_p1[6 : 0];
        zext_ln215_3_reg_3033[13 : 0] <= zext_ln215_3_fu_1529_p1[13 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln145_fu_1646_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state57))) begin
        zext_ln150_reg_3208[6 : 0] <= zext_ln150_fu_1662_p1[6 : 0];
        zext_ln152_reg_3202[6 : 0] <= zext_ln152_fu_1658_p1[6 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp4_stage0_11001) & (icmp_ln150_fu_1671_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp4_stage0))) begin
        zext_ln152_1_reg_3229[6 : 0] <= zext_ln152_1_fu_1683_p1[6 : 0];
        zext_ln215_5_reg_3234[13 : 0] <= zext_ln215_5_fu_1706_p1[13 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp6_stage0_11001) & (icmp_ln173_fu_2038_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp6_stage0))) begin
        zext_ln175_reg_3342[6 : 0] <= zext_ln175_fu_2050_p1[6 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp7_stage0_11001) & (icmp_ln197_fu_2352_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp7_stage0))) begin
        zext_ln199_reg_3446[6 : 0] <= zext_ln199_fu_2364_p1[6 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp7_stage0_11001) & (1'b1 == ap_CS_fsm_pp7_stage0))) begin
        zext_ln199_reg_3446_pp7_iter1_reg[6 : 0] <= zext_ln199_reg_3446[6 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp6_stage0_11001) & (icmp_ln173_reg_3333_pp6_iter5_reg == 1'd0) & (ap_enable_reg_pp6_iter6 == 1'b1))) begin
        zz_load_reg_3359 <= zz_q0;
    end
end

always @ (*) begin
    if ((icmp_ln93_fu_1192_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state6 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state6 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln100_fu_1209_p2 == 1'd1)) begin
        ap_condition_pp1_exit_iter0_state9 = 1'b1;
    end else begin
        ap_condition_pp1_exit_iter0_state9 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln118_fu_1495_p2 == 1'd1)) begin
        ap_condition_pp2_exit_iter0_state26 = 1'b1;
    end else begin
        ap_condition_pp2_exit_iter0_state26 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln132_fu_1575_p2 == 1'd1)) begin
        ap_condition_pp3_exit_iter0_state31 = 1'b1;
    end else begin
        ap_condition_pp3_exit_iter0_state31 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln150_fu_1671_p2 == 1'd1)) begin
        ap_condition_pp4_exit_iter0_state58 = 1'b1;
    end else begin
        ap_condition_pp4_exit_iter0_state58 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln159_fu_1981_p2 == 1'd1)) begin
        ap_condition_pp5_exit_iter0_state76 = 1'b1;
    end else begin
        ap_condition_pp5_exit_iter0_state76 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln173_fu_2038_p2 == 1'd1)) begin
        ap_condition_pp6_exit_iter0_state102 = 1'b1;
    end else begin
        ap_condition_pp6_exit_iter0_state102 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln197_fu_2352_p2 == 1'd1)) begin
        ap_condition_pp7_exit_iter0_state145 = 1'b1;
    end else begin
        ap_condition_pp7_exit_iter0_state145 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state160) | ((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter0 == 1'b0) & (ap_enable_reg_pp1_iter11 == 1'b0) & (ap_enable_reg_pp1_iter7 == 1'b0) & (ap_enable_reg_pp1_iter1 == 1'b0) & (ap_enable_reg_pp1_iter14 == 1'b0) & (ap_enable_reg_pp1_iter13 == 1'b0) & (ap_enable_reg_pp1_iter12 == 1'b0) & (ap_enable_reg_pp1_iter10 == 1'b0) & (ap_enable_reg_pp1_iter9 == 1'b0) & (ap_enable_reg_pp1_iter8 == 1'b0) & (ap_enable_reg_pp1_iter6 == 1'b0) & (ap_enable_reg_pp1_iter5 == 1'b0) & (ap_enable_reg_pp1_iter4 == 1'b0) & (ap_enable_reg_pp1_iter3 == 1'b0) & (ap_enable_reg_pp1_iter2 == 1'b0))) begin
        ap_idle_pp1 = 1'b1;
    end else begin
        ap_idle_pp1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp2_iter3 == 1'b0) & (ap_enable_reg_pp2_iter0 == 1'b0) & (ap_enable_reg_pp2_iter2 == 1'b0) & (ap_enable_reg_pp2_iter1 == 1'b0))) begin
        ap_idle_pp2 = 1'b1;
    end else begin
        ap_idle_pp2 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp3_iter2 == 1'b0) & (ap_enable_reg_pp3_iter0 == 1'b0) & (ap_enable_reg_pp3_iter1 == 1'b0))) begin
        ap_idle_pp3 = 1'b1;
    end else begin
        ap_idle_pp3 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp4_iter1 == 1'b0) & (ap_enable_reg_pp4_iter0 == 1'b0))) begin
        ap_idle_pp4 = 1'b1;
    end else begin
        ap_idle_pp4 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp5_iter1 == 1'b0) & (ap_enable_reg_pp5_iter2 == 1'b0) & (ap_enable_reg_pp5_iter0 == 1'b0))) begin
        ap_idle_pp5 = 1'b1;
    end else begin
        ap_idle_pp5 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp6_iter20 == 1'b0) & (ap_enable_reg_pp6_iter11 == 1'b0) & (ap_enable_reg_pp6_iter7 == 1'b0) & (ap_enable_reg_pp6_iter1 == 1'b0) & (ap_enable_reg_pp6_iter15 == 1'b0) & (ap_enable_reg_pp6_iter21 == 1'b0) & (ap_enable_reg_pp6_iter19 == 1'b0) & (ap_enable_reg_pp6_iter18 == 1'b0) & (ap_enable_reg_pp6_iter17 == 1'b0) & (ap_enable_reg_pp6_iter16 == 1'b0) & (ap_enable_reg_pp6_iter14 == 1'b0) & (ap_enable_reg_pp6_iter13 == 1'b0) & (ap_enable_reg_pp6_iter12 == 1'b0) & (ap_enable_reg_pp6_iter10 == 1'b0) & (ap_enable_reg_pp6_iter9 == 1'b0) & (ap_enable_reg_pp6_iter8 == 1'b0) & (ap_enable_reg_pp6_iter5 == 1'b0) & (ap_enable_reg_pp6_iter4 == 1'b0) & (ap_enable_reg_pp6_iter3 == 1'b0) & (ap_enable_reg_pp6_iter2 == 1'b0) & (ap_enable_reg_pp6_iter22 == 1'b0) & (ap_enable_reg_pp6_iter6 == 1'b0) & (ap_enable_reg_pp6_iter0 == 1'b0))) begin
        ap_idle_pp6 = 1'b1;
    end else begin
        ap_idle_pp6 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp7_iter5 == 1'b0) & (ap_enable_reg_pp7_iter13 == 1'b0) & (ap_enable_reg_pp7_iter12 == 1'b0) & (ap_enable_reg_pp7_iter11 == 1'b0) & (ap_enable_reg_pp7_iter10 == 1'b0) & (ap_enable_reg_pp7_iter9 == 1'b0) & (ap_enable_reg_pp7_iter8 == 1'b0) & (ap_enable_reg_pp7_iter7 == 1'b0) & (ap_enable_reg_pp7_iter6 == 1'b0) & (ap_enable_reg_pp7_iter4 == 1'b0) & (ap_enable_reg_pp7_iter3 == 1'b0) & (ap_enable_reg_pp7_iter2 == 1'b0) & (ap_enable_reg_pp7_iter1 == 1'b0) & (ap_enable_reg_pp7_iter0 == 1'b0))) begin
        ap_idle_pp7 = 1'b1;
    end else begin
        ap_idle_pp7 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln93_reg_2922 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_mux_j_0_phi_fu_739_p4 = j_reg_2926;
    end else begin
        ap_phi_mux_j_0_phi_fu_739_p4 = j_0_reg_735;
    end
end

always @ (*) begin
    if (((icmp_ln150_reg_3220 == 1'd0) & (ap_enable_reg_pp4_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage0) & (1'b0 == ap_block_pp4_stage0))) begin
        ap_phi_mux_k4_0_phi_fu_900_p4 = k_1_reg_3224;
    end else begin
        ap_phi_mux_k4_0_phi_fu_900_p4 = k4_0_reg_896;
    end
end

always @ (*) begin
    if (((icmp_ln150_reg_3220_pp4_iter1_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp4_stage7) & (ap_enable_reg_pp4_iter1 == 1'b1) & (1'b0 == ap_block_pp4_stage7))) begin
        ap_phi_mux_p_0387_0_phi_fu_888_p4 = tmp_hw_V_fu_1973_p3;
    end else begin
        ap_phi_mux_p_0387_0_phi_fu_888_p4 = p_0387_0_reg_884;
    end
end

always @ (*) begin
    if (((icmp_ln173_reg_3333_pp6_iter21_reg == 1'd0) & (ap_enable_reg_pp6_iter22 == 1'b1) & (1'b0 == ap_block_pp6_stage0))) begin
        ap_phi_mux_phi_ln187_phi_fu_933_p4 = tmp_min_7_fu_2166_p3;
    end else begin
        ap_phi_mux_phi_ln187_phi_fu_933_p4 = phi_ln187_reg_929;
    end
end

always @ (*) begin
    if (((icmp_ln173_reg_3333_pp6_iter21_reg == 1'd0) & (ap_enable_reg_pp6_iter22 == 1'b1) & (1'b0 == ap_block_pp6_stage0))) begin
        ap_phi_mux_tmp_min_0_phi_fu_945_p4 = tmp_min_9_fu_2189_p3;
    end else begin
        ap_phi_mux_tmp_min_0_phi_fu_945_p4 = tmp_min_0_reg_941;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state160)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state83)) begin
        bias_h_V_ce0 = 1'b1;
    end else begin
        bias_h_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state37)) begin
        bias_r_V_ce0 = 1'b1;
    end else begin
        bias_r_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state38)) begin
        bias_z_V_ce0 = 1'b1;
    end else begin
        bias_z_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln173_reg_3333_pp6_iter6_reg == 1'd0) & (1'b0 == ap_block_pp6_stage0_00001) & (ap_enable_reg_pp6_iter7 == 1'b1))) begin
        grp_fu_1004_opcode = 2'd1;
    end else if (((1'b1 == ap_CS_fsm_state89) | (1'b1 == ap_CS_fsm_state44) | (1'b1 == ap_CS_fsm_state94) | (1'b1 == ap_CS_fsm_state49))) begin
        grp_fu_1004_opcode = 2'd0;
    end else begin
        grp_fu_1004_opcode = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp6_iter7 == 1'b1) & (1'b0 == ap_block_pp6_stage0))) begin
        grp_fu_1004_p0 = reg_1099;
    end else if (((1'b1 == ap_CS_fsm_state94) | (1'b1 == ap_CS_fsm_state49))) begin
        grp_fu_1004_p0 = reg_1167;
    end else if (((1'b1 == ap_CS_fsm_state89) | (1'b1 == ap_CS_fsm_state44))) begin
        grp_fu_1004_p0 = reg_1155;
    end else begin
        grp_fu_1004_p0 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp6_iter7 == 1'b1) & (1'b0 == ap_block_pp6_stage0))) begin
        grp_fu_1004_p1 = zz_load_reg_3359;
    end else if (((1'b1 == ap_CS_fsm_state89) | (1'b1 == ap_CS_fsm_state44) | (1'b1 == ap_CS_fsm_state94) | (1'b1 == ap_CS_fsm_state49))) begin
        grp_fu_1004_p1 = reg_1130;
    end else begin
        grp_fu_1004_p1 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp6_iter16 == 1'b1) & (1'b0 == ap_block_pp6_stage0))) begin
        grp_fu_1008_p0 = reg_1106;
    end else if ((1'b1 == ap_CS_fsm_state49)) begin
        grp_fu_1008_p0 = reg_1175;
    end else if ((1'b1 == ap_CS_fsm_state44)) begin
        grp_fu_1008_p0 = tmp_267_reg_3178;
    end else begin
        grp_fu_1008_p0 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp6_iter16 == 1'b1) & (1'b0 == ap_block_pp6_stage0))) begin
        grp_fu_1008_p1 = reg_1112;
    end else if (((1'b1 == ap_CS_fsm_state44) | (1'b1 == ap_CS_fsm_state49))) begin
        grp_fu_1008_p1 = reg_1162;
    end else begin
        grp_fu_1008_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state85) | (1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state93) | (1'b1 == ap_CS_fsm_state88) | (1'b1 == ap_CS_fsm_state48) | (1'b1 == ap_CS_fsm_state43) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state92) | (1'b1 == ap_CS_fsm_state91) | (1'b1 == ap_CS_fsm_state87) | (1'b1 == ap_CS_fsm_state86) | (1'b1 == ap_CS_fsm_state47) | (1'b1 == ap_CS_fsm_state46) | (1'b1 == ap_CS_fsm_state42) | (1'b1 == ap_CS_fsm_state41) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state90) | (1'b1 == ap_CS_fsm_state45) | ((1'b0 == ap_block_pp4_stage7_11001) & (1'b1 == ap_CS_fsm_pp4_stage7)) | ((1'b0 == ap_block_pp4_stage3_11001) & (1'b1 == ap_CS_fsm_pp4_stage3)) | ((1'b0 == ap_block_pp4_stage0_11001) & (1'b1 == ap_CS_fsm_pp4_stage0)) | ((1'b0 == ap_block_pp4_stage6_11001) & (1'b1 == ap_CS_fsm_pp4_stage6)) | ((1'b0 == ap_block_pp4_stage1_11001) & (1'b1 == ap_CS_fsm_pp4_stage1)) | ((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((1'b0 == ap_block_pp6_stage0_11001) & (1'b1 == ap_CS_fsm_pp6_stage0)) | ((1'b0 == ap_block_pp7_stage0_11001) & (1'b1 == ap_CS_fsm_pp7_stage0)) | ((1'b0 == ap_block_pp4_stage8_11001) & (1'b1 == ap_CS_fsm_pp4_stage8)) | ((1'b1 == ap_CS_fsm_pp4_stage2) & (1'b0 == ap_block_pp4_stage2_11001)))) begin
        grp_fu_1016_ce = 1'b1;
    end else begin
        grp_fu_1016_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp7_stage0) & (ap_enable_reg_pp7_iter2 == 1'b1))) begin
        grp_fu_1016_p0 = state_tmp_load_reg_3456;
    end else if (((ap_enable_reg_pp6_iter8 == 1'b1) & (1'b0 == ap_block_pp6_stage0))) begin
        grp_fu_1016_p0 = zz_load_reg_3359_pp6_iter7_reg;
    end else if (((ap_enable_reg_pp4_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage0) & (1'b0 == ap_block_pp4_stage0))) begin
        grp_fu_1016_p0 = reg_1155;
    end else if (((1'b1 == ap_CS_fsm_pp4_stage6) & (ap_enable_reg_pp4_iter0 == 1'b1) & (1'b0 == ap_block_pp4_stage6))) begin
        grp_fu_1016_p0 = grp_fu_1068_p1;
    end else if (((1'b1 == ap_CS_fsm_state85) | (1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state90) | (1'b1 == ap_CS_fsm_state45) | ((ap_enable_reg_pp1_iter8 == 1'b1) & (1'b0 == ap_block_pp1_stage0)))) begin
        grp_fu_1016_p0 = reg_1124;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        grp_fu_1016_p0 = tmp_105_reg_2819;
    end else begin
        grp_fu_1016_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp7_stage0) & (ap_enable_reg_pp7_iter2 == 1'b1))) begin
        grp_fu_1016_p1 = shrink_reg_3428;
    end else if (((ap_enable_reg_pp6_iter8 == 1'b1) & (1'b0 == ap_block_pp6_stage0))) begin
        grp_fu_1016_p1 = reg_1124;
    end else if ((1'b1 == ap_CS_fsm_state90)) begin
        grp_fu_1016_p1 = tmp_scale8_reg_2907;
    end else if ((1'b1 == ap_CS_fsm_state85)) begin
        grp_fu_1016_p1 = tmp_scale_gru5;
    end else if (((ap_enable_reg_pp4_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage0) & (1'b0 == ap_block_pp4_stage0))) begin
        grp_fu_1016_p1 = grp_fu_1016_p2;
    end else if (((1'b1 == ap_CS_fsm_pp4_stage6) & (ap_enable_reg_pp4_iter0 == 1'b1) & (1'b0 == ap_block_pp4_stage6))) begin
        grp_fu_1016_p1 = rr_load_reg_3254;
    end else if ((1'b1 == ap_CS_fsm_state45)) begin
        grp_fu_1016_p1 = tmp_scale4_reg_2892;
    end else if ((1'b1 == ap_CS_fsm_state40)) begin
        grp_fu_1016_p1 = tmp_scale3_reg_2887;
    end else if (((ap_enable_reg_pp1_iter8 == 1'b1) & (1'b0 == ap_block_pp1_stage0))) begin
        grp_fu_1016_p1 = tmp_reg_2832;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        grp_fu_1016_p1 = zu_weights_scale;
    end else begin
        grp_fu_1016_p1 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp6_iter12 == 1'b1) & (1'b0 == ap_block_pp6_stage0))) begin
        grp_fu_1021_p0 = reg_1167;
    end else if (((1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state45))) begin
        grp_fu_1021_p0 = reg_1150;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        grp_fu_1021_p0 = tmp_105_reg_2819;
    end else begin
        grp_fu_1021_p0 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp6_iter12 == 1'b1) & (1'b0 == ap_block_pp6_stage0))) begin
        grp_fu_1021_p1 = hh_load_reg_3370;
    end else if ((1'b1 == ap_CS_fsm_state45)) begin
        grp_fu_1021_p1 = tmp_scale6_reg_2902;
    end else if ((1'b1 == ap_CS_fsm_state40)) begin
        grp_fu_1021_p1 = tmp_scale5_reg_2897;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        grp_fu_1021_p1 = ru_weights_scale;
    end else begin
        grp_fu_1021_p1 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp6_iter12 == 1'b1) & (1'b0 == ap_block_pp6_stage0))) begin
        grp_fu_1026_p0 = reg_1130;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        grp_fu_1026_p0 = tmp_105_reg_2819;
    end else begin
        grp_fu_1026_p0 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp6_iter12 == 1'b1) & (1'b0 == ap_block_pp6_stage0))) begin
        grp_fu_1026_p1 = tmp_scale9_reg_2912;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        grp_fu_1026_p1 = hu_weights_scale;
    end else begin
        grp_fu_1026_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state84)) begin
        grp_fu_1068_p0 = sext_ln163_1_fu_2033_p1;
    end else if ((1'b1 == ap_CS_fsm_state80)) begin
        grp_fu_1068_p0 = sext_ln163_fu_2028_p1;
    end else if ((1'b1 == ap_CS_fsm_state79)) begin
        grp_fu_1068_p0 = p_0387_0_reg_884;
    end else if (((1'b1 == ap_CS_fsm_pp4_stage7) & (ap_enable_reg_pp4_iter0 == 1'b1) & (1'b0 == ap_block_pp4_stage7))) begin
        grp_fu_1068_p0 = ap_phi_mux_p_0387_0_phi_fu_888_p4;
    end else if (((ap_enable_reg_pp4_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage2) & (1'b0 == ap_block_pp4_stage2))) begin
        grp_fu_1068_p0 = sext_ln1428_fu_1711_p1;
    end else if (((ap_enable_reg_pp4_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage1) & (1'b0 == ap_block_pp4_stage1))) begin
        grp_fu_1068_p0 = state_1_V_q1;
    end else if ((1'b1 == ap_CS_fsm_state39)) begin
        grp_fu_1068_p0 = sext_ln138_1_fu_1637_p1;
    end else if ((1'b1 == ap_CS_fsm_state35)) begin
        grp_fu_1068_p0 = sext_ln138_fu_1627_p1;
    end else if ((1'b1 == ap_CS_fsm_state34)) begin
        grp_fu_1068_p0 = p_0174_0_reg_793;
    end else if ((((ap_enable_reg_pp1_iter2 == 1'b1) & (1'b0 == ap_block_pp1_stage0)) | ((ap_enable_reg_pp6_iter2 == 1'b1) & (1'b0 == ap_block_pp6_stage0)))) begin
        grp_fu_1068_p0 = reg_1118;
    end else begin
        grp_fu_1068_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state39)) begin
        grp_fu_1072_p0 = sext_ln140_1_fu_1642_p1;
    end else if ((1'b1 == ap_CS_fsm_state35)) begin
        grp_fu_1072_p0 = sext_ln140_fu_1632_p1;
    end else if ((1'b1 == ap_CS_fsm_state34)) begin
        grp_fu_1072_p0 = p_0326_0_reg_805;
    end else begin
        grp_fu_1072_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp7_stage0_11001) & (1'b1 == ap_CS_fsm_pp7_stage0))) begin
        grp_fu_1080_ce = 1'b1;
    end else begin
        grp_fu_1080_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp7_stage0_11001) & (1'b1 == ap_CS_fsm_pp7_stage0))) begin
        grp_fu_1083_ce = 1'b1;
    end else begin
        grp_fu_1083_ce = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state125)) begin
        grp_fu_1086_opcode = 5'd4;
    end else if (((1'b1 == ap_CS_fsm_state127) | ((icmp_ln173_reg_3333_pp6_iter20_reg == 1'd0) & (1'b0 == ap_block_pp6_stage0_00001) & (ap_enable_reg_pp6_iter21 == 1'b1)))) begin
        grp_fu_1086_opcode = 5'd2;
    end else begin
        grp_fu_1086_opcode = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state127)) begin
        grp_fu_1086_p0 = phi_ln187_reg_929;
    end else if ((1'b1 == ap_CS_fsm_state125)) begin
        grp_fu_1086_p0 = tmp_min_0_reg_941;
    end else if (((ap_enable_reg_pp6_iter21 == 1'b1) & (1'b0 == ap_block_pp6_stage0))) begin
        grp_fu_1086_p0 = reg_1175;
    end else begin
        grp_fu_1086_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state127)) begin
        grp_fu_1086_p1 = tmp_min_6_fu_2248_p3;
    end else if ((1'b1 == ap_CS_fsm_state125)) begin
        grp_fu_1086_p1 = 32'd0;
    end else if (((ap_enable_reg_pp6_iter21 == 1'b1) & (1'b0 == ap_block_pp6_stage0))) begin
        grp_fu_1086_p1 = ap_phi_mux_phi_ln187_phi_fu_933_p4;
    end else begin
        grp_fu_1086_p1 = 'bx;
    end
end

always @ (*) begin
    if (((icmp_ln201_reg_3433 == 1'd1) & (1'b1 == ap_CS_fsm_state159))) begin
        gru2fc_scale_V_blk_n = gru2fc_scale_V_full_n;
    end else begin
        gru2fc_scale_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((gru2fc_scale_V_full_n == 1'b0) & (icmp_ln201_reg_3433 == 1'd1)) & (icmp_ln201_reg_3433 == 1'd1) & (1'b1 == ap_CS_fsm_state159))) begin
        gru2fc_scale_V_write = 1'b1;
    end else begin
        gru2fc_scale_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp6_iter10 == 1'b1) & (1'b0 == ap_block_pp6_stage0))) begin
        hh_address0 = zext_ln175_reg_3342_pp6_iter9_reg;
    end else if ((1'b1 == ap_CS_fsm_state101)) begin
        hh_address0 = zext_ln152_reg_3202;
    end else begin
        hh_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state101) | ((1'b0 == ap_block_pp6_stage0_11001) & (ap_enable_reg_pp6_iter10 == 1'b1)))) begin
        hh_ce0 = 1'b1;
    end else begin
        hh_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state101)) begin
        hh_we0 = 1'b1;
    end else begin
        hh_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln93_reg_2922 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        in_stream_V_V_blk_n = in_stream_V_V_empty_n;
    end else begin
        in_stream_V_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln93_reg_2922 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        in_stream_V_V_read = 1'b1;
    end else begin
        in_stream_V_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        keep_stream_V_blk_n = keep_stream_V_empty_n;
    end else begin
        keep_stream_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((pw12gru_scale_V_empty_n == 1'b0) | (keep_stream_V_empty_n == 1'b0) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        keep_stream_V_read = 1'b1;
    end else begin
        keep_stream_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp7_stage0_11001) & (ap_enable_reg_pp7_iter7 == 1'b1))) begin
        mask_table2_ce0 = 1'b1;
    end else begin
        mask_table2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp7_stage0_11001) & (ap_enable_reg_pp7_iter7 == 1'b1))) begin
        one_half_table3_ce0 = 1'b1;
    end else begin
        one_half_table3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln201_reg_3433 == 1'd1) & (1'b0 == ap_block_pp7_stage0) & (ap_enable_reg_pp7_iter13 == 1'b1))) begin
        out_stream_V_V_blk_n = out_stream_V_V_full_n;
    end else begin
        out_stream_V_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp7_stage0_11001) & (icmp_ln201_reg_3433 == 1'd1) & (ap_enable_reg_pp7_iter13 == 1'b1))) begin
        out_stream_V_V_write = 1'b1;
    end else begin
        out_stream_V_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        pw12gru_scale_V_blk_n = pw12gru_scale_V_empty_n;
    end else begin
        pw12gru_scale_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((pw12gru_scale_V_empty_n == 1'b0) | (keep_stream_V_empty_n == 1'b0) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        pw12gru_scale_V_read = 1'b1;
    end else begin
        pw12gru_scale_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp4_stage0) & (ap_enable_reg_pp4_iter0 == 1'b1) & (1'b0 == ap_block_pp4_stage0))) begin
        rr_address0 = zext_ln152_1_fu_1683_p1;
    end else if ((1'b1 == ap_CS_fsm_state56)) begin
        rr_address0 = zext_ln120_reg_3005;
    end else begin
        rr_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state56) | ((1'b0 == ap_block_pp4_stage0_11001) & (1'b1 == ap_CS_fsm_pp4_stage0) & (ap_enable_reg_pp4_iter0 == 1'b1)))) begin
        rr_ce0 = 1'b1;
    end else begin
        rr_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state56)) begin
        rr_we0 = 1'b1;
    end else begin
        rr_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp6_stage0) & (ap_enable_reg_pp6_iter0 == 1'b1) & (1'b0 == ap_block_pp6_stage0))) begin
        state_1_V_address0 = zext_ln175_fu_2050_p1;
    end else if (((ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == ap_block_pp2_stage0))) begin
        state_1_V_address0 = zext_ln120_1_fu_1507_p1;
    end else if (((ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0))) begin
        state_1_V_address0 = zext_ln102_fu_1221_p1;
    end else begin
        state_1_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp7_stage0) & (ap_enable_reg_pp7_iter13 == 1'b1))) begin
        state_1_V_address1 = zext_ln199_reg_3446_pp7_iter12_reg;
    end else if (((1'b1 == ap_CS_fsm_pp4_stage0) & (ap_enable_reg_pp4_iter0 == 1'b1) & (1'b0 == ap_block_pp4_stage0))) begin
        state_1_V_address1 = zext_ln152_1_fu_1683_p1;
    end else if (((ap_enable_reg_pp1_iter14 == 1'b1) & (1'b0 == ap_block_pp1_stage0))) begin
        state_1_V_address1 = state_1_V_addr_reg_2940_pp1_iter13_reg;
    end else begin
        state_1_V_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0)) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((1'b0 == ap_block_pp6_stage0_11001) & (1'b1 == ap_CS_fsm_pp6_stage0) & (ap_enable_reg_pp6_iter0 == 1'b1)))) begin
        state_1_V_ce0 = 1'b1;
    end else begin
        state_1_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp4_stage0_11001) & (1'b1 == ap_CS_fsm_pp4_stage0) & (ap_enable_reg_pp4_iter0 == 1'b1)) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter14 == 1'b1)) | ((1'b0 == ap_block_pp7_stage0_11001) & (ap_enable_reg_pp7_iter13 == 1'b1)))) begin
        state_1_V_ce1 = 1'b1;
    end else begin
        state_1_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp7_stage0) & (ap_enable_reg_pp7_iter13 == 1'b1))) begin
        state_1_V_d1 = sext_ln68_7_fu_2761_p1;
    end else if (((ap_enable_reg_pp1_iter14 == 1'b1) & (1'b0 == ap_block_pp1_stage0))) begin
        state_1_V_d1 = select_ln303_reg_2991;
    end else begin
        state_1_V_d1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (icmp_ln100_reg_2931_pp1_iter13_reg == 1'd0) & (ap_enable_reg_pp1_iter14 == 1'b1)) | ((1'b0 == ap_block_pp7_stage0_11001) & (ap_enable_reg_pp7_iter13 == 1'b1)))) begin
        state_1_V_we1 = 1'b1;
    end else begin
        state_1_V_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp7_stage0) & (ap_enable_reg_pp7_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp7_stage0))) begin
        state_tmp_address0 = zext_ln199_fu_2364_p1;
    end else if (((ap_enable_reg_pp6_iter21 == 1'b1) & (1'b0 == ap_block_pp6_stage0))) begin
        state_tmp_address0 = zext_ln175_reg_3342_pp6_iter20_reg;
    end else begin
        state_tmp_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp6_stage0_11001) & (ap_enable_reg_pp6_iter21 == 1'b1)) | ((1'b0 == ap_block_pp7_stage0_11001) & (ap_enable_reg_pp7_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp7_stage0)))) begin
        state_tmp_ce0 = 1'b1;
    end else begin
        state_tmp_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp6_stage0_11001) & (icmp_ln173_reg_3333_pp6_iter20_reg == 1'd0) & (ap_enable_reg_pp6_iter21 == 1'b1))) begin
        state_tmp_we0 = 1'b1;
    end else begin
        state_tmp_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp5_stage0) & (ap_enable_reg_pp5_iter0 == 1'b1) & (1'b0 == ap_block_pp5_stage0))) begin
        weights_hu_V_address0 = zext_ln215_9_fu_2009_p1;
    end else if (((ap_enable_reg_pp4_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage0) & (1'b0 == ap_block_pp4_stage0))) begin
        weights_hu_V_address0 = zext_ln215_5_reg_3234;
    end else begin
        weights_hu_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp5_stage0_11001) & (1'b1 == ap_CS_fsm_pp5_stage0) & (ap_enable_reg_pp5_iter0 == 1'b1)) | ((1'b0 == ap_block_pp4_stage0_11001) & (ap_enable_reg_pp4_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage0)))) begin
        weights_hu_V_ce0 = 1'b1;
    end else begin
        weights_hu_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp4_stage0_11001) & (1'b1 == ap_CS_fsm_pp4_stage0) & (ap_enable_reg_pp4_iter0 == 1'b1))) begin
        weights_hw_V_ce0 = 1'b1;
    end else begin
        weights_hw_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp3_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0) & (1'b0 == ap_block_pp3_stage0))) begin
        weights_ru_V_address0 = zext_ln215_7_fu_1603_p1;
    end else if (((ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == ap_block_pp2_stage0))) begin
        weights_ru_V_address0 = zext_ln215_3_reg_3033;
    end else begin
        weights_ru_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0)) | ((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0)))) begin
        weights_ru_V_ce0 = 1'b1;
    end else begin
        weights_ru_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        weights_rw_V_ce0 = 1'b1;
    end else begin
        weights_rw_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp3_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0) & (1'b0 == ap_block_pp3_stage0))) begin
        weights_zu_V_address0 = zext_ln215_7_fu_1603_p1;
    end else if (((ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == ap_block_pp2_stage0))) begin
        weights_zu_V_address0 = zext_ln215_3_reg_3033;
    end else begin
        weights_zu_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0)) | ((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0)))) begin
        weights_zu_V_ce0 = 1'b1;
    end else begin
        weights_zu_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        weights_zw_V_ce0 = 1'b1;
    end else begin
        weights_zw_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp5_stage0) & (ap_enable_reg_pp5_iter0 == 1'b1) & (1'b0 == ap_block_pp5_stage0))) begin
        x_V_2_address0 = zext_ln161_fu_1987_p1;
    end else if (((ap_enable_reg_pp4_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage0) & (1'b0 == ap_block_pp4_stage0))) begin
        x_V_2_address0 = zext_ln152_1_reg_3229;
    end else if (((ap_enable_reg_pp3_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0) & (1'b0 == ap_block_pp3_stage0))) begin
        x_V_2_address0 = zext_ln134_fu_1581_p1;
    end else if (((ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == ap_block_pp2_stage0))) begin
        x_V_2_address0 = zext_ln120_1_reg_3028;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        x_V_2_address0 = zext_ln96_fu_1204_p1;
    end else begin
        x_V_2_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp5_stage0_11001) & (1'b1 == ap_CS_fsm_pp5_stage0) & (ap_enable_reg_pp5_iter0 == 1'b1)) | ((1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0)) | ((1'b0 == ap_block_pp4_stage0_11001) & (ap_enable_reg_pp4_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage0)) | ((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        x_V_2_ce0 = 1'b1;
    end else begin
        x_V_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln93_reg_2922 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        x_V_2_we0 = 1'b1;
    end else begin
        x_V_2_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp6_iter5 == 1'b1) & (1'b0 == ap_block_pp6_stage0))) begin
        zz_address0 = zext_ln175_reg_3342_pp6_iter4_reg;
    end else if ((1'b1 == ap_CS_fsm_state56)) begin
        zz_address0 = zext_ln120_reg_3005;
    end else begin
        zz_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state56) | ((1'b0 == ap_block_pp6_stage0_11001) & (ap_enable_reg_pp6_iter5 == 1'b1)))) begin
        zz_ce0 = 1'b1;
    end else begin
        zz_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state56)) begin
        zz_we0 = 1'b1;
    end else begin
        zz_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((pw12gru_scale_V_empty_n == 1'b0) | (keep_stream_V_empty_n == 1'b0) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        ap_ST_fsm_pp0_stage0 : begin
            if (~((icmp_ln93_fu_1192_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if (((icmp_ln93_fu_1192_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_pp1_stage0;
        end
        ap_ST_fsm_pp1_stage0 : begin
            if ((~((ap_enable_reg_pp1_iter1 == 1'b0) & (icmp_ln100_fu_1209_p2 == 1'd1) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b0 == ap_block_pp1_stage0_subdone)) & ~((ap_enable_reg_pp1_iter14 == 1'b1) & (ap_enable_reg_pp1_iter13 == 1'b0) & (1'b0 == ap_block_pp1_stage0_subdone)))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end else if ((((ap_enable_reg_pp1_iter1 == 1'b0) & (icmp_ln100_fu_1209_p2 == 1'd1) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b0 == ap_block_pp1_stage0_subdone)) | ((ap_enable_reg_pp1_iter14 == 1'b1) & (ap_enable_reg_pp1_iter13 == 1'b0) & (1'b0 == ap_block_pp1_stage0_subdone)))) begin
                ap_NS_fsm = ap_ST_fsm_state24;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end
        end
        ap_ST_fsm_state24 : begin
            ap_NS_fsm = ap_ST_fsm_state25;
        end
        ap_ST_fsm_state25 : begin
            if (((icmp_ln111_fu_1475_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state25))) begin
                ap_NS_fsm = ap_ST_fsm_state57;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            end
        end
        ap_ST_fsm_pp2_stage0 : begin
            if ((~((ap_enable_reg_pp2_iter1 == 1'b0) & (icmp_ln118_fu_1495_p2 == 1'd1) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b0 == ap_block_pp2_stage0_subdone)) & ~((ap_enable_reg_pp2_iter2 == 1'b0) & (ap_enable_reg_pp2_iter3 == 1'b1) & (1'b0 == ap_block_pp2_stage0_subdone)))) begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            end else if ((((ap_enable_reg_pp2_iter2 == 1'b0) & (ap_enable_reg_pp2_iter3 == 1'b1) & (1'b0 == ap_block_pp2_stage0_subdone)) | ((ap_enable_reg_pp2_iter1 == 1'b0) & (icmp_ln118_fu_1495_p2 == 1'd1) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b0 == ap_block_pp2_stage0_subdone)))) begin
                ap_NS_fsm = ap_ST_fsm_state30;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            end
        end
        ap_ST_fsm_state30 : begin
            ap_NS_fsm = ap_ST_fsm_pp3_stage0;
        end
        ap_ST_fsm_pp3_stage0 : begin
            if ((~((ap_enable_reg_pp3_iter1 == 1'b0) & (icmp_ln132_fu_1575_p2 == 1'd1) & (ap_enable_reg_pp3_iter0 == 1'b1) & (1'b0 == ap_block_pp3_stage0_subdone)) & ~((ap_enable_reg_pp3_iter1 == 1'b0) & (ap_enable_reg_pp3_iter2 == 1'b1) & (1'b0 == ap_block_pp3_stage0_subdone)))) begin
                ap_NS_fsm = ap_ST_fsm_pp3_stage0;
            end else if ((((ap_enable_reg_pp3_iter1 == 1'b0) & (ap_enable_reg_pp3_iter2 == 1'b1) & (1'b0 == ap_block_pp3_stage0_subdone)) | ((ap_enable_reg_pp3_iter1 == 1'b0) & (icmp_ln132_fu_1575_p2 == 1'd1) & (ap_enable_reg_pp3_iter0 == 1'b1) & (1'b0 == ap_block_pp3_stage0_subdone)))) begin
                ap_NS_fsm = ap_ST_fsm_state34;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp3_stage0;
            end
        end
        ap_ST_fsm_state34 : begin
            ap_NS_fsm = ap_ST_fsm_state35;
        end
        ap_ST_fsm_state35 : begin
            ap_NS_fsm = ap_ST_fsm_state36;
        end
        ap_ST_fsm_state36 : begin
            ap_NS_fsm = ap_ST_fsm_state37;
        end
        ap_ST_fsm_state37 : begin
            ap_NS_fsm = ap_ST_fsm_state38;
        end
        ap_ST_fsm_state38 : begin
            ap_NS_fsm = ap_ST_fsm_state39;
        end
        ap_ST_fsm_state39 : begin
            ap_NS_fsm = ap_ST_fsm_state40;
        end
        ap_ST_fsm_state40 : begin
            ap_NS_fsm = ap_ST_fsm_state41;
        end
        ap_ST_fsm_state41 : begin
            ap_NS_fsm = ap_ST_fsm_state42;
        end
        ap_ST_fsm_state42 : begin
            ap_NS_fsm = ap_ST_fsm_state43;
        end
        ap_ST_fsm_state43 : begin
            ap_NS_fsm = ap_ST_fsm_state44;
        end
        ap_ST_fsm_state44 : begin
            ap_NS_fsm = ap_ST_fsm_state45;
        end
        ap_ST_fsm_state45 : begin
            ap_NS_fsm = ap_ST_fsm_state46;
        end
        ap_ST_fsm_state46 : begin
            ap_NS_fsm = ap_ST_fsm_state47;
        end
        ap_ST_fsm_state47 : begin
            ap_NS_fsm = ap_ST_fsm_state48;
        end
        ap_ST_fsm_state48 : begin
            ap_NS_fsm = ap_ST_fsm_state49;
        end
        ap_ST_fsm_state49 : begin
            ap_NS_fsm = ap_ST_fsm_state50;
        end
        ap_ST_fsm_state50 : begin
            ap_NS_fsm = ap_ST_fsm_state51;
        end
        ap_ST_fsm_state51 : begin
            ap_NS_fsm = ap_ST_fsm_state52;
        end
        ap_ST_fsm_state52 : begin
            ap_NS_fsm = ap_ST_fsm_state53;
        end
        ap_ST_fsm_state53 : begin
            ap_NS_fsm = ap_ST_fsm_state54;
        end
        ap_ST_fsm_state54 : begin
            ap_NS_fsm = ap_ST_fsm_state55;
        end
        ap_ST_fsm_state55 : begin
            if (((1'b1 == ap_CS_fsm_state55) & (1'b0 == ap_block_state55_on_subcall_done))) begin
                ap_NS_fsm = ap_ST_fsm_state56;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state55;
            end
        end
        ap_ST_fsm_state56 : begin
            ap_NS_fsm = ap_ST_fsm_state25;
        end
        ap_ST_fsm_state57 : begin
            if (((icmp_ln145_fu_1646_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state57))) begin
                ap_NS_fsm = ap_ST_fsm_pp6_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp4_stage0;
            end
        end
        ap_ST_fsm_pp4_stage0 : begin
            if ((~((ap_enable_reg_pp4_iter1 == 1'b0) & (icmp_ln150_fu_1671_p2 == 1'd1) & (ap_enable_reg_pp4_iter0 == 1'b1) & (1'b0 == ap_block_pp4_stage0_subdone)) & (1'b0 == ap_block_pp4_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp4_stage1;
            end else if (((ap_enable_reg_pp4_iter1 == 1'b0) & (icmp_ln150_fu_1671_p2 == 1'd1) & (ap_enable_reg_pp4_iter0 == 1'b1) & (1'b0 == ap_block_pp4_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_state75;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp4_stage0;
            end
        end
        ap_ST_fsm_pp4_stage1 : begin
            if ((1'b0 == ap_block_pp4_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp4_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp4_stage1;
            end
        end
        ap_ST_fsm_pp4_stage2 : begin
            if ((1'b0 == ap_block_pp4_stage2_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp4_stage3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp4_stage2;
            end
        end
        ap_ST_fsm_pp4_stage3 : begin
            if ((1'b0 == ap_block_pp4_stage3_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp4_stage4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp4_stage3;
            end
        end
        ap_ST_fsm_pp4_stage4 : begin
            if ((1'b0 == ap_block_pp4_stage4_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp4_stage5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp4_stage4;
            end
        end
        ap_ST_fsm_pp4_stage5 : begin
            if ((1'b0 == ap_block_pp4_stage5_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp4_stage6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp4_stage5;
            end
        end
        ap_ST_fsm_pp4_stage6 : begin
            if ((1'b0 == ap_block_pp4_stage6_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp4_stage7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp4_stage6;
            end
        end
        ap_ST_fsm_pp4_stage7 : begin
            if ((~((ap_enable_reg_pp4_iter0 == 1'b0) & (1'b1 == ap_CS_fsm_pp4_stage7) & (ap_enable_reg_pp4_iter1 == 1'b1) & (1'b0 == ap_block_pp4_stage7_subdone)) & (1'b0 == ap_block_pp4_stage7_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp4_stage8;
            end else if (((ap_enable_reg_pp4_iter0 == 1'b0) & (1'b1 == ap_CS_fsm_pp4_stage7) & (ap_enable_reg_pp4_iter1 == 1'b1) & (1'b0 == ap_block_pp4_stage7_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_state75;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp4_stage7;
            end
        end
        ap_ST_fsm_pp4_stage8 : begin
            if ((1'b0 == ap_block_pp4_stage8_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp4_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp4_stage8;
            end
        end
        ap_ST_fsm_state75 : begin
            ap_NS_fsm = ap_ST_fsm_pp5_stage0;
        end
        ap_ST_fsm_pp5_stage0 : begin
            if ((~((ap_enable_reg_pp5_iter1 == 1'b0) & (icmp_ln159_fu_1981_p2 == 1'd1) & (ap_enable_reg_pp5_iter0 == 1'b1) & (1'b0 == ap_block_pp5_stage0_subdone)) & ~((ap_enable_reg_pp5_iter1 == 1'b0) & (ap_enable_reg_pp5_iter2 == 1'b1) & (1'b0 == ap_block_pp5_stage0_subdone)))) begin
                ap_NS_fsm = ap_ST_fsm_pp5_stage0;
            end else if ((((ap_enable_reg_pp5_iter1 == 1'b0) & (ap_enable_reg_pp5_iter2 == 1'b1) & (1'b0 == ap_block_pp5_stage0_subdone)) | ((ap_enable_reg_pp5_iter1 == 1'b0) & (icmp_ln159_fu_1981_p2 == 1'd1) & (ap_enable_reg_pp5_iter0 == 1'b1) & (1'b0 == ap_block_pp5_stage0_subdone)))) begin
                ap_NS_fsm = ap_ST_fsm_state79;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp5_stage0;
            end
        end
        ap_ST_fsm_state79 : begin
            ap_NS_fsm = ap_ST_fsm_state80;
        end
        ap_ST_fsm_state80 : begin
            ap_NS_fsm = ap_ST_fsm_state81;
        end
        ap_ST_fsm_state81 : begin
            ap_NS_fsm = ap_ST_fsm_state82;
        end
        ap_ST_fsm_state82 : begin
            ap_NS_fsm = ap_ST_fsm_state83;
        end
        ap_ST_fsm_state83 : begin
            ap_NS_fsm = ap_ST_fsm_state84;
        end
        ap_ST_fsm_state84 : begin
            ap_NS_fsm = ap_ST_fsm_state85;
        end
        ap_ST_fsm_state85 : begin
            ap_NS_fsm = ap_ST_fsm_state86;
        end
        ap_ST_fsm_state86 : begin
            ap_NS_fsm = ap_ST_fsm_state87;
        end
        ap_ST_fsm_state87 : begin
            ap_NS_fsm = ap_ST_fsm_state88;
        end
        ap_ST_fsm_state88 : begin
            ap_NS_fsm = ap_ST_fsm_state89;
        end
        ap_ST_fsm_state89 : begin
            ap_NS_fsm = ap_ST_fsm_state90;
        end
        ap_ST_fsm_state90 : begin
            ap_NS_fsm = ap_ST_fsm_state91;
        end
        ap_ST_fsm_state91 : begin
            ap_NS_fsm = ap_ST_fsm_state92;
        end
        ap_ST_fsm_state92 : begin
            ap_NS_fsm = ap_ST_fsm_state93;
        end
        ap_ST_fsm_state93 : begin
            ap_NS_fsm = ap_ST_fsm_state94;
        end
        ap_ST_fsm_state94 : begin
            ap_NS_fsm = ap_ST_fsm_state95;
        end
        ap_ST_fsm_state95 : begin
            ap_NS_fsm = ap_ST_fsm_state96;
        end
        ap_ST_fsm_state96 : begin
            ap_NS_fsm = ap_ST_fsm_state97;
        end
        ap_ST_fsm_state97 : begin
            ap_NS_fsm = ap_ST_fsm_state98;
        end
        ap_ST_fsm_state98 : begin
            ap_NS_fsm = ap_ST_fsm_state99;
        end
        ap_ST_fsm_state99 : begin
            ap_NS_fsm = ap_ST_fsm_state100;
        end
        ap_ST_fsm_state100 : begin
            if (((1'b1 == ap_CS_fsm_state100) & (grp_mytanh_fu_998_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state101;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state100;
            end
        end
        ap_ST_fsm_state101 : begin
            ap_NS_fsm = ap_ST_fsm_state57;
        end
        ap_ST_fsm_pp6_stage0 : begin
            if ((~((ap_enable_reg_pp6_iter1 == 1'b0) & (icmp_ln173_fu_2038_p2 == 1'd1) & (ap_enable_reg_pp6_iter0 == 1'b1) & (1'b0 == ap_block_pp6_stage0_subdone)) & ~((ap_enable_reg_pp6_iter22 == 1'b1) & (ap_enable_reg_pp6_iter21 == 1'b0) & (1'b0 == ap_block_pp6_stage0_subdone)))) begin
                ap_NS_fsm = ap_ST_fsm_pp6_stage0;
            end else if ((((ap_enable_reg_pp6_iter22 == 1'b1) & (ap_enable_reg_pp6_iter21 == 1'b0) & (1'b0 == ap_block_pp6_stage0_subdone)) | ((ap_enable_reg_pp6_iter1 == 1'b0) & (icmp_ln173_fu_2038_p2 == 1'd1) & (ap_enable_reg_pp6_iter0 == 1'b1) & (1'b0 == ap_block_pp6_stage0_subdone)))) begin
                ap_NS_fsm = ap_ST_fsm_state125;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp6_stage0;
            end
        end
        ap_ST_fsm_state125 : begin
            ap_NS_fsm = ap_ST_fsm_state126;
        end
        ap_ST_fsm_state126 : begin
            ap_NS_fsm = ap_ST_fsm_state127;
        end
        ap_ST_fsm_state127 : begin
            ap_NS_fsm = ap_ST_fsm_state128;
        end
        ap_ST_fsm_state128 : begin
            ap_NS_fsm = ap_ST_fsm_state129;
        end
        ap_ST_fsm_state129 : begin
            ap_NS_fsm = ap_ST_fsm_state130;
        end
        ap_ST_fsm_state130 : begin
            ap_NS_fsm = ap_ST_fsm_state131;
        end
        ap_ST_fsm_state131 : begin
            ap_NS_fsm = ap_ST_fsm_state132;
        end
        ap_ST_fsm_state132 : begin
            ap_NS_fsm = ap_ST_fsm_state133;
        end
        ap_ST_fsm_state133 : begin
            ap_NS_fsm = ap_ST_fsm_state134;
        end
        ap_ST_fsm_state134 : begin
            ap_NS_fsm = ap_ST_fsm_state135;
        end
        ap_ST_fsm_state135 : begin
            ap_NS_fsm = ap_ST_fsm_state136;
        end
        ap_ST_fsm_state136 : begin
            ap_NS_fsm = ap_ST_fsm_state137;
        end
        ap_ST_fsm_state137 : begin
            ap_NS_fsm = ap_ST_fsm_state138;
        end
        ap_ST_fsm_state138 : begin
            ap_NS_fsm = ap_ST_fsm_state139;
        end
        ap_ST_fsm_state139 : begin
            ap_NS_fsm = ap_ST_fsm_state140;
        end
        ap_ST_fsm_state140 : begin
            ap_NS_fsm = ap_ST_fsm_state141;
        end
        ap_ST_fsm_state141 : begin
            ap_NS_fsm = ap_ST_fsm_state142;
        end
        ap_ST_fsm_state142 : begin
            ap_NS_fsm = ap_ST_fsm_state143;
        end
        ap_ST_fsm_state143 : begin
            ap_NS_fsm = ap_ST_fsm_state144;
        end
        ap_ST_fsm_state144 : begin
            ap_NS_fsm = ap_ST_fsm_pp7_stage0;
        end
        ap_ST_fsm_pp7_stage0 : begin
            if ((~((icmp_ln197_fu_2352_p2 == 1'd1) & (ap_enable_reg_pp7_iter0 == 1'b1) & (1'b0 == ap_block_pp7_stage0_subdone) & (ap_enable_reg_pp7_iter1 == 1'b0)) & ~((ap_enable_reg_pp7_iter13 == 1'b1) & (ap_enable_reg_pp7_iter12 == 1'b0) & (1'b0 == ap_block_pp7_stage0_subdone)))) begin
                ap_NS_fsm = ap_ST_fsm_pp7_stage0;
            end else if ((((ap_enable_reg_pp7_iter13 == 1'b1) & (ap_enable_reg_pp7_iter12 == 1'b0) & (1'b0 == ap_block_pp7_stage0_subdone)) | ((icmp_ln197_fu_2352_p2 == 1'd1) & (ap_enable_reg_pp7_iter0 == 1'b1) & (1'b0 == ap_block_pp7_stage0_subdone) & (ap_enable_reg_pp7_iter1 == 1'b0)))) begin
                ap_NS_fsm = ap_ST_fsm_state159;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp7_stage0;
            end
        end
        ap_ST_fsm_state159 : begin
            if ((~((gru2fc_scale_V_full_n == 1'b0) & (icmp_ln201_reg_3433 == 1'd1)) & (1'b1 == ap_CS_fsm_state159))) begin
                ap_NS_fsm = ap_ST_fsm_state160;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state159;
            end
        end
        ap_ST_fsm_state160 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln173_fu_1666_p2 = (gru_output_flag_load_reg_2917 + 32'd64);

assign add_ln215_1_fu_1701_p2 = (zext_ln150_reg_3208 + zext_ln215_4_fu_1697_p1);

assign add_ln215_2_fu_1598_p2 = (zext_ln118_reg_3013 + zext_ln215_6_fu_1594_p1);

assign add_ln215_3_fu_2004_p2 = (zext_ln150_reg_3208 + zext_ln215_8_fu_2000_p1);

assign add_ln215_fu_1524_p2 = (zext_ln118_reg_3013 + zext_ln215_fu_1520_p1);

assign and_ln177_1_fu_2160_p2 = (grp_fu_1086_p2 & and_ln177_fu_2155_p2);

assign and_ln177_fu_2155_p2 = (or_ln177_reg_3375 & or_ln177_1_fu_2151_p2);

assign and_ln179_1_fu_2183_p2 = (grp_fu_1091_p2 & and_ln179_fu_2178_p2);

assign and_ln179_fu_2178_p2 = (or_ln179_fu_2174_p2 & or_ln177_reg_3375);

assign and_ln184_fu_2233_p2 = (tmp_292_reg_3411 & or_ln184_fu_2227_p2);

assign and_ln186_1_fu_2334_p2 = (grp_fu_1086_p2 & and_ln186_fu_2328_p2);

assign and_ln186_fu_2328_p2 = (or_ln186_fu_2304_p2 & or_ln186_1_fu_2322_p2);

assign and_ln282_1_fu_1863_p2 = (xor_ln278_1_fu_1857_p2 & icmp_ln282_1_fu_1781_p2);

assign and_ln282_2_fu_2736_p2 = (xor_ln278_2_fu_2731_p2 & icmp_ln282_2_reg_3535);

assign and_ln282_fu_1336_p2 = (xor_ln278_fu_1330_p2 & icmp_ln282_fu_1284_p2);

assign and_ln284_1_fu_1889_p2 = (xor_ln282_1_fu_1883_p2 & icmp_ln284_1_fu_1791_p2);

assign and_ln284_2_fu_2635_p2 = (xor_ln282_2_fu_2629_p2 & icmp_ln284_2_fu_2579_p2);

assign and_ln284_fu_1362_p2 = (xor_ln282_fu_1356_p2 & icmp_ln284_fu_1290_p2);

assign and_ln285_3_fu_1449_p2 = (xor_ln285_fu_1444_p2 & and_ln284_reg_2976);

assign and_ln285_4_fu_1895_p2 = (icmp_ln285_1_fu_1797_p2 & and_ln284_1_fu_1889_p2);

assign and_ln285_5_fu_1953_p2 = (xor_ln285_1_fu_1947_p2 & and_ln284_1_fu_1889_p2);

assign and_ln285_6_fu_2641_p2 = (icmp_ln285_2_fu_2585_p2 & and_ln284_2_fu_2635_p2);

assign and_ln285_7_fu_2718_p2 = (xor_ln285_2_fu_2713_p2 & and_ln284_2_reg_3550);

assign and_ln285_fu_1368_p2 = (icmp_ln285_fu_1296_p2 & and_ln284_fu_1362_p2);

assign and_ln295_1_fu_1925_p2 = (xor_ln284_1_fu_1919_p2 & icmp_ln295_1_fu_1823_p2);

assign and_ln295_2_fu_2667_p2 = (xor_ln284_2_fu_2661_p2 & icmp_ln295_2_fu_2607_p2);

assign and_ln295_fu_1394_p2 = (xor_ln284_fu_1388_p2 & icmp_ln295_fu_1318_p2);

assign and_ln849_fu_2500_p2 = (xor_ln849_fu_2495_p2 & icmp_ln849_2_reg_3478_pp7_iter8_reg);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_pp1_stage0 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_pp2_stage0 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_pp3_stage0 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_pp4_stage0 = ap_CS_fsm[32'd37];

assign ap_CS_fsm_pp4_stage1 = ap_CS_fsm[32'd38];

assign ap_CS_fsm_pp4_stage2 = ap_CS_fsm[32'd39];

assign ap_CS_fsm_pp4_stage3 = ap_CS_fsm[32'd40];

assign ap_CS_fsm_pp4_stage6 = ap_CS_fsm[32'd43];

assign ap_CS_fsm_pp4_stage7 = ap_CS_fsm[32'd44];

assign ap_CS_fsm_pp4_stage8 = ap_CS_fsm[32'd45];

assign ap_CS_fsm_pp5_stage0 = ap_CS_fsm[32'd47];

assign ap_CS_fsm_pp6_stage0 = ap_CS_fsm[32'd71];

assign ap_CS_fsm_pp7_stage0 = ap_CS_fsm[32'd92];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state100 = ap_CS_fsm[32'd69];

assign ap_CS_fsm_state101 = ap_CS_fsm[32'd70];

assign ap_CS_fsm_state125 = ap_CS_fsm[32'd72];

assign ap_CS_fsm_state126 = ap_CS_fsm[32'd73];

assign ap_CS_fsm_state127 = ap_CS_fsm[32'd74];

assign ap_CS_fsm_state128 = ap_CS_fsm[32'd75];

assign ap_CS_fsm_state129 = ap_CS_fsm[32'd76];

assign ap_CS_fsm_state144 = ap_CS_fsm[32'd91];

assign ap_CS_fsm_state159 = ap_CS_fsm[32'd93];

assign ap_CS_fsm_state160 = ap_CS_fsm[32'd94];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state24 = ap_CS_fsm[32'd8];

assign ap_CS_fsm_state25 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state30 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state34 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state35 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state37 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state38 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state39 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state40 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_state41 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_state42 = ap_CS_fsm[32'd21];

assign ap_CS_fsm_state43 = ap_CS_fsm[32'd22];

assign ap_CS_fsm_state44 = ap_CS_fsm[32'd23];

assign ap_CS_fsm_state45 = ap_CS_fsm[32'd24];

assign ap_CS_fsm_state46 = ap_CS_fsm[32'd25];

assign ap_CS_fsm_state47 = ap_CS_fsm[32'd26];

assign ap_CS_fsm_state48 = ap_CS_fsm[32'd27];

assign ap_CS_fsm_state49 = ap_CS_fsm[32'd28];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state53 = ap_CS_fsm[32'd32];

assign ap_CS_fsm_state54 = ap_CS_fsm[32'd33];

assign ap_CS_fsm_state55 = ap_CS_fsm[32'd34];

assign ap_CS_fsm_state56 = ap_CS_fsm[32'd35];

assign ap_CS_fsm_state57 = ap_CS_fsm[32'd36];

assign ap_CS_fsm_state75 = ap_CS_fsm[32'd46];

assign ap_CS_fsm_state79 = ap_CS_fsm[32'd48];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state80 = ap_CS_fsm[32'd49];

assign ap_CS_fsm_state83 = ap_CS_fsm[32'd52];

assign ap_CS_fsm_state84 = ap_CS_fsm[32'd53];

assign ap_CS_fsm_state85 = ap_CS_fsm[32'd54];

assign ap_CS_fsm_state86 = ap_CS_fsm[32'd55];

assign ap_CS_fsm_state87 = ap_CS_fsm[32'd56];

assign ap_CS_fsm_state88 = ap_CS_fsm[32'd57];

assign ap_CS_fsm_state89 = ap_CS_fsm[32'd58];

assign ap_CS_fsm_state90 = ap_CS_fsm[32'd59];

assign ap_CS_fsm_state91 = ap_CS_fsm[32'd60];

assign ap_CS_fsm_state92 = ap_CS_fsm[32'd61];

assign ap_CS_fsm_state93 = ap_CS_fsm[32'd62];

assign ap_CS_fsm_state94 = ap_CS_fsm[32'd63];

assign ap_CS_fsm_state98 = ap_CS_fsm[32'd67];

assign ap_CS_fsm_state99 = ap_CS_fsm[32'd68];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((in_stream_V_V_empty_n == 1'b0) & (icmp_ln93_reg_2922 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((in_stream_V_V_empty_n == 1'b0) & (icmp_ln93_reg_2922 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1));
end

assign ap_block_pp1_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp3_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp3_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp3_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp4_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp4_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp4_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp4_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp4_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp4_stage1_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp4_stage2 = ~(1'b1 == 1'b1);

assign ap_block_pp4_stage2_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp4_stage2_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp4_stage3 = ~(1'b1 == 1'b1);

assign ap_block_pp4_stage3_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp4_stage3_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp4_stage4_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp4_stage5_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp4_stage6 = ~(1'b1 == 1'b1);

assign ap_block_pp4_stage6_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp4_stage6_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp4_stage7 = ~(1'b1 == 1'b1);

assign ap_block_pp4_stage7_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp4_stage7_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp4_stage8_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp4_stage8_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp5_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp5_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp5_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp6_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp6_stage0_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp6_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp6_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp7_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp7_stage0_01001 = ((out_stream_V_V_full_n == 1'b0) & (icmp_ln201_reg_3433 == 1'd1) & (ap_enable_reg_pp7_iter13 == 1'b1));
end

always @ (*) begin
    ap_block_pp7_stage0_11001 = ((out_stream_V_V_full_n == 1'b0) & (icmp_ln201_reg_3433 == 1'd1) & (ap_enable_reg_pp7_iter13 == 1'b1));
end

always @ (*) begin
    ap_block_pp7_stage0_subdone = ((out_stream_V_V_full_n == 1'b0) & (icmp_ln201_reg_3433 == 1'd1) & (ap_enable_reg_pp7_iter13 == 1'b1));
end

always @ (*) begin
    ap_block_state1 = ((pw12gru_scale_V_empty_n == 1'b0) | (keep_stream_V_empty_n == 1'b0) | (ap_start == 1'b0));
end

assign ap_block_state102_pp6_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state103_pp6_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state104_pp6_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state105_pp6_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state106_pp6_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state107_pp6_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state108_pp6_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state109_pp6_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state10_pp1_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state110_pp6_stage0_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state111_pp6_stage0_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state112_pp6_stage0_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state113_pp6_stage0_iter11 = ~(1'b1 == 1'b1);

assign ap_block_state114_pp6_stage0_iter12 = ~(1'b1 == 1'b1);

assign ap_block_state115_pp6_stage0_iter13 = ~(1'b1 == 1'b1);

assign ap_block_state116_pp6_stage0_iter14 = ~(1'b1 == 1'b1);

assign ap_block_state117_pp6_stage0_iter15 = ~(1'b1 == 1'b1);

assign ap_block_state118_pp6_stage0_iter16 = ~(1'b1 == 1'b1);

assign ap_block_state119_pp6_stage0_iter17 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp1_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state120_pp6_stage0_iter18 = ~(1'b1 == 1'b1);

assign ap_block_state121_pp6_stage0_iter19 = ~(1'b1 == 1'b1);

assign ap_block_state122_pp6_stage0_iter20 = ~(1'b1 == 1'b1);

assign ap_block_state123_pp6_stage0_iter21 = ~(1'b1 == 1'b1);

assign ap_block_state124_pp6_stage0_iter22 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp1_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp1_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state145_pp7_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state146_pp7_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state147_pp7_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state148_pp7_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state149_pp7_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp1_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state150_pp7_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state151_pp7_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state152_pp7_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state153_pp7_stage0_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state154_pp7_stage0_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state155_pp7_stage0_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state156_pp7_stage0_iter11 = ~(1'b1 == 1'b1);

assign ap_block_state157_pp7_stage0_iter12 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state158_pp7_stage0_iter13 = ((out_stream_V_V_full_n == 1'b0) & (icmp_ln201_reg_3433 == 1'd1));
end

always @ (*) begin
    ap_block_state159 = ((gru2fc_scale_V_full_n == 1'b0) & (icmp_ln201_reg_3433 == 1'd1));
end

assign ap_block_state15_pp1_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp1_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp1_stage0_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp1_stage0_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp1_stage0_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state20_pp1_stage0_iter11 = ~(1'b1 == 1'b1);

assign ap_block_state21_pp1_stage0_iter12 = ~(1'b1 == 1'b1);

assign ap_block_state22_pp1_stage0_iter13 = ~(1'b1 == 1'b1);

assign ap_block_state23_pp1_stage0_iter14 = ~(1'b1 == 1'b1);

assign ap_block_state26_pp2_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state27_pp2_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state28_pp2_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state29_pp2_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state31_pp3_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state32_pp3_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state33_pp3_stage0_iter2 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state55_on_subcall_done = ((grp_mysigmoid_fu_992_ap_done == 1'b0) | (grp_mysigmoid_fu_986_ap_done == 1'b0));
end

assign ap_block_state58_pp4_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state59_pp4_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state60_pp4_stage2_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state61_pp4_stage3_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state62_pp4_stage4_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state63_pp4_stage5_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state64_pp4_stage6_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state65_pp4_stage7_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state66_pp4_stage8_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state67_pp4_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state68_pp4_stage1_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state69_pp4_stage2_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state70_pp4_stage3_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state71_pp4_stage4_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state72_pp4_stage5_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state73_pp4_stage6_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state74_pp4_stage7_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state76_pp5_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state77_pp5_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state78_pp5_stage0_iter2 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state7_pp0_stage0_iter1 = ((in_stream_V_V_empty_n == 1'b0) & (icmp_ln93_reg_2922 == 1'd0));
end

assign ap_block_state9_pp1_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_condition_1623 = (~((gru2fc_scale_V_full_n == 1'b0) & (icmp_ln201_reg_3433 == 1'd1)) & (1'b1 == ap_CS_fsm_state159));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_pp1 = (ap_idle_pp1 ^ 1'b1);

assign ap_enable_pp2 = (ap_idle_pp2 ^ 1'b1);

assign ap_enable_pp3 = (ap_idle_pp3 ^ 1'b1);

assign ap_enable_pp4 = (ap_idle_pp4 ^ 1'b1);

assign ap_enable_pp5 = (ap_idle_pp5 ^ 1'b1);

assign ap_enable_pp6 = (ap_idle_pp6 ^ 1'b1);

assign ap_enable_pp7 = (ap_idle_pp7 ^ 1'b1);

assign bias_h_V_address0 = zext_ln152_reg_3202;

assign bias_r_V_address0 = zext_ln120_reg_3005;

assign bias_z_V_address0 = zext_ln120_reg_3005;

assign bitcast_ln177_1_fu_2073_p1 = ap_phi_mux_phi_ln187_phi_fu_933_p4;

assign bitcast_ln177_fu_2055_p1 = reg_1175;

assign bitcast_ln179_fu_2121_p1 = ap_phi_mux_tmp_min_0_phi_fu_945_p4;

assign bitcast_ln184_fu_2197_p1 = tmp_min_0_reg_941;

assign bitcast_ln186_1_fu_2275_p1 = tmp_min_6_reg_3416;

assign bitcast_ln186_fu_2257_p1 = phi_ln187_reg_929;

assign bitcast_ln475_fu_2369_p1 = reg_1099;

assign bitcast_ln849_fu_2491_p1 = select_ln849_fu_2484_p3;

assign exp_V_1_fu_1749_p1 = p_Result_s_101_fu_1739_p4;

assign exp_V_2_fu_2537_p1 = p_Result_45_fu_2527_p4;

assign exp_V_fu_1252_p1 = p_Result_s_fu_1242_p4;

assign grp_fu_1080_p0 = ((and_ln849_fu_2500_p2[0:0] === 1'b1) ? x_assign_reg_3467_pp7_iter8_reg : bitcast_ln849_reg_3498);

assign grp_fu_2771_p1 = rhs_V_fu_1557_p1;

assign grp_fu_2779_p0 = rhs_V_fu_1557_p1;

assign grp_fu_2787_p1 = rhs_V_2_fu_1619_p1;

assign grp_fu_2795_p0 = rhs_V_2_fu_1619_p1;

assign grp_mysigmoid_fu_986_ap_start = grp_mysigmoid_fu_986_ap_start_reg;

assign grp_mysigmoid_fu_992_ap_start = grp_mysigmoid_fu_992_ap_start_reg;

assign grp_mytanh_fu_998_ap_start = grp_mytanh_fu_998_ap_start_reg;

assign gru2fc_scale_V_din = 32'd1124073472;

assign h_fu_2358_p2 = (h_0_reg_964 + 7'd1);

assign i_29_fu_1215_p2 = (i_0_reg_747 + 7'd1);

assign i_30_fu_1481_p2 = (i1_0_reg_758 + 7'd1);

assign i_31_fu_1652_p2 = (i3_0_reg_861 + 7'd1);

assign i_fu_2044_p2 = (i6_0_reg_953 + 7'd1);

assign icmp_ln100_fu_1209_p2 = ((i_0_reg_747 == 7'd64) ? 1'b1 : 1'b0);

assign icmp_ln111_fu_1475_p2 = ((i1_0_reg_758 == 7'd64) ? 1'b1 : 1'b0);

assign icmp_ln118_fu_1495_p2 = ((j2_0_reg_817 == 7'd64) ? 1'b1 : 1'b0);

assign icmp_ln132_fu_1575_p2 = ((k_0_reg_850 == 7'd96) ? 1'b1 : 1'b0);

assign icmp_ln145_fu_1646_p2 = ((i3_0_reg_861 == 7'd64) ? 1'b1 : 1'b0);

assign icmp_ln150_fu_1671_p2 = ((ap_phi_mux_k4_0_phi_fu_900_p4 == 7'd64) ? 1'b1 : 1'b0);

assign icmp_ln159_fu_1981_p2 = ((j5_0_reg_918 == 7'd96) ? 1'b1 : 1'b0);

assign icmp_ln173_fu_2038_p2 = ((i6_0_reg_953 == 7'd64) ? 1'b1 : 1'b0);

assign icmp_ln177_1_fu_2097_p2 = ((trunc_ln177_fu_2069_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln177_2_fu_2109_p2 = ((tmp_297_fu_2077_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln177_3_fu_2115_p2 = ((trunc_ln177_1_fu_2087_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln177_fu_2091_p2 = ((tmp_296_fu_2059_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln179_1_fu_2145_p2 = ((trunc_ln179_fu_2135_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln179_fu_2139_p2 = ((tmp_299_fu_2125_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln184_1_fu_2221_p2 = ((trunc_ln184_fu_2211_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln184_fu_2215_p2 = ((tmp_291_fu_2201_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln186_1_fu_2298_p2 = ((trunc_ln186_fu_2271_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln186_2_fu_2310_p2 = ((tmp_294_fu_2278_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln186_3_fu_2316_p2 = ((trunc_ln186_1_fu_2288_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln186_fu_2292_p2 = ((tmp_293_fu_2261_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln197_fu_2352_p2 = ((h_0_reg_964 == 7'd64) ? 1'b1 : 1'b0);

assign icmp_ln201_fu_2347_p2 = ((add_ln173_reg_3214 == 32'd3136) ? 1'b1 : 1'b0);

assign icmp_ln278_1_fu_1765_p2 = ((trunc_ln262_1_fu_1727_p1 == 31'd0) ? 1'b1 : 1'b0);

assign icmp_ln278_2_fu_2557_p2 = ((trunc_ln262_2_fu_2515_p1 == 31'd0) ? 1'b1 : 1'b0);

assign icmp_ln278_fu_1268_p2 = ((trunc_ln262_fu_1230_p1 == 31'd0) ? 1'b1 : 1'b0);

assign icmp_ln282_1_fu_1781_p2 = ((p_Result_s_101_fu_1739_p4 == 8'd150) ? 1'b1 : 1'b0);

assign icmp_ln282_2_fu_2573_p2 = ((p_Result_45_fu_2527_p4 == 8'd150) ? 1'b1 : 1'b0);

assign icmp_ln282_fu_1284_p2 = ((p_Result_s_fu_1242_p4 == 8'd150) ? 1'b1 : 1'b0);

assign icmp_ln284_1_fu_1791_p2 = (($signed(sh_amt_4_fu_1771_p2) > $signed(9'd0)) ? 1'b1 : 1'b0);

assign icmp_ln284_2_fu_2579_p2 = (($signed(sh_amt_6_fu_2563_p2) > $signed(9'd0)) ? 1'b1 : 1'b0);

assign icmp_ln284_fu_1290_p2 = (($signed(sh_amt_fu_1274_p2) > $signed(9'd0)) ? 1'b1 : 1'b0);

assign icmp_ln285_1_fu_1797_p2 = (($signed(sh_amt_4_fu_1771_p2) < $signed(9'd25)) ? 1'b1 : 1'b0);

assign icmp_ln285_2_fu_2585_p2 = (($signed(sh_amt_6_fu_2563_p2) < $signed(9'd25)) ? 1'b1 : 1'b0);

assign icmp_ln285_fu_1296_p2 = (($signed(sh_amt_fu_1274_p2) < $signed(9'd25)) ? 1'b1 : 1'b0);

assign icmp_ln295_1_fu_1823_p2 = (($signed(tmp_99_fu_1813_p4) < $signed(4'd1)) ? 1'b1 : 1'b0);

assign icmp_ln295_2_fu_2607_p2 = (($signed(tmp_103_fu_2597_p4) < $signed(6'd1)) ? 1'b1 : 1'b0);

assign icmp_ln295_fu_1318_p2 = (($signed(tmp_96_fu_1308_p4) < $signed(4'd1)) ? 1'b1 : 1'b0);

assign icmp_ln849_2_fu_2401_p2 = ((tmp_V_9_fu_2385_p4 > 11'd1075) ? 1'b1 : 1'b0);

assign icmp_ln849_fu_2395_p2 = ((tmp_V_9_fu_2385_p4 < 11'd1022) ? 1'b1 : 1'b0);

assign icmp_ln93_fu_1192_p2 = ((ap_phi_mux_j_0_phi_fu_739_p4 == 7'd96) ? 1'b1 : 1'b0);

assign index_V_fu_2407_p4 = {{p_Val2_23_fu_2381_p1[57:52]}};

assign j_11_fu_1501_p2 = (j2_0_reg_817 + 7'd1);

assign j_12_fu_2014_p2 = (j5_0_reg_918 + 7'd1);

assign j_fu_1198_p2 = (ap_phi_mux_j_0_phi_fu_739_p4 + 7'd1);

assign k_1_fu_1677_p2 = (ap_phi_mux_k4_0_phi_fu_900_p4 + 7'd1);

assign k_fu_1609_p2 = (k_0_reg_850 + 7'd1);

assign lshr_ln286_1_fu_1829_p2 = tmp_70_fu_1757_p3 >> sext_ln281_1_fu_1777_p1;

assign lshr_ln286_2_fu_2613_p2 = tmp_74_fu_2549_p3 >> sext_ln281_2_fu_2569_p1;

assign lshr_ln286_fu_1324_p2 = tmp_64_fu_1260_p3 >> sext_ln281_fu_1280_p1;

assign mask_table2_address0 = zext_ln498_fu_2417_p1;

assign mul_ln68_1_fu_1547_p0 = reg_1118;

assign mul_ln68_1_fu_1547_p1 = weights_rw_V_load_reg_3074;

assign mul_ln68_1_fu_1547_p2 = ($signed(mul_ln68_1_fu_1547_p0) * $signed(mul_ln68_1_fu_1547_p1));

assign mul_ln68_fu_1538_p0 = reg_1118;

assign mul_ln68_fu_1538_p1 = weights_zw_V_load_reg_3069;

assign mul_ln68_fu_1538_p2 = ($signed(mul_ln68_fu_1538_p0) * $signed(mul_ln68_fu_1538_p1));

assign one_half_table3_address0 = zext_ln498_fu_2417_p1;

assign or_ln177_1_fu_2151_p2 = (icmp_ln177_3_reg_3386 | icmp_ln177_2_reg_3381);

assign or_ln177_fu_2103_p2 = (icmp_ln177_fu_2091_p2 | icmp_ln177_1_fu_2097_p2);

assign or_ln179_fu_2174_p2 = (icmp_ln179_reg_3391 | icmp_ln179_1_reg_3396);

assign or_ln184_fu_2227_p2 = (icmp_ln184_fu_2215_p2 | icmp_ln184_1_fu_2221_p2);

assign or_ln186_1_fu_2322_p2 = (icmp_ln186_3_fu_2316_p2 | icmp_ln186_2_fu_2310_p2);

assign or_ln186_fu_2304_p2 = (icmp_ln186_fu_2292_p2 | icmp_ln186_1_fu_2298_p2);

assign or_ln282_1_fu_1877_p2 = (icmp_ln282_1_fu_1781_p2 | icmp_ln278_1_fu_1765_p2);

assign or_ln282_2_fu_2623_p2 = (icmp_ln282_2_fu_2573_p2 | icmp_ln278_2_fu_2557_p2);

assign or_ln282_fu_1350_p2 = (icmp_ln282_fu_1284_p2 | icmp_ln278_fu_1268_p2);

assign or_ln284_1_fu_1913_p2 = (or_ln282_1_fu_1877_p2 | icmp_ln284_1_fu_1791_p2);

assign or_ln284_2_fu_2655_p2 = (or_ln282_2_fu_2623_p2 | icmp_ln284_2_fu_2579_p2);

assign or_ln284_fu_1382_p2 = (or_ln282_fu_1350_p2 | icmp_ln284_fu_1290_p2);

assign out_stream_V_V_din = outprepare_V_reg_3565;

assign outprepare_V_fu_2754_p3 = ((p_Result_40_reg_3518[0:0] === 1'b1) ? sub_ln461_2_fu_2748_p2 : select_ln282_2_fu_2741_p3);

assign p_Result_35_fu_1731_p3 = reg_V_1_fu_1723_p1[32'd31];

assign p_Result_37_fu_2427_p3 = {{p_Result_36_reg_3461_pp7_iter7_reg}, {63'd0}};

assign p_Result_38_fu_2438_p3 = {{p_Result_36_reg_3461_pp7_iter7_reg}, {trunc_ln368_reg_3493}};

assign p_Result_39_fu_2476_p3 = {{tmp_89_fu_2466_p4}, {xs_sig_V_fu_2460_p2}};

assign p_Result_45_fu_2527_p4 = {{reg_V_2_fu_2512_p1[30:23]}};

assign p_Result_s_101_fu_1739_p4 = {{reg_V_1_fu_1723_p1[30:23]}};

assign p_Result_s_fu_1242_p4 = {{reg_V_fu_1226_p1[30:23]}};

assign p_Val2_23_fu_2381_p1 = grp_fu_1083_p1;

assign p_Val2_27_fu_2444_p2 = (p_Result_38_fu_2438_p3 + zext_ln209_fu_2434_p1);

assign reg_V_1_fu_1723_p1 = grp_fu_1012_p2;

assign reg_V_2_fu_2512_p1 = outprepare_tmp_reg_3508;

assign reg_V_fu_1226_p1 = reg_1130;

assign rhs_V_2_fu_1619_p1 = reg_1142;

assign rhs_V_fu_1557_p1 = reg_1142;

assign select_ln186_fu_2340_p3 = ((and_ln186_1_fu_2334_p2[0:0] === 1'b1) ? phi_ln187_reg_929 : tmp_min_6_reg_3416);

assign select_ln278_1_fu_1939_p3 = ((icmp_ln278_1_fu_1765_p2[0:0] === 1'b1) ? 32'd0 : select_ln295_1_fu_1931_p3);

assign select_ln278_2_fu_2706_p3 = ((icmp_ln278_2_reg_3529[0:0] === 1'b1) ? 8'd0 : select_ln295_2_fu_2700_p3);

assign select_ln278_fu_1437_p3 = ((icmp_ln278_reg_2961[0:0] === 1'b1) ? 32'd0 : select_ln295_fu_1430_p3);

assign select_ln282_1_fu_1869_p3 = ((and_ln282_1_fu_1863_p2[0:0] === 1'b1) ? tmp_70_fu_1757_p3 : 24'd0);

assign select_ln282_2_fu_2741_p3 = ((and_ln282_2_fu_2736_p2[0:0] === 1'b1) ? trunc_ln283_reg_3523 : select_ln285_7_fu_2723_p3);

assign select_ln282_fu_1342_p3 = ((and_ln282_fu_1336_p2[0:0] === 1'b1) ? tmp_64_fu_1260_p3 : 24'd0);

assign select_ln285_3_fu_1454_p3 = ((and_ln285_3_fu_1449_p2[0:0] === 1'b1) ? select_ln288_fu_1413_p3 : select_ln278_fu_1437_p3);

assign select_ln285_4_fu_1901_p3 = ((and_ln285_4_fu_1895_p2[0:0] === 1'b1) ? lshr_ln286_1_fu_1829_p2 : select_ln282_1_fu_1869_p3);

assign select_ln285_5_fu_1959_p3 = ((and_ln285_5_fu_1953_p2[0:0] === 1'b1) ? select_ln288_1_fu_1843_p3 : select_ln278_1_fu_1939_p3);

assign select_ln285_6_fu_2647_p3 = ((and_ln285_6_fu_2641_p2[0:0] === 1'b1) ? trunc_ln286_fu_2619_p1 : 8'd0);

assign select_ln285_7_fu_2723_p3 = ((and_ln285_7_fu_2718_p2[0:0] === 1'b1) ? select_ln288_2_fu_2683_p3 : select_ln278_2_fu_2706_p3);

assign select_ln285_fu_1374_p3 = ((and_ln285_fu_1368_p2[0:0] === 1'b1) ? lshr_ln286_fu_1324_p2 : select_ln282_fu_1342_p3);

assign select_ln288_1_fu_1843_p3 = ((tmp_100_fu_1835_p3[0:0] === 1'b1) ? 32'd4294967295 : 32'd0);

assign select_ln288_2_fu_2683_p3 = ((tmp_104_fu_2676_p3[0:0] === 1'b1) ? 8'd255 : 8'd0);

assign select_ln288_fu_1413_p3 = ((tmp_97_fu_1406_p3[0:0] === 1'b1) ? 32'd4294967295 : 32'd0);

assign select_ln295_1_fu_1931_p3 = ((and_ln295_1_fu_1925_p2[0:0] === 1'b1) ? shl_ln297_1_fu_1851_p2 : zext_ln285_1_fu_1909_p1);

assign select_ln295_2_fu_2700_p3 = ((and_ln295_2_reg_3560[0:0] === 1'b1) ? shl_ln297_2_fu_2695_p2 : select_ln285_6_reg_3555);

assign select_ln295_fu_1430_p3 = ((and_ln295_reg_2986[0:0] === 1'b1) ? shl_ln297_fu_1421_p2 : zext_ln285_fu_1427_p1);

assign select_ln303_fu_1468_p3 = ((p_Result_34_reg_2951[0:0] === 1'b1) ? sub_ln461_fu_1462_p2 : select_ln285_3_fu_1454_p3);

assign select_ln849_fu_2484_p3 = ((icmp_ln849_reg_3472[0:0] === 1'b1) ? p_Result_37_fu_2427_p3 : p_Result_39_fu_2476_p3);

assign sext_ln138_1_fu_1637_p1 = $signed(bias_z_V_q0);

assign sext_ln138_fu_1627_p1 = p_0322_0_reg_828;

assign sext_ln140_1_fu_1642_p1 = $signed(bias_r_V_load_reg_3163);

assign sext_ln140_fu_1632_p1 = p_0406_0_reg_839;

assign sext_ln1428_fu_1711_p1 = $signed(weights_hw_V_load_reg_3259);

assign sext_ln163_1_fu_2033_p1 = $signed(bias_h_V_q0);

assign sext_ln163_fu_2028_p1 = p_0510_0_reg_907;

assign sext_ln281_1_fu_1777_p1 = sh_amt_4_fu_1771_p2;

assign sext_ln281_2_fu_2569_p1 = sh_amt_6_fu_2563_p2;

assign sext_ln281_fu_1280_p1 = sh_amt_fu_1274_p2;

assign sext_ln294_1_fu_1809_p1 = sh_amt_5_fu_1803_p2;

assign sext_ln294_2_fu_2673_p1 = sh_amt_7_reg_3545;

assign sext_ln294_2cast_fu_2691_p1 = sext_ln294_2_fu_2673_p1[7:0];

assign sext_ln294_fu_1403_p1 = sh_amt_3_reg_2971;

assign sext_ln68_7_fu_2761_p1 = outprepare_V_reg_3565;

assign sh_amt_3_fu_1302_p2 = ($signed(9'd0) - $signed(sh_amt_fu_1274_p2));

assign sh_amt_4_fu_1771_p2 = (9'd150 - exp_V_1_fu_1749_p1);

assign sh_amt_5_fu_1803_p2 = ($signed(9'd0) - $signed(sh_amt_4_fu_1771_p2));

assign sh_amt_6_fu_2563_p2 = (9'd150 - exp_V_2_fu_2537_p1);

assign sh_amt_7_fu_2591_p2 = ($signed(9'd0) - $signed(sh_amt_6_fu_2563_p2));

assign sh_amt_fu_1274_p2 = (9'd150 - exp_V_fu_1252_p1);

assign shl_ln297_1_fu_1851_p2 = zext_ln283_1_fu_1787_p1 << sext_ln294_1_fu_1809_p1;

assign shl_ln297_2_fu_2695_p2 = trunc_ln283_reg_3523 << sext_ln294_2cast_fu_2691_p1;

assign shl_ln297_fu_1421_p2 = zext_ln283_fu_1400_p1 << sext_ln294_fu_1403_p1;

assign sub_ln461_1_fu_1967_p2 = (32'd0 - select_ln285_5_fu_1959_p3);

assign sub_ln461_2_fu_2748_p2 = (8'd0 - select_ln282_2_fu_2741_p3);

assign sub_ln461_fu_1462_p2 = (32'd0 - select_ln285_3_fu_1454_p3);

assign tmp_100_fu_1835_p3 = reg_V_1_fu_1723_p1[32'd31];

assign tmp_103_fu_2597_p4 = {{sh_amt_7_fu_2591_p2[8:3]}};

assign tmp_104_fu_2676_p3 = reg_V_2_reg_3513[32'd31];

assign tmp_291_fu_2201_p4 = {{bitcast_ln184_fu_2197_p1[30:23]}};

assign tmp_293_fu_2261_p4 = {{bitcast_ln186_fu_2257_p1[30:23]}};

assign tmp_294_fu_2278_p4 = {{bitcast_ln186_1_fu_2275_p1[30:23]}};

assign tmp_296_fu_2059_p4 = {{bitcast_ln177_fu_2055_p1[30:23]}};

assign tmp_297_fu_2077_p4 = {{bitcast_ln177_1_fu_2073_p1[30:23]}};

assign tmp_299_fu_2125_p4 = {{bitcast_ln179_fu_2121_p1[30:23]}};

assign tmp_64_fu_1260_p3 = {{1'd1}, {trunc_ln270_fu_1256_p1}};

assign tmp_70_fu_1757_p3 = {{1'd1}, {trunc_ln270_1_fu_1753_p1}};

assign tmp_74_fu_2549_p3 = {{1'd1}, {trunc_ln270_2_fu_2541_p1}};

assign tmp_86_fu_1512_p3 = {{j2_0_reg_817}, {6'd0}};

assign tmp_87_fu_1689_p3 = {{ap_phi_mux_k4_0_phi_fu_900_p4}, {6'd0}};

assign tmp_88_fu_1586_p3 = {{k_0_reg_850}, {6'd0}};

assign tmp_89_fu_2466_p4 = {{p_Val2_27_fu_2444_p2[63:52]}};

assign tmp_90_fu_1992_p3 = {{j5_0_reg_918}, {6'd0}};

assign tmp_96_fu_1308_p4 = {{sh_amt_3_fu_1302_p2[8:5]}};

assign tmp_97_fu_1406_p3 = reg_V_reg_2946[32'd31];

assign tmp_99_fu_1813_p4 = {{sh_amt_5_fu_1803_p2[8:5]}};

assign tmp_V_10_fu_2450_p1 = p_Val2_27_fu_2444_p2[51:0];

assign tmp_V_9_fu_2385_p4 = {{p_Val2_23_fu_2381_p1[62:52]}};

assign tmp_hw_V_fu_1973_p3 = ((p_Result_35_fu_1731_p3[0:0] === 1'b1) ? sub_ln461_1_fu_1967_p2 : select_ln285_5_fu_1959_p3);

assign tmp_min_6_fu_2248_p3 = ((and_ln184_fu_2233_p2[0:0] === 1'b1) ? tmp_min_fu_2244_p1 : tmp_min_0_reg_941);

assign tmp_min_7_fu_2166_p3 = ((and_ln177_1_fu_2160_p2[0:0] === 1'b1) ? reg_1175_pp6_iter21_reg : phi_ln187_reg_929);

assign tmp_min_9_fu_2189_p3 = ((and_ln179_1_fu_2183_p2[0:0] === 1'b1) ? reg_1175_pp6_iter21_reg : tmp_min_0_reg_941);

assign tmp_min_fu_2244_p1 = xor_ln185_fu_2238_p2;

assign tmp_rw_V_fu_1570_p2 = (mul_ln68_1_reg_3084 + p_0326_0_reg_805);

assign tmp_zw_V_fu_1565_p2 = (mul_ln68_reg_3079 + p_0174_0_reg_793);

assign trunc_ln177_1_fu_2087_p1 = bitcast_ln177_1_fu_2073_p1[22:0];

assign trunc_ln177_fu_2069_p1 = bitcast_ln177_fu_2055_p1[22:0];

assign trunc_ln179_fu_2135_p1 = bitcast_ln179_fu_2121_p1[22:0];

assign trunc_ln184_fu_2211_p1 = bitcast_ln184_fu_2197_p1[22:0];

assign trunc_ln186_1_fu_2288_p1 = bitcast_ln186_1_fu_2275_p1[22:0];

assign trunc_ln186_fu_2271_p1 = bitcast_ln186_fu_2257_p1[22:0];

assign trunc_ln262_1_fu_1727_p1 = reg_V_1_fu_1723_p1[30:0];

assign trunc_ln262_2_fu_2515_p1 = reg_V_2_fu_2512_p1[30:0];

assign trunc_ln262_fu_1230_p1 = reg_V_fu_1226_p1[30:0];

assign trunc_ln270_1_fu_1753_p1 = reg_V_1_fu_1723_p1[22:0];

assign trunc_ln270_2_fu_2541_p1 = reg_V_2_fu_2512_p1[22:0];

assign trunc_ln270_fu_1256_p1 = reg_V_fu_1226_p1[22:0];

assign trunc_ln283_fu_2545_p1 = reg_V_2_fu_2512_p1[7:0];

assign trunc_ln286_fu_2619_p1 = lshr_ln286_2_fu_2613_p2[7:0];

assign trunc_ln368_fu_2423_p1 = p_Val2_23_fu_2381_p1[62:0];

assign weights_hw_V_address0 = zext_ln215_5_fu_1706_p1;

assign weights_rw_V_address0 = zext_ln215_3_fu_1529_p1;

assign weights_zw_V_address0 = zext_ln215_3_fu_1529_p1;

assign xor_ln1309_fu_2454_p2 = (mask_table2_q0 ^ 52'd4503599627370495);

assign xor_ln185_fu_2238_p2 = (bitcast_ln184_fu_2197_p1 ^ 32'd2147483648);

assign xor_ln278_1_fu_1857_p2 = (icmp_ln278_1_fu_1765_p2 ^ 1'd1);

assign xor_ln278_2_fu_2731_p2 = (icmp_ln278_2_reg_3529 ^ 1'd1);

assign xor_ln278_fu_1330_p2 = (icmp_ln278_fu_1268_p2 ^ 1'd1);

assign xor_ln282_1_fu_1883_p2 = (or_ln282_1_fu_1877_p2 ^ 1'd1);

assign xor_ln282_2_fu_2629_p2 = (or_ln282_2_fu_2623_p2 ^ 1'd1);

assign xor_ln282_fu_1356_p2 = (or_ln282_fu_1350_p2 ^ 1'd1);

assign xor_ln284_1_fu_1919_p2 = (or_ln284_1_fu_1913_p2 ^ 1'd1);

assign xor_ln284_2_fu_2661_p2 = (or_ln284_2_fu_2655_p2 ^ 1'd1);

assign xor_ln284_fu_1388_p2 = (or_ln284_fu_1382_p2 ^ 1'd1);

assign xor_ln285_1_fu_1947_p2 = (icmp_ln285_1_fu_1797_p2 ^ 1'd1);

assign xor_ln285_2_fu_2713_p2 = (icmp_ln285_2_reg_3540 ^ 1'd1);

assign xor_ln285_fu_1444_p2 = (icmp_ln285_reg_2966 ^ 1'd1);

assign xor_ln849_fu_2495_p2 = (icmp_ln849_reg_3472_pp7_iter8_reg ^ 1'd1);

assign xs_sig_V_fu_2460_p2 = (xor_ln1309_fu_2454_p2 & tmp_V_10_fu_2450_p1);

assign zext_ln102_fu_1221_p1 = i_0_reg_747;

assign zext_ln118_fu_1491_p1 = i1_0_reg_758;

assign zext_ln120_1_fu_1507_p1 = j2_0_reg_817;

assign zext_ln120_fu_1487_p1 = i1_0_reg_758;

assign zext_ln134_fu_1581_p1 = k_0_reg_850;

assign zext_ln150_fu_1662_p1 = i3_0_reg_861;

assign zext_ln152_1_fu_1683_p1 = ap_phi_mux_k4_0_phi_fu_900_p4;

assign zext_ln152_fu_1658_p1 = i3_0_reg_861;

assign zext_ln161_fu_1987_p1 = j5_0_reg_918;

assign zext_ln175_fu_2050_p1 = i6_0_reg_953;

assign zext_ln199_fu_2364_p1 = h_0_reg_964;

assign zext_ln209_fu_2434_p1 = one_half_table3_q0;

assign zext_ln215_3_fu_1529_p1 = add_ln215_fu_1524_p2;

assign zext_ln215_4_fu_1697_p1 = tmp_87_fu_1689_p3;

assign zext_ln215_5_fu_1706_p1 = add_ln215_1_fu_1701_p2;

assign zext_ln215_6_fu_1594_p1 = tmp_88_fu_1586_p3;

assign zext_ln215_7_fu_1603_p1 = add_ln215_2_fu_1598_p2;

assign zext_ln215_8_fu_2000_p1 = tmp_90_fu_1992_p3;

assign zext_ln215_9_fu_2009_p1 = add_ln215_3_fu_2004_p2;

assign zext_ln215_fu_1520_p1 = tmp_86_fu_1512_p3;

assign zext_ln283_1_fu_1787_p1 = tmp_70_fu_1757_p3;

assign zext_ln283_fu_1400_p1 = tmp_64_reg_2956;

assign zext_ln285_1_fu_1909_p1 = select_ln285_4_fu_1901_p3;

assign zext_ln285_fu_1427_p1 = select_ln285_reg_2981;

assign zext_ln498_fu_2417_p1 = index_V_fu_2407_p4;

assign zext_ln96_fu_1204_p1 = j_0_reg_735;

always @ (posedge ap_clk) begin
    tmp_64_reg_2956[23] <= 1'b1;
    zext_ln120_reg_3005[63:7] <= 57'b000000000000000000000000000000000000000000000000000000000;
    zext_ln118_reg_3013[13:7] <= 7'b0000000;
    zext_ln120_1_reg_3028[63:7] <= 57'b000000000000000000000000000000000000000000000000000000000;
    zext_ln215_3_reg_3033[63:14] <= 50'b00000000000000000000000000000000000000000000000000;
    zext_ln152_reg_3202[63:7] <= 57'b000000000000000000000000000000000000000000000000000000000;
    zext_ln150_reg_3208[13:7] <= 7'b0000000;
    zext_ln152_1_reg_3229[63:7] <= 57'b000000000000000000000000000000000000000000000000000000000;
    zext_ln215_5_reg_3234[63:14] <= 50'b00000000000000000000000000000000000000000000000000;
    zext_ln175_reg_3342[63:7] <= 57'b000000000000000000000000000000000000000000000000000000000;
    zext_ln175_reg_3342_pp6_iter1_reg[63:7] <= 57'b000000000000000000000000000000000000000000000000000000000;
    zext_ln175_reg_3342_pp6_iter2_reg[63:7] <= 57'b000000000000000000000000000000000000000000000000000000000;
    zext_ln175_reg_3342_pp6_iter3_reg[63:7] <= 57'b000000000000000000000000000000000000000000000000000000000;
    zext_ln175_reg_3342_pp6_iter4_reg[63:7] <= 57'b000000000000000000000000000000000000000000000000000000000;
    zext_ln175_reg_3342_pp6_iter5_reg[63:7] <= 57'b000000000000000000000000000000000000000000000000000000000;
    zext_ln175_reg_3342_pp6_iter6_reg[63:7] <= 57'b000000000000000000000000000000000000000000000000000000000;
    zext_ln175_reg_3342_pp6_iter7_reg[63:7] <= 57'b000000000000000000000000000000000000000000000000000000000;
    zext_ln175_reg_3342_pp6_iter8_reg[63:7] <= 57'b000000000000000000000000000000000000000000000000000000000;
    zext_ln175_reg_3342_pp6_iter9_reg[63:7] <= 57'b000000000000000000000000000000000000000000000000000000000;
    zext_ln175_reg_3342_pp6_iter10_reg[63:7] <= 57'b000000000000000000000000000000000000000000000000000000000;
    zext_ln175_reg_3342_pp6_iter11_reg[63:7] <= 57'b000000000000000000000000000000000000000000000000000000000;
    zext_ln175_reg_3342_pp6_iter12_reg[63:7] <= 57'b000000000000000000000000000000000000000000000000000000000;
    zext_ln175_reg_3342_pp6_iter13_reg[63:7] <= 57'b000000000000000000000000000000000000000000000000000000000;
    zext_ln175_reg_3342_pp6_iter14_reg[63:7] <= 57'b000000000000000000000000000000000000000000000000000000000;
    zext_ln175_reg_3342_pp6_iter15_reg[63:7] <= 57'b000000000000000000000000000000000000000000000000000000000;
    zext_ln175_reg_3342_pp6_iter16_reg[63:7] <= 57'b000000000000000000000000000000000000000000000000000000000;
    zext_ln175_reg_3342_pp6_iter17_reg[63:7] <= 57'b000000000000000000000000000000000000000000000000000000000;
    zext_ln175_reg_3342_pp6_iter18_reg[63:7] <= 57'b000000000000000000000000000000000000000000000000000000000;
    zext_ln175_reg_3342_pp6_iter19_reg[63:7] <= 57'b000000000000000000000000000000000000000000000000000000000;
    zext_ln175_reg_3342_pp6_iter20_reg[63:7] <= 57'b000000000000000000000000000000000000000000000000000000000;
    zext_ln199_reg_3446[63:7] <= 57'b000000000000000000000000000000000000000000000000000000000;
    zext_ln199_reg_3446_pp7_iter1_reg[63:7] <= 57'b000000000000000000000000000000000000000000000000000000000;
    zext_ln199_reg_3446_pp7_iter2_reg[63:7] <= 57'b000000000000000000000000000000000000000000000000000000000;
    zext_ln199_reg_3446_pp7_iter3_reg[63:7] <= 57'b000000000000000000000000000000000000000000000000000000000;
    zext_ln199_reg_3446_pp7_iter4_reg[63:7] <= 57'b000000000000000000000000000000000000000000000000000000000;
    zext_ln199_reg_3446_pp7_iter5_reg[63:7] <= 57'b000000000000000000000000000000000000000000000000000000000;
    zext_ln199_reg_3446_pp7_iter6_reg[63:7] <= 57'b000000000000000000000000000000000000000000000000000000000;
    zext_ln199_reg_3446_pp7_iter7_reg[63:7] <= 57'b000000000000000000000000000000000000000000000000000000000;
    zext_ln199_reg_3446_pp7_iter8_reg[63:7] <= 57'b000000000000000000000000000000000000000000000000000000000;
    zext_ln199_reg_3446_pp7_iter9_reg[63:7] <= 57'b000000000000000000000000000000000000000000000000000000000;
    zext_ln199_reg_3446_pp7_iter10_reg[63:7] <= 57'b000000000000000000000000000000000000000000000000000000000;
    zext_ln199_reg_3446_pp7_iter11_reg[63:7] <= 57'b000000000000000000000000000000000000000000000000000000000;
    zext_ln199_reg_3446_pp7_iter12_reg[63:7] <= 57'b000000000000000000000000000000000000000000000000000000000;
end

endmodule //grucell

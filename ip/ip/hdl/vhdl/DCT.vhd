-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
-- Version: 2019.2
-- Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity DCT is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    ori_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    ori_ce0 : OUT STD_LOGIC;
    ori_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    dct_r_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    dct_r_ce0 : OUT STD_LOGIC;
    dct_r_we0 : OUT STD_LOGIC;
    dct_r_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    dct_r_q0 : IN STD_LOGIC_VECTOR (31 downto 0) );
end;


architecture behav of DCT is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (34 downto 0) := "00000000000000000000000000000000001";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (34 downto 0) := "00000000000000000000000000000000010";
    constant ap_ST_fsm_pp0_stage1 : STD_LOGIC_VECTOR (34 downto 0) := "00000000000000000000000000000000100";
    constant ap_ST_fsm_pp0_stage2 : STD_LOGIC_VECTOR (34 downto 0) := "00000000000000000000000000000001000";
    constant ap_ST_fsm_pp0_stage3 : STD_LOGIC_VECTOR (34 downto 0) := "00000000000000000000000000000010000";
    constant ap_ST_fsm_pp0_stage4 : STD_LOGIC_VECTOR (34 downto 0) := "00000000000000000000000000000100000";
    constant ap_ST_fsm_pp0_stage5 : STD_LOGIC_VECTOR (34 downto 0) := "00000000000000000000000000001000000";
    constant ap_ST_fsm_state12 : STD_LOGIC_VECTOR (34 downto 0) := "00000000000000000000000000010000000";
    constant ap_ST_fsm_pp1_stage0 : STD_LOGIC_VECTOR (34 downto 0) := "00000000000000000000000000100000000";
    constant ap_ST_fsm_pp1_stage1 : STD_LOGIC_VECTOR (34 downto 0) := "00000000000000000000000001000000000";
    constant ap_ST_fsm_pp1_stage2 : STD_LOGIC_VECTOR (34 downto 0) := "00000000000000000000000010000000000";
    constant ap_ST_fsm_pp1_stage3 : STD_LOGIC_VECTOR (34 downto 0) := "00000000000000000000000100000000000";
    constant ap_ST_fsm_pp1_stage4 : STD_LOGIC_VECTOR (34 downto 0) := "00000000000000000000001000000000000";
    constant ap_ST_fsm_pp1_stage5 : STD_LOGIC_VECTOR (34 downto 0) := "00000000000000000000010000000000000";
    constant ap_ST_fsm_pp1_stage6 : STD_LOGIC_VECTOR (34 downto 0) := "00000000000000000000100000000000000";
    constant ap_ST_fsm_pp1_stage7 : STD_LOGIC_VECTOR (34 downto 0) := "00000000000000000001000000000000000";
    constant ap_ST_fsm_state68 : STD_LOGIC_VECTOR (34 downto 0) := "00000000000000000010000000000000000";
    constant ap_ST_fsm_pp2_stage0 : STD_LOGIC_VECTOR (34 downto 0) := "00000000000000000100000000000000000";
    constant ap_ST_fsm_pp2_stage1 : STD_LOGIC_VECTOR (34 downto 0) := "00000000000000001000000000000000000";
    constant ap_ST_fsm_pp2_stage2 : STD_LOGIC_VECTOR (34 downto 0) := "00000000000000010000000000000000000";
    constant ap_ST_fsm_pp2_stage3 : STD_LOGIC_VECTOR (34 downto 0) := "00000000000000100000000000000000000";
    constant ap_ST_fsm_pp2_stage4 : STD_LOGIC_VECTOR (34 downto 0) := "00000000000001000000000000000000000";
    constant ap_ST_fsm_pp2_stage5 : STD_LOGIC_VECTOR (34 downto 0) := "00000000000010000000000000000000000";
    constant ap_ST_fsm_pp2_stage6 : STD_LOGIC_VECTOR (34 downto 0) := "00000000000100000000000000000000000";
    constant ap_ST_fsm_pp2_stage7 : STD_LOGIC_VECTOR (34 downto 0) := "00000000001000000000000000000000000";
    constant ap_ST_fsm_state125 : STD_LOGIC_VECTOR (34 downto 0) := "00000000010000000000000000000000000";
    constant ap_ST_fsm_pp3_stage0 : STD_LOGIC_VECTOR (34 downto 0) := "00000000100000000000000000000000000";
    constant ap_ST_fsm_pp3_stage1 : STD_LOGIC_VECTOR (34 downto 0) := "00000001000000000000000000000000000";
    constant ap_ST_fsm_pp3_stage2 : STD_LOGIC_VECTOR (34 downto 0) := "00000010000000000000000000000000000";
    constant ap_ST_fsm_pp3_stage3 : STD_LOGIC_VECTOR (34 downto 0) := "00000100000000000000000000000000000";
    constant ap_ST_fsm_pp3_stage4 : STD_LOGIC_VECTOR (34 downto 0) := "00001000000000000000000000000000000";
    constant ap_ST_fsm_pp3_stage5 : STD_LOGIC_VECTOR (34 downto 0) := "00010000000000000000000000000000000";
    constant ap_ST_fsm_pp3_stage6 : STD_LOGIC_VECTOR (34 downto 0) := "00100000000000000000000000000000000";
    constant ap_ST_fsm_pp3_stage7 : STD_LOGIC_VECTOR (34 downto 0) := "01000000000000000000000000000000000";
    constant ap_ST_fsm_state188 : STD_LOGIC_VECTOR (34 downto 0) := "10000000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_12 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010010";
    constant ap_const_lv32_1C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011100";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_21 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100001";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_20 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100000";
    constant ap_const_lv32_13 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010011";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv32_18 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011000";
    constant ap_const_lv32_1E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011110";
    constant ap_const_lv32_1D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011101";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv32_15 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010101";
    constant ap_const_lv32_14 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010100";
    constant ap_const_lv32_1B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011011";
    constant ap_const_lv32_1A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011010";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_11 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010001";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_19 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011001";
    constant ap_const_lv7_0 : STD_LOGIC_VECTOR (6 downto 0) := "0000000";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv9_0 : STD_LOGIC_VECTOR (8 downto 0) := "000000000";
    constant ap_const_lv4_1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv12_0 : STD_LOGIC_VECTOR (11 downto 0) := "000000000000";
    constant ap_const_lv10_0 : STD_LOGIC_VECTOR (9 downto 0) := "0000000000";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv32_16 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010110";
    constant ap_const_lv64_0 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv32_3E000000 : STD_LOGIC_VECTOR (31 downto 0) := "00111110000000000000000000000000";
    constant ap_const_lv32_3E800000 : STD_LOGIC_VECTOR (31 downto 0) := "00111110100000000000000000000000";
    constant ap_const_lv64_3FC6A09E667F055A : STD_LOGIC_VECTOR (63 downto 0) := "0011111111000110101000001001111001100110011111110000010101011010";
    constant ap_const_lv64_400921FB54442D28 : STD_LOGIC_VECTOR (63 downto 0) := "0100000000001001001000011111101101010100010001000010110100101000";
    constant ap_const_lv64_3FB0000000000000 : STD_LOGIC_VECTOR (63 downto 0) := "0011111110110000000000000000000000000000000000000000000000000000";
    constant ap_const_lv7_40 : STD_LOGIC_VECTOR (6 downto 0) := "1000000";
    constant ap_const_lv7_1 : STD_LOGIC_VECTOR (6 downto 0) := "0000001";
    constant ap_const_lv4_8 : STD_LOGIC_VECTOR (3 downto 0) := "1000";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv9_1C0 : STD_LOGIC_VECTOR (8 downto 0) := "111000000";
    constant ap_const_lv9_1 : STD_LOGIC_VECTOR (8 downto 0) := "000000001";
    constant ap_const_lv8_40 : STD_LOGIC_VECTOR (7 downto 0) := "01000000";
    constant ap_const_lv8_1 : STD_LOGIC_VECTOR (7 downto 0) := "00000001";
    constant ap_const_lv12_C40 : STD_LOGIC_VECTOR (11 downto 0) := "110001000000";
    constant ap_const_lv12_1 : STD_LOGIC_VECTOR (11 downto 0) := "000000000001";
    constant ap_const_lv10_1C0 : STD_LOGIC_VECTOR (9 downto 0) := "0111000000";
    constant ap_const_lv10_1 : STD_LOGIC_VECTOR (9 downto 0) := "0000000001";
    constant ap_const_lv32_22 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100010";

    signal ap_CS_fsm : STD_LOGIC_VECTOR (34 downto 0) := "00000000000000000000000000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal indvar_flatten_reg_189 : STD_LOGIC_VECTOR (6 downto 0);
    signal m_0_reg_200 : STD_LOGIC_VECTOR (3 downto 0);
    signal n_0_reg_211 : STD_LOGIC_VECTOR (3 downto 0);
    signal indvar_flatten22_reg_222 : STD_LOGIC_VECTOR (8 downto 0);
    signal v_0_reg_233 : STD_LOGIC_VECTOR (3 downto 0);
    signal indvar_flatten6_reg_244 : STD_LOGIC_VECTOR (7 downto 0);
    signal m1_0_reg_255 : STD_LOGIC_VECTOR (3 downto 0);
    signal n2_0_reg_266 : STD_LOGIC_VECTOR (3 downto 0);
    signal indvar_flatten61_reg_277 : STD_LOGIC_VECTOR (8 downto 0);
    signal v3_0_reg_288 : STD_LOGIC_VECTOR (3 downto 0);
    signal indvar_flatten29_reg_299 : STD_LOGIC_VECTOR (7 downto 0);
    signal m4_0_reg_310 : STD_LOGIC_VECTOR (3 downto 0);
    signal n5_0_reg_321 : STD_LOGIC_VECTOR (3 downto 0);
    signal indvar_flatten142_reg_332 : STD_LOGIC_VECTOR (11 downto 0);
    signal k_0_reg_343 : STD_LOGIC_VECTOR (3 downto 0);
    signal indvar_flatten100_reg_354 : STD_LOGIC_VECTOR (9 downto 0);
    signal l_0_reg_365 : STD_LOGIC_VECTOR (3 downto 0);
    signal indvar_flatten68_reg_376 : STD_LOGIC_VECTOR (7 downto 0);
    signal m6_0_reg_387 : STD_LOGIC_VECTOR (3 downto 0);
    signal n7_0_reg_398 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_CS_fsm_pp0_stage1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage1 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC := '0';
    signal ap_block_state3_pp0_stage1_iter0 : BOOLEAN;
    signal ap_block_state9_pp0_stage1_iter1 : BOOLEAN;
    signal ap_block_pp0_stage1_11001 : BOOLEAN;
    signal icmp_ln317_reg_1318 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp1_stage1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp1_stage1 : signal is "none";
    signal ap_enable_reg_pp1_iter0 : STD_LOGIC := '0';
    signal ap_block_state14_pp1_stage1_iter0 : BOOLEAN;
    signal ap_block_state22_pp1_stage1_iter1 : BOOLEAN;
    signal ap_block_state30_pp1_stage1_iter2 : BOOLEAN;
    signal ap_block_state38_pp1_stage1_iter3 : BOOLEAN;
    signal ap_block_state46_pp1_stage1_iter4 : BOOLEAN;
    signal ap_block_state54_pp1_stage1_iter5 : BOOLEAN;
    signal ap_block_state62_pp1_stage1_iter6 : BOOLEAN;
    signal ap_block_pp1_stage1_11001 : BOOLEAN;
    signal icmp_ln330_reg_1347 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp2_stage1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp2_stage1 : signal is "none";
    signal ap_enable_reg_pp2_iter0 : STD_LOGIC := '0';
    signal ap_block_state70_pp2_stage1_iter0 : BOOLEAN;
    signal ap_block_state78_pp2_stage1_iter1 : BOOLEAN;
    signal ap_block_state86_pp2_stage1_iter2 : BOOLEAN;
    signal ap_block_state94_pp2_stage1_iter3 : BOOLEAN;
    signal ap_block_state102_pp2_stage1_iter4 : BOOLEAN;
    signal ap_block_state110_pp2_stage1_iter5 : BOOLEAN;
    signal ap_block_state118_pp2_stage1_iter6 : BOOLEAN;
    signal ap_block_pp2_stage1_11001 : BOOLEAN;
    signal icmp_ln345_reg_1404 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp3_stage2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp3_stage2 : signal is "none";
    signal ap_enable_reg_pp3_iter4 : STD_LOGIC := '0';
    signal ap_block_state128_pp3_stage2_iter0 : BOOLEAN;
    signal ap_block_state136_pp3_stage2_iter1 : BOOLEAN;
    signal ap_block_state144_pp3_stage2_iter2 : BOOLEAN;
    signal ap_block_state152_pp3_stage2_iter3 : BOOLEAN;
    signal ap_block_state160_pp3_stage2_iter4 : BOOLEAN;
    signal ap_block_state168_pp3_stage2_iter5 : BOOLEAN;
    signal ap_block_state176_pp3_stage2_iter6 : BOOLEAN;
    signal ap_block_state184_pp3_stage2_iter7 : BOOLEAN;
    signal ap_block_pp3_stage2_11001 : BOOLEAN;
    signal icmp_ln360_reg_1491 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln360_reg_1491_pp3_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_432_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_478 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_pp0_stage4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage4 : signal is "none";
    signal ap_block_state6_pp0_stage4_iter0 : BOOLEAN;
    signal ap_block_pp0_stage4_11001 : BOOLEAN;
    signal ap_CS_fsm_pp3_stage5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp3_stage5 : signal is "none";
    signal ap_block_state131_pp3_stage5_iter0 : BOOLEAN;
    signal ap_block_state139_pp3_stage5_iter1 : BOOLEAN;
    signal ap_block_state147_pp3_stage5_iter2 : BOOLEAN;
    signal ap_block_state155_pp3_stage5_iter3 : BOOLEAN;
    signal ap_block_state163_pp3_stage5_iter4 : BOOLEAN;
    signal ap_block_state171_pp3_stage5_iter5 : BOOLEAN;
    signal ap_block_state179_pp3_stage5_iter6 : BOOLEAN;
    signal ap_block_state187_pp3_stage5_iter7 : BOOLEAN;
    signal ap_block_pp3_stage5_11001 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage5 : signal is "none";
    signal ap_block_state7_pp0_stage5_iter0 : BOOLEAN;
    signal ap_block_pp0_stage5_11001 : BOOLEAN;
    signal ap_CS_fsm_pp1_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp1_stage0 : signal is "none";
    signal ap_enable_reg_pp1_iter6 : STD_LOGIC := '0';
    signal ap_block_state13_pp1_stage0_iter0 : BOOLEAN;
    signal ap_block_state21_pp1_stage0_iter1 : BOOLEAN;
    signal ap_block_state29_pp1_stage0_iter2 : BOOLEAN;
    signal ap_block_state37_pp1_stage0_iter3 : BOOLEAN;
    signal ap_block_state45_pp1_stage0_iter4 : BOOLEAN;
    signal ap_block_state53_pp1_stage0_iter5 : BOOLEAN;
    signal ap_block_state61_pp1_stage0_iter6 : BOOLEAN;
    signal ap_block_pp1_stage0_11001 : BOOLEAN;
    signal icmp_ln330_reg_1347_pp1_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_enable_reg_pp2_iter6 : STD_LOGIC := '0';
    signal icmp_ln345_reg_1404_pp2_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp3_stage7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp3_stage7 : signal is "none";
    signal ap_enable_reg_pp3_iter6 : STD_LOGIC := '0';
    signal ap_block_state133_pp3_stage7_iter0 : BOOLEAN;
    signal ap_block_state141_pp3_stage7_iter1 : BOOLEAN;
    signal ap_block_state149_pp3_stage7_iter2 : BOOLEAN;
    signal ap_block_state157_pp3_stage7_iter3 : BOOLEAN;
    signal ap_block_state165_pp3_stage7_iter4 : BOOLEAN;
    signal ap_block_state173_pp3_stage7_iter5 : BOOLEAN;
    signal ap_block_state181_pp3_stage7_iter6 : BOOLEAN;
    signal ap_block_pp3_stage7_11001 : BOOLEAN;
    signal icmp_ln360_reg_1491_pp3_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_443_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal reg_491 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_pp1_stage2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp1_stage2 : signal is "none";
    signal ap_block_state15_pp1_stage2_iter0 : BOOLEAN;
    signal ap_block_state23_pp1_stage2_iter1 : BOOLEAN;
    signal ap_block_state31_pp1_stage2_iter2 : BOOLEAN;
    signal ap_block_state39_pp1_stage2_iter3 : BOOLEAN;
    signal ap_block_state47_pp1_stage2_iter4 : BOOLEAN;
    signal ap_block_state55_pp1_stage2_iter5 : BOOLEAN;
    signal ap_block_state63_pp1_stage2_iter6 : BOOLEAN;
    signal ap_block_pp1_stage2_11001 : BOOLEAN;
    signal ap_CS_fsm_pp3_stage6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp3_stage6 : signal is "none";
    signal ap_block_state132_pp3_stage6_iter0 : BOOLEAN;
    signal ap_block_state140_pp3_stage6_iter1 : BOOLEAN;
    signal ap_block_state148_pp3_stage6_iter2 : BOOLEAN;
    signal ap_block_state156_pp3_stage6_iter3 : BOOLEAN;
    signal ap_block_state164_pp3_stage6_iter4 : BOOLEAN;
    signal ap_block_state172_pp3_stage6_iter5 : BOOLEAN;
    signal ap_block_state180_pp3_stage6_iter6 : BOOLEAN;
    signal ap_block_pp3_stage6_11001 : BOOLEAN;
    signal ap_CS_fsm_pp2_stage2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp2_stage2 : signal is "none";
    signal ap_block_state71_pp2_stage2_iter0 : BOOLEAN;
    signal ap_block_state79_pp2_stage2_iter1 : BOOLEAN;
    signal ap_block_state87_pp2_stage2_iter2 : BOOLEAN;
    signal ap_block_state95_pp2_stage2_iter3 : BOOLEAN;
    signal ap_block_state103_pp2_stage2_iter4 : BOOLEAN;
    signal ap_block_state111_pp2_stage2_iter5 : BOOLEAN;
    signal ap_block_state119_pp2_stage2_iter6 : BOOLEAN;
    signal ap_block_pp2_stage2_11001 : BOOLEAN;
    signal grp_fu_468_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal reg_496 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_pp1_stage6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp1_stage6 : signal is "none";
    signal ap_block_state19_pp1_stage6_iter0 : BOOLEAN;
    signal ap_block_state27_pp1_stage6_iter1 : BOOLEAN;
    signal ap_block_state35_pp1_stage6_iter2 : BOOLEAN;
    signal ap_block_state43_pp1_stage6_iter3 : BOOLEAN;
    signal ap_block_state51_pp1_stage6_iter4 : BOOLEAN;
    signal ap_block_state59_pp1_stage6_iter5 : BOOLEAN;
    signal ap_block_state67_pp1_stage6_iter6 : BOOLEAN;
    signal ap_block_pp1_stage6_11001 : BOOLEAN;
    signal ap_CS_fsm_pp2_stage6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp2_stage6 : signal is "none";
    signal ap_block_state75_pp2_stage6_iter0 : BOOLEAN;
    signal ap_block_state83_pp2_stage6_iter1 : BOOLEAN;
    signal ap_block_state91_pp2_stage6_iter2 : BOOLEAN;
    signal ap_block_state99_pp2_stage6_iter3 : BOOLEAN;
    signal ap_block_state107_pp2_stage6_iter4 : BOOLEAN;
    signal ap_block_state115_pp2_stage6_iter5 : BOOLEAN;
    signal ap_block_state123_pp2_stage6_iter6 : BOOLEAN;
    signal ap_block_pp2_stage6_11001 : BOOLEAN;
    signal ap_enable_reg_pp3_iter0 : STD_LOGIC := '0';
    signal grp_fu_460_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal reg_501 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_pp1_stage7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp1_stage7 : signal is "none";
    signal ap_block_state20_pp1_stage7_iter0 : BOOLEAN;
    signal ap_block_state28_pp1_stage7_iter1 : BOOLEAN;
    signal ap_block_state36_pp1_stage7_iter2 : BOOLEAN;
    signal ap_block_state44_pp1_stage7_iter3 : BOOLEAN;
    signal ap_block_state52_pp1_stage7_iter4 : BOOLEAN;
    signal ap_block_state60_pp1_stage7_iter5 : BOOLEAN;
    signal ap_block_pp1_stage7_11001 : BOOLEAN;
    signal reg_501_pp1_iter1_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal reg_501_pp1_iter2_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal reg_501_pp1_iter3_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal reg_501_pp1_iter4_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal reg_501_pp2_iter1_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_pp2_stage7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp2_stage7 : signal is "none";
    signal ap_block_state76_pp2_stage7_iter0 : BOOLEAN;
    signal ap_block_state84_pp2_stage7_iter1 : BOOLEAN;
    signal ap_block_state92_pp2_stage7_iter2 : BOOLEAN;
    signal ap_block_state100_pp2_stage7_iter3 : BOOLEAN;
    signal ap_block_state108_pp2_stage7_iter4 : BOOLEAN;
    signal ap_block_state116_pp2_stage7_iter5 : BOOLEAN;
    signal ap_block_state124_pp2_stage7_iter6 : BOOLEAN;
    signal ap_block_pp2_stage7_11001 : BOOLEAN;
    signal reg_501_pp2_iter2_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal reg_501_pp2_iter3_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal reg_501_pp2_iter4_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_pp3_stage4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp3_stage4 : signal is "none";
    signal ap_enable_reg_pp3_iter1 : STD_LOGIC := '0';
    signal ap_block_state130_pp3_stage4_iter0 : BOOLEAN;
    signal ap_block_state138_pp3_stage4_iter1 : BOOLEAN;
    signal ap_block_state146_pp3_stage4_iter2 : BOOLEAN;
    signal ap_block_state154_pp3_stage4_iter3 : BOOLEAN;
    signal ap_block_state162_pp3_stage4_iter4 : BOOLEAN;
    signal ap_block_state170_pp3_stage4_iter5 : BOOLEAN;
    signal ap_block_state178_pp3_stage4_iter6 : BOOLEAN;
    signal ap_block_state186_pp3_stage4_iter7 : BOOLEAN;
    signal ap_block_pp3_stage4_11001 : BOOLEAN;
    signal icmp_ln360_reg_1491_pp3_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_enable_reg_pp3_iter2 : STD_LOGIC := '0';
    signal icmp_ln360_reg_1491_pp3_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp3_stage3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp3_stage3 : signal is "none";
    signal ap_block_state129_pp3_stage3_iter0 : BOOLEAN;
    signal ap_block_state137_pp3_stage3_iter1 : BOOLEAN;
    signal ap_block_state145_pp3_stage3_iter2 : BOOLEAN;
    signal ap_block_state153_pp3_stage3_iter3 : BOOLEAN;
    signal ap_block_state161_pp3_stage3_iter4 : BOOLEAN;
    signal ap_block_state169_pp3_stage3_iter5 : BOOLEAN;
    signal ap_block_state177_pp3_stage3_iter6 : BOOLEAN;
    signal ap_block_state185_pp3_stage3_iter7 : BOOLEAN;
    signal ap_block_pp3_stage3_11001 : BOOLEAN;
    signal reg_507 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_pp1_stage3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp1_stage3 : signal is "none";
    signal ap_enable_reg_pp1_iter1 : STD_LOGIC := '0';
    signal ap_block_state16_pp1_stage3_iter0 : BOOLEAN;
    signal ap_block_state24_pp1_stage3_iter1 : BOOLEAN;
    signal ap_block_state32_pp1_stage3_iter2 : BOOLEAN;
    signal ap_block_state40_pp1_stage3_iter3 : BOOLEAN;
    signal ap_block_state48_pp1_stage3_iter4 : BOOLEAN;
    signal ap_block_state56_pp1_stage3_iter5 : BOOLEAN;
    signal ap_block_state64_pp1_stage3_iter6 : BOOLEAN;
    signal ap_block_pp1_stage3_11001 : BOOLEAN;
    signal icmp_ln330_reg_1347_pp1_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_enable_reg_pp1_iter2 : STD_LOGIC := '0';
    signal icmp_ln330_reg_1347_pp1_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp2_stage4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp2_stage4 : signal is "none";
    signal ap_enable_reg_pp2_iter1 : STD_LOGIC := '0';
    signal ap_block_state73_pp2_stage4_iter0 : BOOLEAN;
    signal ap_block_state81_pp2_stage4_iter1 : BOOLEAN;
    signal ap_block_state89_pp2_stage4_iter2 : BOOLEAN;
    signal ap_block_state97_pp2_stage4_iter3 : BOOLEAN;
    signal ap_block_state105_pp2_stage4_iter4 : BOOLEAN;
    signal ap_block_state113_pp2_stage4_iter5 : BOOLEAN;
    signal ap_block_state121_pp2_stage4_iter6 : BOOLEAN;
    signal ap_block_pp2_stage4_11001 : BOOLEAN;
    signal icmp_ln345_reg_1404_pp2_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_enable_reg_pp2_iter2 : STD_LOGIC := '0';
    signal icmp_ln345_reg_1404_pp2_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_sin_or_cos_double_s_fu_409_ap_return : STD_LOGIC_VECTOR (63 downto 0);
    signal reg_513 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_enable_reg_pp1_iter5 : STD_LOGIC := '0';
    signal ap_CS_fsm_pp2_stage3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp2_stage3 : signal is "none";
    signal ap_enable_reg_pp2_iter5 : STD_LOGIC := '0';
    signal ap_block_state72_pp2_stage3_iter0 : BOOLEAN;
    signal ap_block_state80_pp2_stage3_iter1 : BOOLEAN;
    signal ap_block_state88_pp2_stage3_iter2 : BOOLEAN;
    signal ap_block_state96_pp2_stage3_iter3 : BOOLEAN;
    signal ap_block_state104_pp2_stage3_iter4 : BOOLEAN;
    signal ap_block_state112_pp2_stage3_iter5 : BOOLEAN;
    signal ap_block_state120_pp2_stage3_iter6 : BOOLEAN;
    signal ap_block_pp2_stage3_11001 : BOOLEAN;
    signal icmp_ln345_reg_1404_pp2_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_enable_reg_pp3_iter5 : STD_LOGIC := '0';
    signal icmp_ln360_reg_1491_pp3_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal reg_518 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_pp3_stage1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp3_stage1 : signal is "none";
    signal ap_block_state127_pp3_stage1_iter0 : BOOLEAN;
    signal ap_block_state135_pp3_stage1_iter1 : BOOLEAN;
    signal ap_block_state143_pp3_stage1_iter2 : BOOLEAN;
    signal ap_block_state151_pp3_stage1_iter3 : BOOLEAN;
    signal ap_block_state159_pp3_stage1_iter4 : BOOLEAN;
    signal ap_block_state167_pp3_stage1_iter5 : BOOLEAN;
    signal ap_block_state175_pp3_stage1_iter6 : BOOLEAN;
    signal ap_block_state183_pp3_stage1_iter7 : BOOLEAN;
    signal ap_block_pp3_stage1_11001 : BOOLEAN;
    signal icmp_ln330_reg_1347_pp1_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp3_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp3_stage0 : signal is "none";
    signal ap_enable_reg_pp3_iter7 : STD_LOGIC := '0';
    signal ap_block_state126_pp3_stage0_iter0 : BOOLEAN;
    signal ap_block_state134_pp3_stage0_iter1 : BOOLEAN;
    signal ap_block_state142_pp3_stage0_iter2 : BOOLEAN;
    signal ap_block_state150_pp3_stage0_iter3 : BOOLEAN;
    signal ap_block_state158_pp3_stage0_iter4 : BOOLEAN;
    signal ap_block_state166_pp3_stage0_iter5 : BOOLEAN;
    signal ap_block_state174_pp3_stage0_iter6 : BOOLEAN;
    signal ap_block_state182_pp3_stage0_iter7 : BOOLEAN;
    signal ap_block_pp3_stage0_11001 : BOOLEAN;
    signal grp_fu_453_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_pp1_stage5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp1_stage5 : signal is "none";
    signal ap_block_state18_pp1_stage5_iter0 : BOOLEAN;
    signal ap_block_state26_pp1_stage5_iter1 : BOOLEAN;
    signal ap_block_state34_pp1_stage5_iter2 : BOOLEAN;
    signal ap_block_state42_pp1_stage5_iter3 : BOOLEAN;
    signal ap_block_state50_pp1_stage5_iter4 : BOOLEAN;
    signal ap_block_state58_pp1_stage5_iter5 : BOOLEAN;
    signal ap_block_state66_pp1_stage5_iter6 : BOOLEAN;
    signal ap_block_pp1_stage5_11001 : BOOLEAN;
    signal icmp_ln360_reg_1491_pp3_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln317_fu_534_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_block_state2_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal icmp_ln317_reg_1318_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln317_fu_540_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal add_ln317_reg_1322 : STD_LOGIC_VECTOR (6 downto 0);
    signal select_ln323_fu_558_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal select_ln323_reg_1327 : STD_LOGIC_VECTOR (3 downto 0);
    signal select_ln323_1_fu_566_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal select_ln323_1_reg_1332 : STD_LOGIC_VECTOR (3 downto 0);
    signal n_fu_601_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal n_reg_1342 : STD_LOGIC_VECTOR (3 downto 0);
    signal icmp_ln330_fu_606_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln330_reg_1347_pp1_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln330_reg_1347_pp1_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln330_fu_612_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal add_ln330_reg_1351 : STD_LOGIC_VECTOR (8 downto 0);
    signal select_ln330_1_fu_638_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal select_ln330_1_reg_1356 : STD_LOGIC_VECTOR (3 downto 0);
    signal select_ln330_1_reg_1356_pp1_iter1_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal select_ln330_1_reg_1356_pp1_iter2_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal select_ln330_1_reg_1356_pp1_iter3_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal select_ln330_1_reg_1356_pp1_iter4_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal select_ln330_1_reg_1356_pp1_iter5_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal select_ln338_fu_676_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal select_ln338_reg_1363 : STD_LOGIC_VECTOR (3 downto 0);
    signal select_ln338_1_fu_684_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal select_ln338_1_reg_1369 : STD_LOGIC_VECTOR (3 downto 0);
    signal select_ln332_fu_725_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln332_reg_1379 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln338_3_fu_757_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal n_1_fu_762_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal n_1_reg_1389 : STD_LOGIC_VECTOR (3 downto 0);
    signal dct_addr_1_reg_1394 : STD_LOGIC_VECTOR (5 downto 0);
    signal mul_ln353_fu_791_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal mul_ln353_reg_1399 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_CS_fsm_pp2_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp2_stage0 : signal is "none";
    signal ap_block_state69_pp2_stage0_iter0 : BOOLEAN;
    signal ap_block_state77_pp2_stage0_iter1 : BOOLEAN;
    signal ap_block_state85_pp2_stage0_iter2 : BOOLEAN;
    signal ap_block_state93_pp2_stage0_iter3 : BOOLEAN;
    signal ap_block_state101_pp2_stage0_iter4 : BOOLEAN;
    signal ap_block_state109_pp2_stage0_iter5 : BOOLEAN;
    signal ap_block_state117_pp2_stage0_iter6 : BOOLEAN;
    signal ap_block_pp2_stage0_11001 : BOOLEAN;
    signal icmp_ln345_fu_797_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln345_reg_1404_pp2_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln345_reg_1404_pp2_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln345_fu_803_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal add_ln345_reg_1408 : STD_LOGIC_VECTOR (8 downto 0);
    signal v_5_fu_809_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal v_5_reg_1413 : STD_LOGIC_VECTOR (3 downto 0);
    signal icmp_ln347_fu_815_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln347_reg_1418 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln345_1_fu_829_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal select_ln345_1_reg_1424 : STD_LOGIC_VECTOR (3 downto 0);
    signal select_ln345_1_reg_1424_pp2_iter1_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal select_ln345_1_reg_1424_pp2_iter2_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal select_ln345_1_reg_1424_pp2_iter3_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal select_ln345_1_reg_1424_pp2_iter4_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal select_ln345_1_reg_1424_pp2_iter5_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal and_ln345_fu_849_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln345_reg_1431 : STD_LOGIC_VECTOR (0 downto 0);
    signal m_15_fu_855_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal m_15_reg_1436 : STD_LOGIC_VECTOR (3 downto 0);
    signal select_ln353_fu_867_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal select_ln353_reg_1441 : STD_LOGIC_VECTOR (3 downto 0);
    signal select_ln353_1_fu_875_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal select_ln353_1_reg_1446 : STD_LOGIC_VECTOR (3 downto 0);
    signal add_ln347_1_fu_910_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln347_1_reg_1456 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln353_4_fu_956_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln347_fu_961_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln347_reg_1466 : STD_LOGIC_VECTOR (7 downto 0);
    signal n_2_fu_967_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal n_2_reg_1471 : STD_LOGIC_VECTOR (3 downto 0);
    signal dct_addr_2_reg_1476 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_fu_448_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal mul_ln370_fu_1004_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal mul_ln370_reg_1486 : STD_LOGIC_VECTOR (7 downto 0);
    signal icmp_ln360_fu_1010_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln360_reg_1491_pp3_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln360_fu_1016_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln360_reg_1495 : STD_LOGIC_VECTOR (11 downto 0);
    signal k_fu_1022_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal k_reg_1500 : STD_LOGIC_VECTOR (3 downto 0);
    signal icmp_ln362_fu_1028_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln362_reg_1505 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln360_fu_1034_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal select_ln360_reg_1511 : STD_LOGIC_VECTOR (3 downto 0);
    signal select_ln360_1_fu_1042_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal select_ln360_1_reg_1517 : STD_LOGIC_VECTOR (3 downto 0);
    signal and_ln360_1_fu_1074_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln360_1_reg_1524 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln362_fu_1086_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal select_ln362_reg_1530 : STD_LOGIC_VECTOR (3 downto 0);
    signal and_ln362_fu_1106_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln362_reg_1535 : STD_LOGIC_VECTOR (0 downto 0);
    signal m_16_fu_1112_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal m_16_reg_1541 : STD_LOGIC_VECTOR (3 downto 0);
    signal select_ln370_fu_1130_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal select_ln370_reg_1547 : STD_LOGIC_VECTOR (3 downto 0);
    signal select_ln370_reg_1547_pp3_iter1_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal select_ln370_reg_1547_pp3_iter2_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal select_ln370_reg_1547_pp3_iter3_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal select_ln370_reg_1547_pp3_iter4_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal select_ln364_fu_1144_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln364_reg_1554 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln362_1_fu_1152_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln362_1_reg_1559 : STD_LOGIC_VECTOR (9 downto 0);
    signal select_ln362_1_fu_1175_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal select_ln362_1_reg_1564 : STD_LOGIC_VECTOR (3 downto 0);
    signal select_ln370_1_fu_1188_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal select_ln370_1_reg_1570 : STD_LOGIC_VECTOR (3 downto 0);
    signal select_ln370_1_reg_1570_pp3_iter1_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal select_ln370_1_reg_1570_pp3_iter2_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal select_ln370_1_reg_1570_pp3_iter3_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal zext_ln370_4_fu_1221_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln362_3_fu_1226_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal select_ln362_3_reg_1581 : STD_LOGIC_VECTOR (9 downto 0);
    signal dct_addr_3_reg_1586 : STD_LOGIC_VECTOR (5 downto 0);
    signal dct_addr_3_reg_1586_pp3_iter1_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal dct_addr_3_reg_1586_pp3_iter2_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal dct_addr_3_reg_1586_pp3_iter3_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal dct_addr_3_reg_1586_pp3_iter4_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal dct_addr_3_reg_1586_pp3_iter5_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal dct_addr_3_reg_1586_pp3_iter6_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal dct_addr_3_reg_1586_pp3_iter7_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal zext_ln370_7_fu_1278_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_70_reg_1596 : STD_LOGIC_VECTOR (63 downto 0);
    signal n_3_fu_1283_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal n_3_reg_1601 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_i_i3_reg_1611 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_72_reg_1616 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_condition_pp0_exit_iter0_state2 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_block_pp0_stage5_subdone : BOOLEAN;
    signal ap_block_state5_pp0_stage3_iter0 : BOOLEAN;
    signal ap_block_state11_pp0_stage3_iter1 : BOOLEAN;
    signal ap_block_pp0_stage3_subdone : BOOLEAN;
    signal ap_CS_fsm_pp0_stage3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage3 : signal is "none";
    signal ap_CS_fsm_state12 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state12 : signal is "none";
    signal ap_block_pp1_stage0_subdone : BOOLEAN;
    signal ap_condition_pp1_exit_iter0_state13 : STD_LOGIC;
    signal ap_block_pp1_stage7_subdone : BOOLEAN;
    signal ap_block_pp1_stage6_subdone : BOOLEAN;
    signal ap_enable_reg_pp1_iter3 : STD_LOGIC := '0';
    signal ap_enable_reg_pp1_iter4 : STD_LOGIC := '0';
    signal ap_CS_fsm_state68 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state68 : signal is "none";
    signal ap_block_pp2_stage0_subdone : BOOLEAN;
    signal ap_condition_pp2_exit_iter0_state69 : STD_LOGIC;
    signal ap_block_pp2_stage7_subdone : BOOLEAN;
    signal ap_enable_reg_pp2_iter3 : STD_LOGIC := '0';
    signal ap_enable_reg_pp2_iter4 : STD_LOGIC := '0';
    signal ap_CS_fsm_state125 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state125 : signal is "none";
    signal ap_block_pp3_stage0_subdone : BOOLEAN;
    signal ap_condition_pp3_exit_iter0_state126 : STD_LOGIC;
    signal ap_block_pp3_stage7_subdone : BOOLEAN;
    signal ap_block_pp3_stage5_subdone : BOOLEAN;
    signal ap_enable_reg_pp3_iter3 : STD_LOGIC := '0';
    signal grp_sin_or_cos_double_s_fu_409_ap_start : STD_LOGIC;
    signal grp_sin_or_cos_double_s_fu_409_ap_done : STD_LOGIC;
    signal grp_sin_or_cos_double_s_fu_409_ap_idle : STD_LOGIC;
    signal grp_sin_or_cos_double_s_fu_409_ap_ready : STD_LOGIC;
    signal grp_sin_or_cos_double_s_fu_409_t_in : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_phi_mux_indvar_flatten_phi_fu_193_p4 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal ap_phi_mux_m_0_phi_fu_204_p4 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_phi_mux_n_0_phi_fu_215_p4 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_phi_mux_indvar_flatten22_phi_fu_226_p4 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_block_pp1_stage0 : BOOLEAN;
    signal ap_phi_mux_v_0_phi_fu_237_p4 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_phi_mux_indvar_flatten6_phi_fu_248_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_mux_m1_0_phi_fu_259_p4 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_phi_mux_n2_0_phi_fu_270_p4 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_phi_mux_indvar_flatten61_phi_fu_281_p4 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_block_pp2_stage0 : BOOLEAN;
    signal ap_phi_mux_v3_0_phi_fu_292_p4 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_phi_mux_indvar_flatten29_phi_fu_303_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_mux_m4_0_phi_fu_314_p4 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_phi_mux_n5_0_phi_fu_325_p4 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_phi_mux_indvar_flatten142_phi_fu_336_p4 : STD_LOGIC_VECTOR (11 downto 0);
    signal ap_block_pp3_stage0 : BOOLEAN;
    signal ap_phi_mux_k_0_phi_fu_347_p4 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_phi_mux_indvar_flatten100_phi_fu_358_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_phi_mux_l_0_phi_fu_369_p4 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_phi_mux_indvar_flatten68_phi_fu_380_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_mux_m6_0_phi_fu_391_p4 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_phi_mux_n7_0_phi_fu_402_p4 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_sin_or_cos_double_s_fu_409_ap_start_reg : STD_LOGIC := '0';
    signal ap_block_pp1_stage2 : BOOLEAN;
    signal ap_block_pp2_stage3 : BOOLEAN;
    signal ap_block_pp3_stage3 : BOOLEAN;
    signal ap_block_pp3_stage4 : BOOLEAN;
    signal ap_block_pp1_stage3 : BOOLEAN;
    signal ap_block_pp2_stage4 : BOOLEAN;
    signal ap_block_pp3_stage5 : BOOLEAN;
    signal ap_block_pp1_stage6 : BOOLEAN;
    signal ap_block_pp1_stage7 : BOOLEAN;
    signal ap_block_pp2_stage7 : BOOLEAN;
    signal ap_block_pp3_stage7 : BOOLEAN;
    signal ap_block_pp3_stage1 : BOOLEAN;
    signal ap_CS_fsm_pp1_stage4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp1_stage4 : signal is "none";
    signal ap_block_pp1_stage4 : BOOLEAN;
    signal ap_block_pp1_stage5 : BOOLEAN;
    signal ap_CS_fsm_pp2_stage5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp2_stage5 : signal is "none";
    signal ap_block_pp2_stage5 : BOOLEAN;
    signal ap_block_pp2_stage6 : BOOLEAN;
    signal ap_block_pp3_stage6 : BOOLEAN;
    signal zext_ln323_1_fu_596_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln338_1_fu_714_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln330_1_fu_767_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln353_6_fu_905_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln353_1_fu_979_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln370_1_fu_1252_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp3_stage2 : BOOLEAN;
    signal zext_ln370_8_fu_1308_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage4 : BOOLEAN;
    signal ap_block_pp0_stage3_11001 : BOOLEAN;
    signal grp_fu_426_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_pp0_stage3 : BOOLEAN;
    signal grp_fu_439_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_pp0_stage5 : BOOLEAN;
    signal grp_fu_432_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_pp0_stage1 : BOOLEAN;
    signal grp_fu_443_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_pp1_stage1 : BOOLEAN;
    signal ap_block_pp2_stage1 : BOOLEAN;
    signal grp_fu_453_p0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_453_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp2_stage2 : BOOLEAN;
    signal grp_fu_460_p0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_460_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_468_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln320_fu_552_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal m_fu_546_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_76_fu_574_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal zext_ln323_fu_586_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln321_fu_582_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln323_fu_590_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal icmp_ln332_fu_624_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal v_fu_618_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal icmp_ln335_fu_652_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln330_fu_646_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln330_fu_630_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal and_ln330_fu_658_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln338_1_fu_670_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal m_14_fu_664_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_77_fu_692_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal zext_ln338_fu_704_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln332_fu_700_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln338_fu_708_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln332_1_fu_719_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal shl_ln338_fu_736_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal or_ln338_fu_741_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal mul_ln338_fu_751_p0 : STD_LOGIC_VECTOR (3 downto 0);
    signal mul_ln338_fu_751_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal mul_ln338_fu_751_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal shl_ln353_fu_775_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal or_ln353_fu_781_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal mul_ln353_fu_791_p0 : STD_LOGIC_VECTOR (3 downto 0);
    signal mul_ln353_fu_791_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal icmp_ln350_fu_843_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln345_fu_837_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln345_fu_821_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal or_ln353_1_fu_861_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_79_fu_883_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal zext_ln353_5_fu_895_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln353_2_fu_891_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln353_fu_899_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln345_2_fu_919_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal shl_ln353_1_fu_928_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal or_ln353_2_fu_933_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal mul_ln353_1_fu_943_p0 : STD_LOGIC_VECTOR (3 downto 0);
    signal mul_ln353_1_fu_943_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal mul_ln353_1_fu_943_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln345_2_fu_922_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln353_2_fu_949_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_78_fu_972_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal shl_ln370_fu_988_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal or_ln370_fu_994_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal mul_ln370_fu_1004_p0 : STD_LOGIC_VECTOR (3 downto 0);
    signal mul_ln370_fu_1004_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal icmp_ln367_fu_1056_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln360_fu_1050_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln364_fu_1068_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln362_fu_1080_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln362_fu_1094_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln360_fu_1062_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln362_1_fu_1100_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln370_2_fu_1118_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln370_4_fu_1124_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln364_1_fu_1138_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln360_2_fu_1161_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal l_fu_1170_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal zext_ln360_1_fu_1158_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln360_2_fu_1164_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal shl_ln370_1_fu_1193_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal or_ln370_3_fu_1198_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal mul_ln370_2_fu_1208_p0 : STD_LOGIC_VECTOR (3 downto 0);
    signal mul_ln370_2_fu_1208_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal mul_ln370_2_fu_1208_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln362_2_fu_1181_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln370_2_fu_1214_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_80_fu_1232_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal zext_ln362_fu_1239_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln362_1_fu_1243_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln370_fu_1246_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal shl_ln370_2_fu_1257_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal or_ln370_1_fu_1262_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal mul_ln370_1_fu_1272_p0 : STD_LOGIC_VECTOR (3 downto 0);
    signal mul_ln370_1_fu_1272_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal mul_ln370_1_fu_1272_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_81_fu_1288_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal zext_ln370_2_fu_1295_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln370_5_fu_1299_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln370_1_fu_1302_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_CS_fsm_state188 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state188 : signal is "none";
    signal ap_NS_fsm : STD_LOGIC_VECTOR (34 downto 0);
    signal ap_block_pp0_stage1_subdone : BOOLEAN;
    signal ap_block_state4_pp0_stage2_iter0 : BOOLEAN;
    signal ap_block_state10_pp0_stage2_iter1 : BOOLEAN;
    signal ap_block_pp0_stage2_subdone : BOOLEAN;
    signal ap_block_pp0_stage4_subdone : BOOLEAN;
    signal ap_block_pp1_stage1_subdone : BOOLEAN;
    signal ap_block_pp1_stage2_subdone : BOOLEAN;
    signal ap_block_pp1_stage3_subdone : BOOLEAN;
    signal ap_block_state17_pp1_stage4_iter0 : BOOLEAN;
    signal ap_block_state25_pp1_stage4_iter1 : BOOLEAN;
    signal ap_block_state33_pp1_stage4_iter2 : BOOLEAN;
    signal ap_block_state41_pp1_stage4_iter3 : BOOLEAN;
    signal ap_block_state49_pp1_stage4_iter4 : BOOLEAN;
    signal ap_block_state57_pp1_stage4_iter5 : BOOLEAN;
    signal ap_block_state65_pp1_stage4_iter6 : BOOLEAN;
    signal ap_block_pp1_stage4_subdone : BOOLEAN;
    signal ap_block_pp1_stage5_subdone : BOOLEAN;
    signal ap_block_pp2_stage1_subdone : BOOLEAN;
    signal ap_block_pp2_stage2_subdone : BOOLEAN;
    signal ap_block_pp2_stage3_subdone : BOOLEAN;
    signal ap_block_pp2_stage4_subdone : BOOLEAN;
    signal ap_block_state74_pp2_stage5_iter0 : BOOLEAN;
    signal ap_block_state82_pp2_stage5_iter1 : BOOLEAN;
    signal ap_block_state90_pp2_stage5_iter2 : BOOLEAN;
    signal ap_block_state98_pp2_stage5_iter3 : BOOLEAN;
    signal ap_block_state106_pp2_stage5_iter4 : BOOLEAN;
    signal ap_block_state114_pp2_stage5_iter5 : BOOLEAN;
    signal ap_block_state122_pp2_stage5_iter6 : BOOLEAN;
    signal ap_block_pp2_stage5_subdone : BOOLEAN;
    signal ap_block_pp2_stage6_subdone : BOOLEAN;
    signal ap_block_pp3_stage1_subdone : BOOLEAN;
    signal ap_block_pp3_stage2_subdone : BOOLEAN;
    signal ap_block_pp3_stage3_subdone : BOOLEAN;
    signal ap_block_pp3_stage4_subdone : BOOLEAN;
    signal ap_block_pp3_stage6_subdone : BOOLEAN;
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_idle_pp1 : STD_LOGIC;
    signal ap_enable_pp1 : STD_LOGIC;
    signal ap_idle_pp2 : STD_LOGIC;
    signal ap_enable_pp2 : STD_LOGIC;
    signal ap_idle_pp3 : STD_LOGIC;
    signal ap_enable_pp3 : STD_LOGIC;
    signal mul_ln338_fu_751_p00 : STD_LOGIC_VECTOR (7 downto 0);
    signal mul_ln338_fu_751_p10 : STD_LOGIC_VECTOR (7 downto 0);
    signal mul_ln353_1_fu_943_p00 : STD_LOGIC_VECTOR (7 downto 0);
    signal mul_ln353_1_fu_943_p10 : STD_LOGIC_VECTOR (7 downto 0);
    signal mul_ln353_fu_791_p00 : STD_LOGIC_VECTOR (7 downto 0);
    signal mul_ln353_fu_791_p10 : STD_LOGIC_VECTOR (7 downto 0);
    signal mul_ln370_1_fu_1272_p00 : STD_LOGIC_VECTOR (7 downto 0);
    signal mul_ln370_2_fu_1208_p00 : STD_LOGIC_VECTOR (7 downto 0);
    signal mul_ln370_fu_1004_p00 : STD_LOGIC_VECTOR (7 downto 0);
    signal mul_ln370_fu_1004_p10 : STD_LOGIC_VECTOR (7 downto 0);

    component sin_or_cos_double_s IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ap_ce : IN STD_LOGIC;
        t_in : IN STD_LOGIC_VECTOR (63 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component pic_detec_fadd_32pcA IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component pic_detec_fmul_32qcK IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component pic_detec_fptruncrcU IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (63 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component pic_detec_fpext_3sc4 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component pic_detec_dadd_64tde IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (63 downto 0);
        din1 : IN STD_LOGIC_VECTOR (63 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component pic_detec_dmul_64udo IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (63 downto 0);
        din1 : IN STD_LOGIC_VECTOR (63 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component pic_detec_sitodp_vdy IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (63 downto 0) );
    end component;



begin
    grp_sin_or_cos_double_s_fu_409 : component sin_or_cos_double_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_sin_or_cos_double_s_fu_409_ap_start,
        ap_done => grp_sin_or_cos_double_s_fu_409_ap_done,
        ap_idle => grp_sin_or_cos_double_s_fu_409_ap_idle,
        ap_ready => grp_sin_or_cos_double_s_fu_409_ap_ready,
        ap_ce => ap_const_logic_1,
        t_in => grp_sin_or_cos_double_s_fu_409_t_in,
        ap_return => grp_sin_or_cos_double_s_fu_409_ap_return);

    pic_detec_fadd_32pcA_U28 : component pic_detec_fadd_32pcA
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => dct_r_q0,
        din1 => reg_478,
        ce => ap_const_logic_1,
        dout => grp_fu_426_p2);

    pic_detec_fmul_32qcK_U29 : component pic_detec_fmul_32qcK
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => ori_q0,
        din1 => grp_fu_432_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_432_p2);

    pic_detec_fptruncrcU_U30 : component pic_detec_fptruncrcU
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 64,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_453_p2,
        ce => ap_const_logic_1,
        dout => grp_fu_439_p1);

    pic_detec_fpext_3sc4_U31 : component pic_detec_fpext_3sc4
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 32,
        dout_WIDTH => 64)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_443_p0,
        ce => ap_const_logic_1,
        dout => grp_fu_443_p1);

    pic_detec_fpext_3sc4_U32 : component pic_detec_fpext_3sc4
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 32,
        dout_WIDTH => 64)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => dct_r_q0,
        ce => ap_const_logic_1,
        dout => grp_fu_448_p1);

    pic_detec_dadd_64tde_U33 : component pic_detec_dadd_64tde
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 64,
        din1_WIDTH => 64,
        dout_WIDTH => 64)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_453_p0,
        din1 => grp_fu_453_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_453_p2);

    pic_detec_dmul_64udo_U34 : component pic_detec_dmul_64udo
    generic map (
        ID => 1,
        NUM_STAGE => 6,
        din0_WIDTH => 64,
        din1_WIDTH => 64,
        dout_WIDTH => 64)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_460_p0,
        din1 => grp_fu_460_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_460_p2);

    pic_detec_sitodp_vdy_U35 : component pic_detec_sitodp_vdy
    generic map (
        ID => 1,
        NUM_STAGE => 6,
        din0_WIDTH => 32,
        dout_WIDTH => 64)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_468_p0,
        ce => ap_const_logic_1,
        dout => grp_fu_468_p1);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_condition_pp0_exit_iter0_state2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
                elsif (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if ((((ap_const_boolean_0 = ap_block_pp0_stage3_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_boolean_0 = ap_block_pp0_stage5_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5)))) then 
                    ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                elsif (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (ap_const_logic_1 = ap_condition_pp1_exit_iter0_state13) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
                    ap_enable_reg_pp1_iter0 <= ap_const_logic_0;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
                    ap_enable_reg_pp1_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp1_stage7_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage7))) then 
                    ap_enable_reg_pp1_iter1 <= ap_enable_reg_pp1_iter0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter2 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp1_stage7_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage7))) then 
                    ap_enable_reg_pp1_iter2 <= ap_enable_reg_pp1_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter3 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp1_stage7_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage7))) then 
                    ap_enable_reg_pp1_iter3 <= ap_enable_reg_pp1_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter4 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp1_stage7_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage7))) then 
                    ap_enable_reg_pp1_iter4 <= ap_enable_reg_pp1_iter3;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter5 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp1_stage7_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage7))) then 
                    ap_enable_reg_pp1_iter5 <= ap_enable_reg_pp1_iter4;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter6_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter6 <= ap_const_logic_0;
            else
                if ((((ap_const_boolean_0 = ap_block_pp1_stage7_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage7)) or ((ap_const_boolean_0 = ap_block_pp1_stage6_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage6)))) then 
                    ap_enable_reg_pp1_iter6 <= ap_enable_reg_pp1_iter5;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
                    ap_enable_reg_pp1_iter6 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp2_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp2_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp2_stage0_subdone) and (ap_const_logic_1 = ap_condition_pp2_exit_iter0_state69) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0))) then 
                    ap_enable_reg_pp2_iter0 <= ap_const_logic_0;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state68)) then 
                    ap_enable_reg_pp2_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp2_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp2_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp2_stage7_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage7))) then 
                    ap_enable_reg_pp2_iter1 <= ap_enable_reg_pp2_iter0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp2_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp2_iter2 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp2_stage7_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage7))) then 
                    ap_enable_reg_pp2_iter2 <= ap_enable_reg_pp2_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp2_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp2_iter3 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp2_stage7_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage7))) then 
                    ap_enable_reg_pp2_iter3 <= ap_enable_reg_pp2_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp2_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp2_iter4 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp2_stage7_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage7))) then 
                    ap_enable_reg_pp2_iter4 <= ap_enable_reg_pp2_iter3;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp2_iter5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp2_iter5 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp2_stage7_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage7))) then 
                    ap_enable_reg_pp2_iter5 <= ap_enable_reg_pp2_iter4;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp2_iter6_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp2_iter6 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp2_stage7_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage7))) then 
                    ap_enable_reg_pp2_iter6 <= ap_enable_reg_pp2_iter5;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state68)) then 
                    ap_enable_reg_pp2_iter6 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp3_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp3_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp3_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0) and (ap_const_logic_1 = ap_condition_pp3_exit_iter0_state126))) then 
                    ap_enable_reg_pp3_iter0 <= ap_const_logic_0;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state125)) then 
                    ap_enable_reg_pp3_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp3_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp3_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp3_stage7) and (ap_const_boolean_0 = ap_block_pp3_stage7_subdone))) then 
                    ap_enable_reg_pp3_iter1 <= ap_enable_reg_pp3_iter0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp3_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp3_iter2 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp3_stage7) and (ap_const_boolean_0 = ap_block_pp3_stage7_subdone))) then 
                    ap_enable_reg_pp3_iter2 <= ap_enable_reg_pp3_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp3_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp3_iter3 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp3_stage7) and (ap_const_boolean_0 = ap_block_pp3_stage7_subdone))) then 
                    ap_enable_reg_pp3_iter3 <= ap_enable_reg_pp3_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp3_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp3_iter4 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp3_stage7) and (ap_const_boolean_0 = ap_block_pp3_stage7_subdone))) then 
                    ap_enable_reg_pp3_iter4 <= ap_enable_reg_pp3_iter3;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp3_iter5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp3_iter5 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp3_stage7) and (ap_const_boolean_0 = ap_block_pp3_stage7_subdone))) then 
                    ap_enable_reg_pp3_iter5 <= ap_enable_reg_pp3_iter4;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp3_iter6_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp3_iter6 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp3_stage7) and (ap_const_boolean_0 = ap_block_pp3_stage7_subdone))) then 
                    ap_enable_reg_pp3_iter6 <= ap_enable_reg_pp3_iter5;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp3_iter7_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp3_iter7 <= ap_const_logic_0;
            else
                if ((((ap_const_logic_1 = ap_CS_fsm_pp3_stage7) and (ap_const_boolean_0 = ap_block_pp3_stage7_subdone)) or ((ap_const_logic_1 = ap_CS_fsm_pp3_stage5) and (ap_const_boolean_0 = ap_block_pp3_stage5_subdone)))) then 
                    ap_enable_reg_pp3_iter7 <= ap_enable_reg_pp3_iter6;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state125)) then 
                    ap_enable_reg_pp3_iter7 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_sin_or_cos_double_s_fu_409_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_sin_or_cos_double_s_fu_409_ap_start_reg <= ap_const_logic_0;
            else
                if ((((ap_const_boolean_0 = ap_block_pp3_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage3) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (icmp_ln360_reg_1491_pp3_iter2_reg = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_pp2_stage2_11001) and (ap_enable_reg_pp2_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage2) and (icmp_ln345_reg_1404_pp2_iter2_reg = ap_const_lv1_0)) or ((ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage2) and (ap_const_boolean_0 = ap_block_pp3_stage2_11001) and (icmp_ln360_reg_1491_pp3_iter2_reg = ap_const_lv1_0)) or ((ap_enable_reg_pp1_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage1) and (ap_const_boolean_0 = ap_block_pp1_stage1_11001) and (icmp_ln330_reg_1347_pp1_iter2_reg = ap_const_lv1_0)))) then 
                    grp_sin_or_cos_double_s_fu_409_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_sin_or_cos_double_s_fu_409_ap_ready = ap_const_logic_1)) then 
                    grp_sin_or_cos_double_s_fu_409_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    indvar_flatten100_reg_354_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state125)) then 
                indvar_flatten100_reg_354 <= ap_const_lv10_0;
            elsif (((ap_const_boolean_0 = ap_block_pp3_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0) and (ap_enable_reg_pp3_iter1 = ap_const_logic_1) and (icmp_ln360_reg_1491 = ap_const_lv1_0))) then 
                indvar_flatten100_reg_354 <= select_ln362_3_reg_1581;
            end if; 
        end if;
    end process;

    indvar_flatten142_reg_332_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state125)) then 
                indvar_flatten142_reg_332 <= ap_const_lv12_0;
            elsif (((ap_const_boolean_0 = ap_block_pp3_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0) and (ap_enable_reg_pp3_iter1 = ap_const_logic_1) and (icmp_ln360_reg_1491 = ap_const_lv1_0))) then 
                indvar_flatten142_reg_332 <= add_ln360_reg_1495;
            end if; 
        end if;
    end process;

    indvar_flatten22_reg_222_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
                indvar_flatten22_reg_222 <= ap_const_lv9_0;
            elsif (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (icmp_ln330_reg_1347 = ap_const_lv1_0))) then 
                indvar_flatten22_reg_222 <= add_ln330_reg_1351;
            end if; 
        end if;
    end process;

    indvar_flatten29_reg_299_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state68)) then 
                indvar_flatten29_reg_299 <= ap_const_lv8_0;
            elsif (((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (icmp_ln345_reg_1404 = ap_const_lv1_0))) then 
                indvar_flatten29_reg_299 <= select_ln347_reg_1466;
            end if; 
        end if;
    end process;

    indvar_flatten61_reg_277_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state68)) then 
                indvar_flatten61_reg_277 <= ap_const_lv9_0;
            elsif (((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (icmp_ln345_reg_1404 = ap_const_lv1_0))) then 
                indvar_flatten61_reg_277 <= add_ln345_reg_1408;
            end if; 
        end if;
    end process;

    indvar_flatten68_reg_376_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state125)) then 
                indvar_flatten68_reg_376 <= ap_const_lv8_0;
            elsif (((ap_const_boolean_0 = ap_block_pp3_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0) and (ap_enable_reg_pp3_iter1 = ap_const_logic_1) and (icmp_ln360_reg_1491 = ap_const_lv1_0))) then 
                indvar_flatten68_reg_376 <= select_ln364_reg_1554;
            end if; 
        end if;
    end process;

    indvar_flatten6_reg_244_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
                indvar_flatten6_reg_244 <= ap_const_lv8_0;
            elsif (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (icmp_ln330_reg_1347 = ap_const_lv1_0))) then 
                indvar_flatten6_reg_244 <= select_ln332_reg_1379;
            end if; 
        end if;
    end process;

    indvar_flatten_reg_189_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln317_reg_1318 = ap_const_lv1_0))) then 
                indvar_flatten_reg_189 <= add_ln317_reg_1322;
            elsif (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                indvar_flatten_reg_189 <= ap_const_lv7_0;
            end if; 
        end if;
    end process;

    k_0_reg_343_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state125)) then 
                k_0_reg_343 <= ap_const_lv4_1;
            elsif (((ap_const_boolean_0 = ap_block_pp3_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0) and (ap_enable_reg_pp3_iter1 = ap_const_logic_1) and (icmp_ln360_reg_1491 = ap_const_lv1_0))) then 
                k_0_reg_343 <= select_ln360_1_reg_1517;
            end if; 
        end if;
    end process;

    l_0_reg_365_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state125)) then 
                l_0_reg_365 <= ap_const_lv4_1;
            elsif (((ap_const_boolean_0 = ap_block_pp3_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0) and (ap_enable_reg_pp3_iter1 = ap_const_logic_1) and (icmp_ln360_reg_1491 = ap_const_lv1_0))) then 
                l_0_reg_365 <= select_ln362_1_reg_1564;
            end if; 
        end if;
    end process;

    m1_0_reg_255_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
                m1_0_reg_255 <= ap_const_lv4_0;
            elsif (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (icmp_ln330_reg_1347 = ap_const_lv1_0))) then 
                m1_0_reg_255 <= select_ln338_1_reg_1369;
            end if; 
        end if;
    end process;

    m4_0_reg_310_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state68)) then 
                m4_0_reg_310 <= ap_const_lv4_0;
            elsif (((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (icmp_ln345_reg_1404 = ap_const_lv1_0))) then 
                m4_0_reg_310 <= select_ln353_1_reg_1446;
            end if; 
        end if;
    end process;

    m6_0_reg_387_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state125)) then 
                m6_0_reg_387 <= ap_const_lv4_0;
            elsif (((ap_const_boolean_0 = ap_block_pp3_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0) and (ap_enable_reg_pp3_iter1 = ap_const_logic_1) and (icmp_ln360_reg_1491 = ap_const_lv1_0))) then 
                m6_0_reg_387 <= select_ln370_1_reg_1570;
            end if; 
        end if;
    end process;

    m_0_reg_200_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln317_reg_1318 = ap_const_lv1_0))) then 
                m_0_reg_200 <= select_ln323_1_reg_1332;
            elsif (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                m_0_reg_200 <= ap_const_lv4_0;
            end if; 
        end if;
    end process;

    n2_0_reg_266_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
                n2_0_reg_266 <= ap_const_lv4_0;
            elsif (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (icmp_ln330_reg_1347 = ap_const_lv1_0))) then 
                n2_0_reg_266 <= n_1_reg_1389;
            end if; 
        end if;
    end process;

    n5_0_reg_321_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state68)) then 
                n5_0_reg_321 <= ap_const_lv4_0;
            elsif (((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (icmp_ln345_reg_1404 = ap_const_lv1_0))) then 
                n5_0_reg_321 <= n_2_reg_1471;
            end if; 
        end if;
    end process;

    n7_0_reg_398_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state125)) then 
                n7_0_reg_398 <= ap_const_lv4_0;
            elsif (((ap_const_boolean_0 = ap_block_pp3_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0) and (ap_enable_reg_pp3_iter1 = ap_const_logic_1) and (icmp_ln360_reg_1491 = ap_const_lv1_0))) then 
                n7_0_reg_398 <= n_3_reg_1601;
            end if; 
        end if;
    end process;

    n_0_reg_211_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln317_reg_1318 = ap_const_lv1_0))) then 
                n_0_reg_211 <= n_reg_1342;
            elsif (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                n_0_reg_211 <= ap_const_lv4_0;
            end if; 
        end if;
    end process;

    v3_0_reg_288_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state68)) then 
                v3_0_reg_288 <= ap_const_lv4_1;
            elsif (((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (icmp_ln345_reg_1404 = ap_const_lv1_0))) then 
                v3_0_reg_288 <= select_ln345_1_reg_1424;
            end if; 
        end if;
    end process;

    v_0_reg_233_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
                v_0_reg_233 <= ap_const_lv4_1;
            elsif (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (icmp_ln330_reg_1347 = ap_const_lv1_0))) then 
                v_0_reg_233 <= select_ln330_1_reg_1356;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then
                add_ln317_reg_1322 <= add_ln317_fu_540_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1))) then
                add_ln330_reg_1351 <= add_ln330_fu_612_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1))) then
                add_ln345_reg_1408 <= add_ln345_fu_803_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (icmp_ln345_fu_797_p2 = ap_const_lv1_0))) then
                add_ln347_1_reg_1456 <= add_ln347_1_fu_910_p2;
                and_ln345_reg_1431 <= and_ln345_fu_849_p2;
                icmp_ln347_reg_1418 <= icmp_ln347_fu_815_p2;
                m_15_reg_1436 <= m_15_fu_855_p2;
                select_ln353_reg_1441 <= select_ln353_fu_867_p3;
                v_5_reg_1413 <= v_5_fu_809_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp3_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0) and (ap_enable_reg_pp3_iter0 = ap_const_logic_1))) then
                add_ln360_reg_1495 <= add_ln360_fu_1016_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp3_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0) and (icmp_ln360_fu_1010_p2 = ap_const_lv1_0))) then
                add_ln362_1_reg_1559 <= add_ln362_1_fu_1152_p2;
                and_ln360_1_reg_1524 <= and_ln360_1_fu_1074_p2;
                and_ln362_reg_1535 <= and_ln362_fu_1106_p2;
                icmp_ln362_reg_1505 <= icmp_ln362_fu_1028_p2;
                k_reg_1500 <= k_fu_1022_p2;
                m_16_reg_1541 <= m_16_fu_1112_p2;
                select_ln360_reg_1511 <= select_ln360_fu_1034_p3;
                select_ln362_reg_1530 <= select_ln362_fu_1086_p3;
                select_ln370_reg_1547 <= select_ln370_fu_1130_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp1_stage7_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage7) and (icmp_ln330_reg_1347_pp1_iter5_reg = ap_const_lv1_0))) then
                    dct_addr_1_reg_1394(3 downto 0) <= zext_ln330_1_fu_767_p1(6 - 1 downto 0)(3 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (icmp_ln345_reg_1404_pp2_iter5_reg = ap_const_lv1_0))) then
                    dct_addr_2_reg_1476(5 downto 3) <= zext_ln353_1_fu_979_p1(6 - 1 downto 0)(5 downto 3);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp3_stage2) and (ap_const_boolean_0 = ap_block_pp3_stage2_11001) and (icmp_ln360_reg_1491 = ap_const_lv1_0))) then
                dct_addr_3_reg_1586 <= zext_ln370_1_fu_1252_p1(6 - 1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp3_stage2) and (ap_const_boolean_0 = ap_block_pp3_stage2_11001))) then
                dct_addr_3_reg_1586_pp3_iter1_reg <= dct_addr_3_reg_1586;
                dct_addr_3_reg_1586_pp3_iter2_reg <= dct_addr_3_reg_1586_pp3_iter1_reg;
                dct_addr_3_reg_1586_pp3_iter3_reg <= dct_addr_3_reg_1586_pp3_iter2_reg;
                dct_addr_3_reg_1586_pp3_iter4_reg <= dct_addr_3_reg_1586_pp3_iter3_reg;
                dct_addr_3_reg_1586_pp3_iter5_reg <= dct_addr_3_reg_1586_pp3_iter4_reg;
                dct_addr_3_reg_1586_pp3_iter6_reg <= dct_addr_3_reg_1586_pp3_iter5_reg;
                dct_addr_3_reg_1586_pp3_iter7_reg <= dct_addr_3_reg_1586_pp3_iter6_reg;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                icmp_ln317_reg_1318 <= icmp_ln317_fu_534_p2;
                icmp_ln317_reg_1318_pp0_iter1_reg <= icmp_ln317_reg_1318;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                icmp_ln330_reg_1347 <= icmp_ln330_fu_606_p2;
                icmp_ln330_reg_1347_pp1_iter1_reg <= icmp_ln330_reg_1347;
                icmp_ln330_reg_1347_pp1_iter2_reg <= icmp_ln330_reg_1347_pp1_iter1_reg;
                icmp_ln330_reg_1347_pp1_iter3_reg <= icmp_ln330_reg_1347_pp1_iter2_reg;
                icmp_ln330_reg_1347_pp1_iter4_reg <= icmp_ln330_reg_1347_pp1_iter3_reg;
                icmp_ln330_reg_1347_pp1_iter5_reg <= icmp_ln330_reg_1347_pp1_iter4_reg;
                icmp_ln330_reg_1347_pp1_iter6_reg <= icmp_ln330_reg_1347_pp1_iter5_reg;
                select_ln330_1_reg_1356_pp1_iter1_reg <= select_ln330_1_reg_1356;
                select_ln330_1_reg_1356_pp1_iter2_reg <= select_ln330_1_reg_1356_pp1_iter1_reg;
                select_ln330_1_reg_1356_pp1_iter3_reg <= select_ln330_1_reg_1356_pp1_iter2_reg;
                select_ln330_1_reg_1356_pp1_iter4_reg <= select_ln330_1_reg_1356_pp1_iter3_reg;
                select_ln330_1_reg_1356_pp1_iter5_reg <= select_ln330_1_reg_1356_pp1_iter4_reg;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0))) then
                icmp_ln345_reg_1404 <= icmp_ln345_fu_797_p2;
                icmp_ln345_reg_1404_pp2_iter1_reg <= icmp_ln345_reg_1404;
                icmp_ln345_reg_1404_pp2_iter2_reg <= icmp_ln345_reg_1404_pp2_iter1_reg;
                icmp_ln345_reg_1404_pp2_iter3_reg <= icmp_ln345_reg_1404_pp2_iter2_reg;
                icmp_ln345_reg_1404_pp2_iter4_reg <= icmp_ln345_reg_1404_pp2_iter3_reg;
                icmp_ln345_reg_1404_pp2_iter5_reg <= icmp_ln345_reg_1404_pp2_iter4_reg;
                icmp_ln345_reg_1404_pp2_iter6_reg <= icmp_ln345_reg_1404_pp2_iter5_reg;
                mul_ln353_reg_1399 <= mul_ln353_fu_791_p2;
                select_ln345_1_reg_1424_pp2_iter1_reg <= select_ln345_1_reg_1424;
                select_ln345_1_reg_1424_pp2_iter2_reg <= select_ln345_1_reg_1424_pp2_iter1_reg;
                select_ln345_1_reg_1424_pp2_iter3_reg <= select_ln345_1_reg_1424_pp2_iter2_reg;
                select_ln345_1_reg_1424_pp2_iter4_reg <= select_ln345_1_reg_1424_pp2_iter3_reg;
                select_ln345_1_reg_1424_pp2_iter5_reg <= select_ln345_1_reg_1424_pp2_iter4_reg;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp3_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0))) then
                icmp_ln360_reg_1491 <= icmp_ln360_fu_1010_p2;
                icmp_ln360_reg_1491_pp3_iter1_reg <= icmp_ln360_reg_1491;
                icmp_ln360_reg_1491_pp3_iter2_reg <= icmp_ln360_reg_1491_pp3_iter1_reg;
                icmp_ln360_reg_1491_pp3_iter3_reg <= icmp_ln360_reg_1491_pp3_iter2_reg;
                icmp_ln360_reg_1491_pp3_iter4_reg <= icmp_ln360_reg_1491_pp3_iter3_reg;
                icmp_ln360_reg_1491_pp3_iter5_reg <= icmp_ln360_reg_1491_pp3_iter4_reg;
                icmp_ln360_reg_1491_pp3_iter6_reg <= icmp_ln360_reg_1491_pp3_iter5_reg;
                icmp_ln360_reg_1491_pp3_iter7_reg <= icmp_ln360_reg_1491_pp3_iter6_reg;
                mul_ln370_reg_1486 <= mul_ln370_fu_1004_p2;
                select_ln370_reg_1547_pp3_iter1_reg <= select_ln370_reg_1547;
                select_ln370_reg_1547_pp3_iter2_reg <= select_ln370_reg_1547_pp3_iter1_reg;
                select_ln370_reg_1547_pp3_iter3_reg <= select_ln370_reg_1547_pp3_iter2_reg;
                select_ln370_reg_1547_pp3_iter4_reg <= select_ln370_reg_1547_pp3_iter3_reg;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp1_stage7_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage7) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (icmp_ln330_reg_1347 = ap_const_lv1_0))) then
                n_1_reg_1389 <= n_1_fu_762_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp2_stage7_11001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage7) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (icmp_ln345_reg_1404 = ap_const_lv1_0))) then
                n_2_reg_1471 <= n_2_fu_967_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp3_stage7_11001) and (ap_enable_reg_pp3_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage7) and (icmp_ln360_reg_1491 = ap_const_lv1_0))) then
                n_3_reg_1601 <= n_3_fu_1283_p2;
                tmp_70_reg_1596 <= grp_fu_468_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln317_reg_1318 = ap_const_lv1_0))) then
                n_reg_1342 <= n_fu_601_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_boolean_0 = ap_block_pp3_stage5_11001) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage5) and (ap_enable_reg_pp3_iter4 = ap_const_logic_1) and (icmp_ln360_reg_1491_pp3_iter4_reg = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln317_reg_1318 = ap_const_lv1_0)))) then
                reg_478 <= grp_fu_432_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_boolean_0 = ap_block_pp3_stage6_11001) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage6) and (ap_enable_reg_pp3_iter4 = ap_const_logic_1) and (icmp_ln360_reg_1491_pp3_iter4_reg = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_pp2_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage2) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (icmp_ln345_reg_1404 = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_pp1_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage2) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (icmp_ln330_reg_1347 = ap_const_lv1_0)))) then
                reg_491 <= grp_fu_443_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_boolean_0 = ap_block_pp3_stage6_11001) and (ap_enable_reg_pp3_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage6) and (icmp_ln360_reg_1491 = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_pp2_stage6_11001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage6) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (icmp_ln345_reg_1404 = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_pp1_stage6_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage6) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (icmp_ln330_reg_1347 = ap_const_lv1_0)))) then
                reg_496 <= grp_fu_468_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_boolean_0 = ap_block_pp3_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage3) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (icmp_ln360_reg_1491_pp3_iter2_reg = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_pp3_stage4_11001) and (ap_enable_reg_pp3_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage4) and (icmp_ln360_reg_1491_pp3_iter1_reg = ap_const_lv1_0)) or ((ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage2) and (ap_const_boolean_0 = ap_block_pp3_stage2_11001) and (icmp_ln360_reg_1491_pp3_iter2_reg = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_pp2_stage7_11001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage7) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (icmp_ln345_reg_1404 = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_pp1_stage7_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage7) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (icmp_ln330_reg_1347 = ap_const_lv1_0)))) then
                reg_501 <= grp_fu_460_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp1_stage7_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage7))) then
                reg_501_pp1_iter1_reg <= reg_501;
                reg_501_pp1_iter2_reg <= reg_501_pp1_iter1_reg;
                reg_501_pp1_iter3_reg <= reg_501_pp1_iter2_reg;
                reg_501_pp1_iter4_reg <= reg_501_pp1_iter3_reg;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp2_stage7_11001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage7))) then
                reg_501_pp2_iter1_reg <= reg_501;
                reg_501_pp2_iter2_reg <= reg_501_pp2_iter1_reg;
                reg_501_pp2_iter3_reg <= reg_501_pp2_iter2_reg;
                reg_501_pp2_iter4_reg <= reg_501_pp2_iter3_reg;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_boolean_0 = ap_block_pp2_stage4_11001) and (ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage4) and (icmp_ln345_reg_1404_pp2_iter1_reg = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_pp1_stage3_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage3) and (icmp_ln330_reg_1347_pp1_iter1_reg = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_pp2_stage2_11001) and (ap_enable_reg_pp2_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage2) and (icmp_ln345_reg_1404_pp2_iter2_reg = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_pp3_stage5_11001) and (ap_enable_reg_pp3_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage5) and (icmp_ln360_reg_1491_pp3_iter1_reg = ap_const_lv1_0)) or ((ap_enable_reg_pp1_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage1) and (ap_const_boolean_0 = ap_block_pp1_stage1_11001) and (icmp_ln330_reg_1347_pp1_iter2_reg = ap_const_lv1_0)))) then
                reg_507 <= grp_fu_460_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_boolean_0 = ap_block_pp2_stage3_11001) and (ap_enable_reg_pp2_iter5 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage3) and (icmp_ln345_reg_1404_pp2_iter5_reg = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_pp3_stage3_11001) and (ap_enable_reg_pp3_iter5 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage3) and (icmp_ln360_reg_1491_pp3_iter5_reg = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_pp1_stage2_11001) and (ap_enable_reg_pp1_iter5 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage2) and (icmp_ln330_reg_1347_pp1_iter5_reg = ap_const_lv1_0)))) then
                reg_513 <= grp_sin_or_cos_double_s_fu_409_ap_return;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_boolean_0 = ap_block_pp3_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage1) and (ap_enable_reg_pp3_iter6 = ap_const_logic_1) and (icmp_ln360_reg_1491_pp3_iter6_reg = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter6 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (icmp_ln330_reg_1347_pp1_iter5_reg = ap_const_lv1_0)) or ((ap_enable_reg_pp2_iter6 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage1) and (ap_const_boolean_0 = ap_block_pp2_stage1_11001) and (icmp_ln345_reg_1404_pp2_iter6_reg = ap_const_lv1_0)))) then
                reg_518 <= grp_fu_460_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln317_fu_534_p2 = ap_const_lv1_0))) then
                select_ln323_1_reg_1332 <= select_ln323_1_fu_566_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln317_fu_534_p2 = ap_const_lv1_0))) then
                select_ln323_reg_1327 <= select_ln323_fu_558_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (icmp_ln330_fu_606_p2 = ap_const_lv1_0))) then
                select_ln330_1_reg_1356 <= select_ln330_1_fu_638_p3;
                select_ln332_reg_1379 <= select_ln332_fu_725_p3;
                select_ln338_1_reg_1369 <= select_ln338_1_fu_684_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (icmp_ln330_fu_606_p2 = ap_const_lv1_0))) then
                select_ln338_reg_1363 <= select_ln338_fu_676_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (icmp_ln345_fu_797_p2 = ap_const_lv1_0))) then
                select_ln345_1_reg_1424 <= select_ln345_1_fu_829_p3;
                select_ln353_1_reg_1446 <= select_ln353_1_fu_875_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage1) and (ap_const_boolean_0 = ap_block_pp2_stage1_11001) and (icmp_ln345_reg_1404 = ap_const_lv1_0))) then
                select_ln347_reg_1466 <= select_ln347_fu_961_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp3_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0) and (ap_enable_reg_pp3_iter0 = ap_const_logic_1) and (icmp_ln360_fu_1010_p2 = ap_const_lv1_0))) then
                select_ln360_1_reg_1517 <= select_ln360_1_fu_1042_p3;
                select_ln364_reg_1554 <= select_ln364_fu_1144_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp3_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage1) and (ap_enable_reg_pp3_iter0 = ap_const_logic_1) and (icmp_ln360_reg_1491 = ap_const_lv1_0))) then
                select_ln362_1_reg_1564 <= select_ln362_1_fu_1175_p3;
                select_ln362_3_reg_1581 <= select_ln362_3_fu_1226_p3;
                select_ln370_1_reg_1570 <= select_ln370_1_fu_1188_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp3_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage1))) then
                select_ln370_1_reg_1570_pp3_iter1_reg <= select_ln370_1_reg_1570;
                select_ln370_1_reg_1570_pp3_iter2_reg <= select_ln370_1_reg_1570_pp3_iter1_reg;
                select_ln370_1_reg_1570_pp3_iter3_reg <= select_ln370_1_reg_1570_pp3_iter2_reg;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp3_stage7_11001) and (ap_enable_reg_pp3_iter6 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage7) and (icmp_ln360_reg_1491_pp3_iter6_reg = ap_const_lv1_0))) then
                tmp_72_reg_1616 <= grp_fu_460_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp3_stage4_11001) and (ap_enable_reg_pp3_iter5 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage4) and (icmp_ln360_reg_1491_pp3_iter5_reg = ap_const_lv1_0))) then
                tmp_i_i3_reg_1611 <= grp_sin_or_cos_double_s_fu_409_ap_return;
            end if;
        end if;
    end process;
    dct_addr_1_reg_1394(5 downto 4) <= "00";
    dct_addr_2_reg_1476(2 downto 0) <= "000";

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, ap_enable_reg_pp0_iter0, ap_enable_reg_pp1_iter0, ap_enable_reg_pp2_iter0, ap_CS_fsm_pp3_stage5, ap_enable_reg_pp1_iter6, ap_enable_reg_pp2_iter6, ap_enable_reg_pp3_iter6, ap_CS_fsm_pp1_stage6, ap_enable_reg_pp3_iter0, ap_CS_fsm_pp2_stage7, ap_enable_reg_pp3_iter1, ap_enable_reg_pp1_iter1, ap_enable_reg_pp2_iter1, ap_enable_reg_pp1_iter5, ap_enable_reg_pp2_iter5, ap_enable_reg_pp3_iter7, icmp_ln317_fu_534_p2, icmp_ln330_fu_606_p2, icmp_ln345_fu_797_p2, icmp_ln360_fu_1010_p2, ap_block_pp0_stage0_subdone, ap_enable_reg_pp0_iter1, ap_block_pp0_stage5_subdone, ap_block_pp0_stage3_subdone, ap_CS_fsm_pp0_stage3, ap_block_pp1_stage0_subdone, ap_block_pp1_stage7_subdone, ap_block_pp1_stage6_subdone, ap_block_pp2_stage0_subdone, ap_block_pp2_stage7_subdone, ap_block_pp3_stage0_subdone, ap_block_pp3_stage7_subdone, ap_block_pp3_stage5_subdone, ap_block_pp0_stage1_subdone, ap_block_pp0_stage2_subdone, ap_block_pp0_stage4_subdone, ap_block_pp1_stage1_subdone, ap_block_pp1_stage2_subdone, ap_block_pp1_stage3_subdone, ap_block_pp1_stage4_subdone, ap_block_pp1_stage5_subdone, ap_block_pp2_stage1_subdone, ap_block_pp2_stage2_subdone, ap_block_pp2_stage3_subdone, ap_block_pp2_stage4_subdone, ap_block_pp2_stage5_subdone, ap_block_pp2_stage6_subdone, ap_block_pp3_stage1_subdone, ap_block_pp3_stage2_subdone, ap_block_pp3_stage3_subdone, ap_block_pp3_stage4_subdone, ap_block_pp3_stage6_subdone)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_pp0_stage0 => 
                if ((not(((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (icmp_ln317_fu_534_p2 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                elsif (((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (icmp_ln317_fu_534_p2 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state12;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_pp0_stage1 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage1_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage2;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                end if;
            when ap_ST_fsm_pp0_stage2 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage2_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage3;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage2;
                end if;
            when ap_ST_fsm_pp0_stage3 => 
                if ((not(((ap_const_boolean_0 = ap_block_pp0_stage3_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) and (ap_const_boolean_0 = ap_block_pp0_stage3_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage4;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage3_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state12;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage3;
                end if;
            when ap_ST_fsm_pp0_stage4 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage4_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage5;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage4;
                end if;
            when ap_ST_fsm_pp0_stage5 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage5_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage5;
                end if;
            when ap_ST_fsm_state12 => 
                ap_NS_fsm <= ap_ST_fsm_pp1_stage0;
            when ap_ST_fsm_pp1_stage0 => 
                if ((not(((ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (icmp_ln330_fu_606_p2 = ap_const_lv1_1) and (ap_enable_reg_pp1_iter1 = ap_const_logic_0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1))) and (ap_const_boolean_0 = ap_block_pp1_stage0_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage1;
                elsif (((ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (icmp_ln330_fu_606_p2 = ap_const_lv1_1) and (ap_enable_reg_pp1_iter1 = ap_const_logic_0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state68;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage0;
                end if;
            when ap_ST_fsm_pp1_stage1 => 
                if ((ap_const_boolean_0 = ap_block_pp1_stage1_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage2;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage1;
                end if;
            when ap_ST_fsm_pp1_stage2 => 
                if ((ap_const_boolean_0 = ap_block_pp1_stage2_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage3;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage2;
                end if;
            when ap_ST_fsm_pp1_stage3 => 
                if ((ap_const_boolean_0 = ap_block_pp1_stage3_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage4;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage3;
                end if;
            when ap_ST_fsm_pp1_stage4 => 
                if ((ap_const_boolean_0 = ap_block_pp1_stage4_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage5;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage4;
                end if;
            when ap_ST_fsm_pp1_stage5 => 
                if ((ap_const_boolean_0 = ap_block_pp1_stage5_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage6;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage5;
                end if;
            when ap_ST_fsm_pp1_stage6 => 
                if ((not(((ap_const_boolean_0 = ap_block_pp1_stage6_subdone) and (ap_enable_reg_pp1_iter5 = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage6) and (ap_enable_reg_pp1_iter6 = ap_const_logic_1))) and (ap_const_boolean_0 = ap_block_pp1_stage6_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage7;
                elsif (((ap_const_boolean_0 = ap_block_pp1_stage6_subdone) and (ap_enable_reg_pp1_iter5 = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage6) and (ap_enable_reg_pp1_iter6 = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state68;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage6;
                end if;
            when ap_ST_fsm_pp1_stage7 => 
                if ((ap_const_boolean_0 = ap_block_pp1_stage7_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage7;
                end if;
            when ap_ST_fsm_state68 => 
                ap_NS_fsm <= ap_ST_fsm_pp2_stage0;
            when ap_ST_fsm_pp2_stage0 => 
                if ((not(((ap_const_boolean_0 = ap_block_pp2_stage0_subdone) and (icmp_ln345_fu_797_p2 = ap_const_lv1_1) and (ap_enable_reg_pp2_iter1 = ap_const_logic_0) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1))) and (ap_const_boolean_0 = ap_block_pp2_stage0_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_pp2_stage1;
                elsif (((ap_const_boolean_0 = ap_block_pp2_stage0_subdone) and (icmp_ln345_fu_797_p2 = ap_const_lv1_1) and (ap_enable_reg_pp2_iter1 = ap_const_logic_0) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state125;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp2_stage0;
                end if;
            when ap_ST_fsm_pp2_stage1 => 
                if ((ap_const_boolean_0 = ap_block_pp2_stage1_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp2_stage2;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp2_stage1;
                end if;
            when ap_ST_fsm_pp2_stage2 => 
                if ((ap_const_boolean_0 = ap_block_pp2_stage2_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp2_stage3;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp2_stage2;
                end if;
            when ap_ST_fsm_pp2_stage3 => 
                if ((ap_const_boolean_0 = ap_block_pp2_stage3_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp2_stage4;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp2_stage3;
                end if;
            when ap_ST_fsm_pp2_stage4 => 
                if ((ap_const_boolean_0 = ap_block_pp2_stage4_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp2_stage5;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp2_stage4;
                end if;
            when ap_ST_fsm_pp2_stage5 => 
                if ((ap_const_boolean_0 = ap_block_pp2_stage5_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp2_stage6;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp2_stage5;
                end if;
            when ap_ST_fsm_pp2_stage6 => 
                if ((ap_const_boolean_0 = ap_block_pp2_stage6_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp2_stage7;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp2_stage6;
                end if;
            when ap_ST_fsm_pp2_stage7 => 
                if ((not(((ap_const_boolean_0 = ap_block_pp2_stage7_subdone) and (ap_enable_reg_pp2_iter5 = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage7) and (ap_enable_reg_pp2_iter6 = ap_const_logic_1))) and (ap_const_boolean_0 = ap_block_pp2_stage7_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_pp2_stage0;
                elsif (((ap_const_boolean_0 = ap_block_pp2_stage7_subdone) and (ap_enable_reg_pp2_iter5 = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage7) and (ap_enable_reg_pp2_iter6 = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state125;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp2_stage7;
                end if;
            when ap_ST_fsm_state125 => 
                ap_NS_fsm <= ap_ST_fsm_pp3_stage0;
            when ap_ST_fsm_pp3_stage0 => 
                if ((not(((ap_const_boolean_0 = ap_block_pp3_stage0_subdone) and (icmp_ln360_fu_1010_p2 = ap_const_lv1_1) and (ap_enable_reg_pp3_iter1 = ap_const_logic_0) and (ap_enable_reg_pp3_iter0 = ap_const_logic_1))) and (ap_const_boolean_0 = ap_block_pp3_stage0_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_pp3_stage1;
                elsif (((ap_const_boolean_0 = ap_block_pp3_stage0_subdone) and (icmp_ln360_fu_1010_p2 = ap_const_lv1_1) and (ap_enable_reg_pp3_iter1 = ap_const_logic_0) and (ap_enable_reg_pp3_iter0 = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state188;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp3_stage0;
                end if;
            when ap_ST_fsm_pp3_stage1 => 
                if ((ap_const_boolean_0 = ap_block_pp3_stage1_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp3_stage2;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp3_stage1;
                end if;
            when ap_ST_fsm_pp3_stage2 => 
                if ((ap_const_boolean_0 = ap_block_pp3_stage2_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp3_stage3;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp3_stage2;
                end if;
            when ap_ST_fsm_pp3_stage3 => 
                if ((ap_const_boolean_0 = ap_block_pp3_stage3_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp3_stage4;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp3_stage3;
                end if;
            when ap_ST_fsm_pp3_stage4 => 
                if ((ap_const_boolean_0 = ap_block_pp3_stage4_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp3_stage5;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp3_stage4;
                end if;
            when ap_ST_fsm_pp3_stage5 => 
                if ((not(((ap_enable_reg_pp3_iter6 = ap_const_logic_0) and (ap_enable_reg_pp3_iter7 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage5) and (ap_const_boolean_0 = ap_block_pp3_stage5_subdone))) and (ap_const_boolean_0 = ap_block_pp3_stage5_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_pp3_stage6;
                elsif (((ap_enable_reg_pp3_iter6 = ap_const_logic_0) and (ap_enable_reg_pp3_iter7 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage5) and (ap_const_boolean_0 = ap_block_pp3_stage5_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_state188;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp3_stage5;
                end if;
            when ap_ST_fsm_pp3_stage6 => 
                if ((ap_const_boolean_0 = ap_block_pp3_stage6_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp3_stage7;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp3_stage6;
                end if;
            when ap_ST_fsm_pp3_stage7 => 
                if ((ap_const_boolean_0 = ap_block_pp3_stage7_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp3_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp3_stage7;
                end if;
            when ap_ST_fsm_state188 => 
                ap_NS_fsm <= ap_ST_fsm_state1;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end case;
    end process;
    add_ln317_fu_540_p2 <= std_logic_vector(unsigned(ap_phi_mux_indvar_flatten_phi_fu_193_p4) + unsigned(ap_const_lv7_1));
    add_ln323_fu_590_p2 <= std_logic_vector(unsigned(zext_ln323_fu_586_p1) + unsigned(zext_ln321_fu_582_p1));
    add_ln330_fu_612_p2 <= std_logic_vector(unsigned(ap_phi_mux_indvar_flatten22_phi_fu_226_p4) + unsigned(ap_const_lv9_1));
    add_ln332_1_fu_719_p2 <= std_logic_vector(unsigned(ap_const_lv8_1) + unsigned(ap_phi_mux_indvar_flatten6_phi_fu_248_p4));
    add_ln338_fu_708_p2 <= std_logic_vector(unsigned(zext_ln338_fu_704_p1) + unsigned(zext_ln332_fu_700_p1));
    add_ln345_fu_803_p2 <= std_logic_vector(unsigned(ap_const_lv9_1) + unsigned(ap_phi_mux_indvar_flatten61_phi_fu_281_p4));
    add_ln347_1_fu_910_p2 <= std_logic_vector(unsigned(ap_const_lv8_1) + unsigned(ap_phi_mux_indvar_flatten29_phi_fu_303_p4));
    add_ln353_fu_899_p2 <= std_logic_vector(unsigned(zext_ln353_5_fu_895_p1) + unsigned(zext_ln353_2_fu_891_p1));
    add_ln360_fu_1016_p2 <= std_logic_vector(unsigned(ap_const_lv12_1) + unsigned(ap_phi_mux_indvar_flatten142_phi_fu_336_p4));
    add_ln362_1_fu_1152_p2 <= std_logic_vector(unsigned(ap_const_lv10_1) + unsigned(ap_phi_mux_indvar_flatten100_phi_fu_358_p4));
    add_ln364_1_fu_1138_p2 <= std_logic_vector(unsigned(ap_const_lv8_1) + unsigned(ap_phi_mux_indvar_flatten68_phi_fu_380_p4));
    add_ln370_1_fu_1302_p2 <= std_logic_vector(unsigned(zext_ln370_2_fu_1295_p1) + unsigned(zext_ln370_5_fu_1299_p1));
    add_ln370_fu_1246_p2 <= std_logic_vector(unsigned(zext_ln362_fu_1239_p1) + unsigned(zext_ln362_1_fu_1243_p1));
    and_ln330_fu_658_p2 <= (xor_ln330_fu_646_p2 and icmp_ln335_fu_652_p2);
    and_ln345_fu_849_p2 <= (xor_ln345_fu_837_p2 and icmp_ln350_fu_843_p2);
    and_ln360_1_fu_1074_p2 <= (xor_ln360_fu_1050_p2 and icmp_ln364_fu_1068_p2);
    and_ln360_fu_1062_p2 <= (xor_ln360_fu_1050_p2 and icmp_ln367_fu_1056_p2);
    and_ln362_fu_1106_p2 <= (or_ln362_1_fu_1100_p2 and and_ln360_fu_1062_p2);
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(1);
    ap_CS_fsm_pp0_stage1 <= ap_CS_fsm(2);
    ap_CS_fsm_pp0_stage3 <= ap_CS_fsm(4);
    ap_CS_fsm_pp0_stage4 <= ap_CS_fsm(5);
    ap_CS_fsm_pp0_stage5 <= ap_CS_fsm(6);
    ap_CS_fsm_pp1_stage0 <= ap_CS_fsm(8);
    ap_CS_fsm_pp1_stage1 <= ap_CS_fsm(9);
    ap_CS_fsm_pp1_stage2 <= ap_CS_fsm(10);
    ap_CS_fsm_pp1_stage3 <= ap_CS_fsm(11);
    ap_CS_fsm_pp1_stage4 <= ap_CS_fsm(12);
    ap_CS_fsm_pp1_stage5 <= ap_CS_fsm(13);
    ap_CS_fsm_pp1_stage6 <= ap_CS_fsm(14);
    ap_CS_fsm_pp1_stage7 <= ap_CS_fsm(15);
    ap_CS_fsm_pp2_stage0 <= ap_CS_fsm(17);
    ap_CS_fsm_pp2_stage1 <= ap_CS_fsm(18);
    ap_CS_fsm_pp2_stage2 <= ap_CS_fsm(19);
    ap_CS_fsm_pp2_stage3 <= ap_CS_fsm(20);
    ap_CS_fsm_pp2_stage4 <= ap_CS_fsm(21);
    ap_CS_fsm_pp2_stage5 <= ap_CS_fsm(22);
    ap_CS_fsm_pp2_stage6 <= ap_CS_fsm(23);
    ap_CS_fsm_pp2_stage7 <= ap_CS_fsm(24);
    ap_CS_fsm_pp3_stage0 <= ap_CS_fsm(26);
    ap_CS_fsm_pp3_stage1 <= ap_CS_fsm(27);
    ap_CS_fsm_pp3_stage2 <= ap_CS_fsm(28);
    ap_CS_fsm_pp3_stage3 <= ap_CS_fsm(29);
    ap_CS_fsm_pp3_stage4 <= ap_CS_fsm(30);
    ap_CS_fsm_pp3_stage5 <= ap_CS_fsm(31);
    ap_CS_fsm_pp3_stage6 <= ap_CS_fsm(32);
    ap_CS_fsm_pp3_stage7 <= ap_CS_fsm(33);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state12 <= ap_CS_fsm(7);
    ap_CS_fsm_state125 <= ap_CS_fsm(25);
    ap_CS_fsm_state188 <= ap_CS_fsm(34);
    ap_CS_fsm_state68 <= ap_CS_fsm(16);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage2_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage3_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage3_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage4_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage4_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage5_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage5_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp1_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp1_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp1_stage0_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp1_stage1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp1_stage1_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp1_stage1_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp1_stage2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp1_stage2_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp1_stage2_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp1_stage3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp1_stage3_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp1_stage3_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp1_stage4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp1_stage4_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp1_stage5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp1_stage5_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp1_stage5_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp1_stage6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp1_stage6_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp1_stage6_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp1_stage7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp1_stage7_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp1_stage7_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp2_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp2_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp2_stage0_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp2_stage1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp2_stage1_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp2_stage1_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp2_stage2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp2_stage2_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp2_stage2_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp2_stage3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp2_stage3_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp2_stage3_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp2_stage4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp2_stage4_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp2_stage4_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp2_stage5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp2_stage5_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp2_stage6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp2_stage6_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp2_stage6_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp2_stage7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp2_stage7_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp2_stage7_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp3_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp3_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp3_stage0_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp3_stage1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp3_stage1_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp3_stage1_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp3_stage2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp3_stage2_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp3_stage2_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp3_stage3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp3_stage3_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp3_stage3_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp3_stage4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp3_stage4_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp3_stage4_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp3_stage5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp3_stage5_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp3_stage5_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp3_stage6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp3_stage6_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp3_stage6_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp3_stage7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp3_stage7_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp3_stage7_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state100_pp2_stage7_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state101_pp2_stage0_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state102_pp2_stage1_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state103_pp2_stage2_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state104_pp2_stage3_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state105_pp2_stage4_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state106_pp2_stage5_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state107_pp2_stage6_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state108_pp2_stage7_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state109_pp2_stage0_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state10_pp0_stage2_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state110_pp2_stage1_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state111_pp2_stage2_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state112_pp2_stage3_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state113_pp2_stage4_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state114_pp2_stage5_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state115_pp2_stage6_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state116_pp2_stage7_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state117_pp2_stage0_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state118_pp2_stage1_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state119_pp2_stage2_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state11_pp0_stage3_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state120_pp2_stage3_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state121_pp2_stage4_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state122_pp2_stage5_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state123_pp2_stage6_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state124_pp2_stage7_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state126_pp3_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state127_pp3_stage1_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state128_pp3_stage2_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state129_pp3_stage3_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state130_pp3_stage4_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state131_pp3_stage5_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state132_pp3_stage6_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state133_pp3_stage7_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state134_pp3_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state135_pp3_stage1_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state136_pp3_stage2_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state137_pp3_stage3_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state138_pp3_stage4_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state139_pp3_stage5_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state13_pp1_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state140_pp3_stage6_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state141_pp3_stage7_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state142_pp3_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state143_pp3_stage1_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state144_pp3_stage2_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state145_pp3_stage3_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state146_pp3_stage4_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state147_pp3_stage5_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state148_pp3_stage6_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state149_pp3_stage7_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state14_pp1_stage1_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state150_pp3_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state151_pp3_stage1_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state152_pp3_stage2_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state153_pp3_stage3_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state154_pp3_stage4_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state155_pp3_stage5_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state156_pp3_stage6_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state157_pp3_stage7_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state158_pp3_stage0_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state159_pp3_stage1_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state15_pp1_stage2_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state160_pp3_stage2_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state161_pp3_stage3_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state162_pp3_stage4_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state163_pp3_stage5_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state164_pp3_stage6_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state165_pp3_stage7_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state166_pp3_stage0_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state167_pp3_stage1_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state168_pp3_stage2_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state169_pp3_stage3_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state16_pp1_stage3_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state170_pp3_stage4_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state171_pp3_stage5_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state172_pp3_stage6_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state173_pp3_stage7_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state174_pp3_stage0_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state175_pp3_stage1_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state176_pp3_stage2_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state177_pp3_stage3_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state178_pp3_stage4_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state179_pp3_stage5_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state17_pp1_stage4_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state180_pp3_stage6_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state181_pp3_stage7_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state182_pp3_stage0_iter7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state183_pp3_stage1_iter7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state184_pp3_stage2_iter7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state185_pp3_stage3_iter7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state186_pp3_stage4_iter7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state187_pp3_stage5_iter7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state18_pp1_stage5_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state19_pp1_stage6_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state20_pp1_stage7_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state21_pp1_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state22_pp1_stage1_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state23_pp1_stage2_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state24_pp1_stage3_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state25_pp1_stage4_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state26_pp1_stage5_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state27_pp1_stage6_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state28_pp1_stage7_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state29_pp1_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state30_pp1_stage1_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state31_pp1_stage2_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state32_pp1_stage3_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state33_pp1_stage4_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state34_pp1_stage5_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state35_pp1_stage6_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state36_pp1_stage7_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state37_pp1_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state38_pp1_stage1_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state39_pp1_stage2_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage1_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state40_pp1_stage3_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state41_pp1_stage4_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state42_pp1_stage5_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state43_pp1_stage6_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state44_pp1_stage7_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state45_pp1_stage0_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state46_pp1_stage1_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state47_pp1_stage2_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state48_pp1_stage3_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state49_pp1_stage4_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage2_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state50_pp1_stage5_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state51_pp1_stage6_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state52_pp1_stage7_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state53_pp1_stage0_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state54_pp1_stage1_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state55_pp1_stage2_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state56_pp1_stage3_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state57_pp1_stage4_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state58_pp1_stage5_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state59_pp1_stage6_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage3_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state60_pp1_stage7_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state61_pp1_stage0_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state62_pp1_stage1_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state63_pp1_stage2_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state64_pp1_stage3_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state65_pp1_stage4_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state66_pp1_stage5_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state67_pp1_stage6_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state69_pp2_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage4_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state70_pp2_stage1_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state71_pp2_stage2_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state72_pp2_stage3_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state73_pp2_stage4_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state74_pp2_stage5_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state75_pp2_stage6_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state76_pp2_stage7_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state77_pp2_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state78_pp2_stage1_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state79_pp2_stage2_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage5_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state80_pp2_stage3_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state81_pp2_stage4_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state82_pp2_stage5_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state83_pp2_stage6_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state84_pp2_stage7_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state85_pp2_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state86_pp2_stage1_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state87_pp2_stage2_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state88_pp2_stage3_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state89_pp2_stage4_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state90_pp2_stage5_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state91_pp2_stage6_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state92_pp2_stage7_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state93_pp2_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state94_pp2_stage1_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state95_pp2_stage2_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state96_pp2_stage3_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state97_pp2_stage4_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state98_pp2_stage5_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state99_pp2_stage6_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage1_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_pp0_exit_iter0_state2_assign_proc : process(icmp_ln317_fu_534_p2)
    begin
        if ((icmp_ln317_fu_534_p2 = ap_const_lv1_1)) then 
            ap_condition_pp0_exit_iter0_state2 <= ap_const_logic_1;
        else 
            ap_condition_pp0_exit_iter0_state2 <= ap_const_logic_0;
        end if; 
    end process;


    ap_condition_pp1_exit_iter0_state13_assign_proc : process(icmp_ln330_fu_606_p2)
    begin
        if ((icmp_ln330_fu_606_p2 = ap_const_lv1_1)) then 
            ap_condition_pp1_exit_iter0_state13 <= ap_const_logic_1;
        else 
            ap_condition_pp1_exit_iter0_state13 <= ap_const_logic_0;
        end if; 
    end process;


    ap_condition_pp2_exit_iter0_state69_assign_proc : process(icmp_ln345_fu_797_p2)
    begin
        if ((icmp_ln345_fu_797_p2 = ap_const_lv1_1)) then 
            ap_condition_pp2_exit_iter0_state69 <= ap_const_logic_1;
        else 
            ap_condition_pp2_exit_iter0_state69 <= ap_const_logic_0;
        end if; 
    end process;


    ap_condition_pp3_exit_iter0_state126_assign_proc : process(icmp_ln360_fu_1010_p2)
    begin
        if ((icmp_ln360_fu_1010_p2 = ap_const_lv1_1)) then 
            ap_condition_pp3_exit_iter0_state126 <= ap_const_logic_1;
        else 
            ap_condition_pp3_exit_iter0_state126 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_CS_fsm_state188)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state188) or ((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);
    ap_enable_pp1 <= (ap_idle_pp1 xor ap_const_logic_1);
    ap_enable_pp2 <= (ap_idle_pp2 xor ap_const_logic_1);
    ap_enable_pp3 <= (ap_idle_pp3 xor ap_const_logic_1);

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp1_assign_proc : process(ap_enable_reg_pp1_iter0, ap_enable_reg_pp1_iter6, ap_enable_reg_pp1_iter1, ap_enable_reg_pp1_iter2, ap_enable_reg_pp1_iter5, ap_enable_reg_pp1_iter3, ap_enable_reg_pp1_iter4)
    begin
        if (((ap_enable_reg_pp1_iter4 = ap_const_logic_0) and (ap_enable_reg_pp1_iter3 = ap_const_logic_0) and (ap_enable_reg_pp1_iter5 = ap_const_logic_0) and (ap_enable_reg_pp1_iter2 = ap_const_logic_0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_0) and (ap_enable_reg_pp1_iter6 = ap_const_logic_0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_0))) then 
            ap_idle_pp1 <= ap_const_logic_1;
        else 
            ap_idle_pp1 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp2_assign_proc : process(ap_enable_reg_pp2_iter0, ap_enable_reg_pp2_iter6, ap_enable_reg_pp2_iter1, ap_enable_reg_pp2_iter2, ap_enable_reg_pp2_iter5, ap_enable_reg_pp2_iter3, ap_enable_reg_pp2_iter4)
    begin
        if (((ap_enable_reg_pp2_iter4 = ap_const_logic_0) and (ap_enable_reg_pp2_iter3 = ap_const_logic_0) and (ap_enable_reg_pp2_iter5 = ap_const_logic_0) and (ap_enable_reg_pp2_iter2 = ap_const_logic_0) and (ap_enable_reg_pp2_iter1 = ap_const_logic_0) and (ap_enable_reg_pp2_iter6 = ap_const_logic_0) and (ap_enable_reg_pp2_iter0 = ap_const_logic_0))) then 
            ap_idle_pp2 <= ap_const_logic_1;
        else 
            ap_idle_pp2 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp3_assign_proc : process(ap_enable_reg_pp3_iter4, ap_enable_reg_pp3_iter6, ap_enable_reg_pp3_iter0, ap_enable_reg_pp3_iter1, ap_enable_reg_pp3_iter2, ap_enable_reg_pp3_iter5, ap_enable_reg_pp3_iter7, ap_enable_reg_pp3_iter3)
    begin
        if (((ap_enable_reg_pp3_iter7 = ap_const_logic_0) and (ap_enable_reg_pp3_iter5 = ap_const_logic_0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_0) and (ap_enable_reg_pp3_iter1 = ap_const_logic_0) and (ap_enable_reg_pp3_iter0 = ap_const_logic_0) and (ap_enable_reg_pp3_iter6 = ap_const_logic_0) and (ap_enable_reg_pp3_iter4 = ap_const_logic_0) and (ap_enable_reg_pp3_iter3 = ap_const_logic_0))) then 
            ap_idle_pp3 <= ap_const_logic_1;
        else 
            ap_idle_pp3 <= ap_const_logic_0;
        end if; 
    end process;


    ap_phi_mux_indvar_flatten100_phi_fu_358_p4_assign_proc : process(indvar_flatten100_reg_354, icmp_ln360_reg_1491, ap_enable_reg_pp3_iter1, ap_CS_fsm_pp3_stage0, select_ln362_3_reg_1581, ap_block_pp3_stage0)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp3_stage0) and (ap_enable_reg_pp3_iter1 = ap_const_logic_1) and (icmp_ln360_reg_1491 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp3_stage0))) then 
            ap_phi_mux_indvar_flatten100_phi_fu_358_p4 <= select_ln362_3_reg_1581;
        else 
            ap_phi_mux_indvar_flatten100_phi_fu_358_p4 <= indvar_flatten100_reg_354;
        end if; 
    end process;


    ap_phi_mux_indvar_flatten142_phi_fu_336_p4_assign_proc : process(indvar_flatten142_reg_332, icmp_ln360_reg_1491, ap_enable_reg_pp3_iter1, ap_CS_fsm_pp3_stage0, add_ln360_reg_1495, ap_block_pp3_stage0)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp3_stage0) and (ap_enable_reg_pp3_iter1 = ap_const_logic_1) and (icmp_ln360_reg_1491 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp3_stage0))) then 
            ap_phi_mux_indvar_flatten142_phi_fu_336_p4 <= add_ln360_reg_1495;
        else 
            ap_phi_mux_indvar_flatten142_phi_fu_336_p4 <= indvar_flatten142_reg_332;
        end if; 
    end process;


    ap_phi_mux_indvar_flatten22_phi_fu_226_p4_assign_proc : process(indvar_flatten22_reg_222, icmp_ln330_reg_1347, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, add_ln330_reg_1351, ap_block_pp1_stage0)
    begin
        if (((ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (icmp_ln330_reg_1347 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp1_stage0))) then 
            ap_phi_mux_indvar_flatten22_phi_fu_226_p4 <= add_ln330_reg_1351;
        else 
            ap_phi_mux_indvar_flatten22_phi_fu_226_p4 <= indvar_flatten22_reg_222;
        end if; 
    end process;


    ap_phi_mux_indvar_flatten29_phi_fu_303_p4_assign_proc : process(indvar_flatten29_reg_299, icmp_ln345_reg_1404, ap_enable_reg_pp2_iter1, ap_CS_fsm_pp2_stage0, select_ln347_reg_1466, ap_block_pp2_stage0)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (icmp_ln345_reg_1404 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp2_stage0))) then 
            ap_phi_mux_indvar_flatten29_phi_fu_303_p4 <= select_ln347_reg_1466;
        else 
            ap_phi_mux_indvar_flatten29_phi_fu_303_p4 <= indvar_flatten29_reg_299;
        end if; 
    end process;


    ap_phi_mux_indvar_flatten61_phi_fu_281_p4_assign_proc : process(indvar_flatten61_reg_277, icmp_ln345_reg_1404, ap_enable_reg_pp2_iter1, ap_CS_fsm_pp2_stage0, add_ln345_reg_1408, ap_block_pp2_stage0)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (icmp_ln345_reg_1404 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp2_stage0))) then 
            ap_phi_mux_indvar_flatten61_phi_fu_281_p4 <= add_ln345_reg_1408;
        else 
            ap_phi_mux_indvar_flatten61_phi_fu_281_p4 <= indvar_flatten61_reg_277;
        end if; 
    end process;


    ap_phi_mux_indvar_flatten68_phi_fu_380_p4_assign_proc : process(indvar_flatten68_reg_376, icmp_ln360_reg_1491, ap_enable_reg_pp3_iter1, ap_CS_fsm_pp3_stage0, select_ln364_reg_1554, ap_block_pp3_stage0)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp3_stage0) and (ap_enable_reg_pp3_iter1 = ap_const_logic_1) and (icmp_ln360_reg_1491 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp3_stage0))) then 
            ap_phi_mux_indvar_flatten68_phi_fu_380_p4 <= select_ln364_reg_1554;
        else 
            ap_phi_mux_indvar_flatten68_phi_fu_380_p4 <= indvar_flatten68_reg_376;
        end if; 
    end process;


    ap_phi_mux_indvar_flatten6_phi_fu_248_p4_assign_proc : process(indvar_flatten6_reg_244, icmp_ln330_reg_1347, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, select_ln332_reg_1379, ap_block_pp1_stage0)
    begin
        if (((ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (icmp_ln330_reg_1347 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp1_stage0))) then 
            ap_phi_mux_indvar_flatten6_phi_fu_248_p4 <= select_ln332_reg_1379;
        else 
            ap_phi_mux_indvar_flatten6_phi_fu_248_p4 <= indvar_flatten6_reg_244;
        end if; 
    end process;


    ap_phi_mux_indvar_flatten_phi_fu_193_p4_assign_proc : process(indvar_flatten_reg_189, icmp_ln317_reg_1318, ap_CS_fsm_pp0_stage0, add_ln317_reg_1322, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln317_reg_1318 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            ap_phi_mux_indvar_flatten_phi_fu_193_p4 <= add_ln317_reg_1322;
        else 
            ap_phi_mux_indvar_flatten_phi_fu_193_p4 <= indvar_flatten_reg_189;
        end if; 
    end process;


    ap_phi_mux_k_0_phi_fu_347_p4_assign_proc : process(k_0_reg_343, icmp_ln360_reg_1491, ap_enable_reg_pp3_iter1, ap_CS_fsm_pp3_stage0, select_ln360_1_reg_1517, ap_block_pp3_stage0)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp3_stage0) and (ap_enable_reg_pp3_iter1 = ap_const_logic_1) and (icmp_ln360_reg_1491 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp3_stage0))) then 
            ap_phi_mux_k_0_phi_fu_347_p4 <= select_ln360_1_reg_1517;
        else 
            ap_phi_mux_k_0_phi_fu_347_p4 <= k_0_reg_343;
        end if; 
    end process;


    ap_phi_mux_l_0_phi_fu_369_p4_assign_proc : process(l_0_reg_365, icmp_ln360_reg_1491, ap_enable_reg_pp3_iter1, ap_CS_fsm_pp3_stage0, select_ln362_1_reg_1564, ap_block_pp3_stage0)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp3_stage0) and (ap_enable_reg_pp3_iter1 = ap_const_logic_1) and (icmp_ln360_reg_1491 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp3_stage0))) then 
            ap_phi_mux_l_0_phi_fu_369_p4 <= select_ln362_1_reg_1564;
        else 
            ap_phi_mux_l_0_phi_fu_369_p4 <= l_0_reg_365;
        end if; 
    end process;


    ap_phi_mux_m1_0_phi_fu_259_p4_assign_proc : process(m1_0_reg_255, icmp_ln330_reg_1347, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, select_ln338_1_reg_1369, ap_block_pp1_stage0)
    begin
        if (((ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (icmp_ln330_reg_1347 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp1_stage0))) then 
            ap_phi_mux_m1_0_phi_fu_259_p4 <= select_ln338_1_reg_1369;
        else 
            ap_phi_mux_m1_0_phi_fu_259_p4 <= m1_0_reg_255;
        end if; 
    end process;


    ap_phi_mux_m4_0_phi_fu_314_p4_assign_proc : process(m4_0_reg_310, icmp_ln345_reg_1404, ap_enable_reg_pp2_iter1, ap_CS_fsm_pp2_stage0, select_ln353_1_reg_1446, ap_block_pp2_stage0)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (icmp_ln345_reg_1404 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp2_stage0))) then 
            ap_phi_mux_m4_0_phi_fu_314_p4 <= select_ln353_1_reg_1446;
        else 
            ap_phi_mux_m4_0_phi_fu_314_p4 <= m4_0_reg_310;
        end if; 
    end process;


    ap_phi_mux_m6_0_phi_fu_391_p4_assign_proc : process(m6_0_reg_387, icmp_ln360_reg_1491, ap_enable_reg_pp3_iter1, ap_CS_fsm_pp3_stage0, select_ln370_1_reg_1570, ap_block_pp3_stage0)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp3_stage0) and (ap_enable_reg_pp3_iter1 = ap_const_logic_1) and (icmp_ln360_reg_1491 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp3_stage0))) then 
            ap_phi_mux_m6_0_phi_fu_391_p4 <= select_ln370_1_reg_1570;
        else 
            ap_phi_mux_m6_0_phi_fu_391_p4 <= m6_0_reg_387;
        end if; 
    end process;


    ap_phi_mux_m_0_phi_fu_204_p4_assign_proc : process(m_0_reg_200, icmp_ln317_reg_1318, ap_CS_fsm_pp0_stage0, select_ln323_1_reg_1332, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln317_reg_1318 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            ap_phi_mux_m_0_phi_fu_204_p4 <= select_ln323_1_reg_1332;
        else 
            ap_phi_mux_m_0_phi_fu_204_p4 <= m_0_reg_200;
        end if; 
    end process;


    ap_phi_mux_n2_0_phi_fu_270_p4_assign_proc : process(n2_0_reg_266, icmp_ln330_reg_1347, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, n_1_reg_1389, ap_block_pp1_stage0)
    begin
        if (((ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (icmp_ln330_reg_1347 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp1_stage0))) then 
            ap_phi_mux_n2_0_phi_fu_270_p4 <= n_1_reg_1389;
        else 
            ap_phi_mux_n2_0_phi_fu_270_p4 <= n2_0_reg_266;
        end if; 
    end process;


    ap_phi_mux_n5_0_phi_fu_325_p4_assign_proc : process(n5_0_reg_321, icmp_ln345_reg_1404, ap_enable_reg_pp2_iter1, ap_CS_fsm_pp2_stage0, n_2_reg_1471, ap_block_pp2_stage0)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (icmp_ln345_reg_1404 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp2_stage0))) then 
            ap_phi_mux_n5_0_phi_fu_325_p4 <= n_2_reg_1471;
        else 
            ap_phi_mux_n5_0_phi_fu_325_p4 <= n5_0_reg_321;
        end if; 
    end process;


    ap_phi_mux_n7_0_phi_fu_402_p4_assign_proc : process(n7_0_reg_398, icmp_ln360_reg_1491, ap_enable_reg_pp3_iter1, ap_CS_fsm_pp3_stage0, n_3_reg_1601, ap_block_pp3_stage0)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp3_stage0) and (ap_enable_reg_pp3_iter1 = ap_const_logic_1) and (icmp_ln360_reg_1491 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp3_stage0))) then 
            ap_phi_mux_n7_0_phi_fu_402_p4 <= n_3_reg_1601;
        else 
            ap_phi_mux_n7_0_phi_fu_402_p4 <= n7_0_reg_398;
        end if; 
    end process;


    ap_phi_mux_n_0_phi_fu_215_p4_assign_proc : process(n_0_reg_211, icmp_ln317_reg_1318, ap_CS_fsm_pp0_stage0, n_reg_1342, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln317_reg_1318 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            ap_phi_mux_n_0_phi_fu_215_p4 <= n_reg_1342;
        else 
            ap_phi_mux_n_0_phi_fu_215_p4 <= n_0_reg_211;
        end if; 
    end process;


    ap_phi_mux_v3_0_phi_fu_292_p4_assign_proc : process(v3_0_reg_288, icmp_ln345_reg_1404, ap_enable_reg_pp2_iter1, ap_CS_fsm_pp2_stage0, select_ln345_1_reg_1424, ap_block_pp2_stage0)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (icmp_ln345_reg_1404 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp2_stage0))) then 
            ap_phi_mux_v3_0_phi_fu_292_p4 <= select_ln345_1_reg_1424;
        else 
            ap_phi_mux_v3_0_phi_fu_292_p4 <= v3_0_reg_288;
        end if; 
    end process;


    ap_phi_mux_v_0_phi_fu_237_p4_assign_proc : process(v_0_reg_233, icmp_ln330_reg_1347, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, select_ln330_1_reg_1356, ap_block_pp1_stage0)
    begin
        if (((ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (icmp_ln330_reg_1347 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp1_stage0))) then 
            ap_phi_mux_v_0_phi_fu_237_p4 <= select_ln330_1_reg_1356;
        else 
            ap_phi_mux_v_0_phi_fu_237_p4 <= v_0_reg_233;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state188)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state188)) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    dct_r_address0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp3_stage5, ap_enable_reg_pp1_iter6, ap_enable_reg_pp2_iter6, ap_enable_reg_pp3_iter6, ap_CS_fsm_pp3_stage6, ap_CS_fsm_pp1_stage6, ap_CS_fsm_pp1_stage7, ap_CS_fsm_pp2_stage7, ap_enable_reg_pp1_iter5, ap_enable_reg_pp3_iter7, dct_addr_1_reg_1394, ap_CS_fsm_pp2_stage0, dct_addr_2_reg_1476, dct_addr_3_reg_1586_pp3_iter6_reg, dct_addr_3_reg_1586_pp3_iter7_reg, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage3, ap_block_pp2_stage0, ap_block_pp3_stage5, ap_block_pp1_stage6, ap_block_pp1_stage7, ap_block_pp2_stage7, ap_block_pp3_stage6, zext_ln330_1_fu_767_p1, zext_ln353_1_fu_979_p1, ap_block_pp0_stage4, ap_block_pp0_stage3)
    begin
        if (((ap_enable_reg_pp3_iter7 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage5) and (ap_const_boolean_0 = ap_block_pp3_stage5))) then 
            dct_r_address0 <= dct_addr_3_reg_1586_pp3_iter7_reg;
        elsif (((ap_const_logic_1 = ap_CS_fsm_pp3_stage6) and (ap_enable_reg_pp3_iter6 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp3_stage6))) then 
            dct_r_address0 <= dct_addr_3_reg_1586_pp3_iter6_reg;
        elsif (((ap_const_logic_1 = ap_CS_fsm_pp2_stage7) and (ap_enable_reg_pp2_iter6 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp2_stage7))) then 
            dct_r_address0 <= dct_addr_2_reg_1476;
        elsif (((ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (ap_enable_reg_pp2_iter6 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp2_stage0))) then 
            dct_r_address0 <= zext_ln353_1_fu_979_p1(6 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_pp1_stage6) and (ap_enable_reg_pp1_iter6 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage6))) then 
            dct_r_address0 <= dct_addr_1_reg_1394;
        elsif (((ap_enable_reg_pp1_iter5 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage7) and (ap_const_boolean_0 = ap_block_pp1_stage7))) then 
            dct_r_address0 <= zext_ln330_1_fu_767_p1(6 - 1 downto 0);
        elsif ((((ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage3)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage4)))) then 
            dct_r_address0 <= ap_const_lv64_0(6 - 1 downto 0);
        else 
            dct_r_address0 <= "XXXXXX";
        end if; 
    end process;


    dct_r_ce0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4_11001, ap_CS_fsm_pp3_stage5, ap_block_pp3_stage5_11001, ap_enable_reg_pp1_iter6, ap_enable_reg_pp2_iter6, ap_enable_reg_pp3_iter6, ap_CS_fsm_pp3_stage6, ap_block_pp3_stage6_11001, ap_CS_fsm_pp1_stage6, ap_block_pp1_stage6_11001, ap_CS_fsm_pp1_stage7, ap_block_pp1_stage7_11001, ap_CS_fsm_pp2_stage7, ap_block_pp2_stage7_11001, ap_enable_reg_pp1_iter5, ap_enable_reg_pp3_iter7, ap_CS_fsm_pp2_stage0, ap_block_pp2_stage0_11001, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001)) or ((ap_const_boolean_0 = ap_block_pp1_stage7_11001) and (ap_enable_reg_pp1_iter5 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage7)) or ((ap_const_boolean_0 = ap_block_pp3_stage6_11001) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage6) and (ap_enable_reg_pp3_iter6 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (ap_enable_reg_pp2_iter6 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp2_stage7_11001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage7) and (ap_enable_reg_pp2_iter6 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp1_stage6_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage6) and (ap_enable_reg_pp1_iter6 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp3_stage5_11001) and (ap_enable_reg_pp3_iter7 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage5)) or ((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)))) then 
            dct_r_ce0 <= ap_const_logic_1;
        else 
            dct_r_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    dct_r_d0_assign_proc : process(ap_CS_fsm_pp3_stage5, ap_enable_reg_pp1_iter6, ap_enable_reg_pp2_iter6, ap_CS_fsm_pp1_stage6, ap_CS_fsm_pp2_stage7, ap_enable_reg_pp3_iter7, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage3, ap_block_pp3_stage5, ap_block_pp1_stage6, ap_block_pp2_stage7, grp_fu_426_p2, ap_block_pp0_stage3, grp_fu_439_p1)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_pp2_stage7) and (ap_enable_reg_pp2_iter6 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp2_stage7)) or ((ap_const_logic_1 = ap_CS_fsm_pp1_stage6) and (ap_enable_reg_pp1_iter6 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage6)) or ((ap_enable_reg_pp3_iter7 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage5) and (ap_const_boolean_0 = ap_block_pp3_stage5)))) then 
            dct_r_d0 <= grp_fu_439_p1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage3))) then 
            dct_r_d0 <= grp_fu_426_p2;
        else 
            dct_r_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    dct_r_we0_assign_proc : process(ap_CS_fsm_pp3_stage5, ap_block_pp3_stage5_11001, ap_enable_reg_pp1_iter6, ap_enable_reg_pp2_iter6, icmp_ln345_reg_1404_pp2_iter6_reg, ap_CS_fsm_pp1_stage6, ap_block_pp1_stage6_11001, ap_CS_fsm_pp2_stage7, ap_block_pp2_stage7_11001, icmp_ln330_reg_1347_pp1_iter6_reg, ap_enable_reg_pp3_iter7, icmp_ln360_reg_1491_pp3_iter7_reg, icmp_ln317_reg_1318_pp0_iter1_reg, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (icmp_ln317_reg_1318_pp0_iter1_reg = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_pp2_stage7_11001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage7) and (ap_enable_reg_pp2_iter6 = ap_const_logic_1) and (icmp_ln345_reg_1404_pp2_iter6_reg = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_pp1_stage6_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage6) and (ap_enable_reg_pp1_iter6 = ap_const_logic_1) and (icmp_ln330_reg_1347_pp1_iter6_reg = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_pp3_stage5_11001) and (ap_enable_reg_pp3_iter7 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage5) and (icmp_ln360_reg_1491_pp3_iter7_reg = ap_const_lv1_0)))) then 
            dct_r_we0 <= ap_const_logic_1;
        else 
            dct_r_we0 <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_432_p1_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp3_stage2, ap_enable_reg_pp3_iter4, ap_block_pp3_stage2, ap_block_pp0_stage1)
    begin
        if (((ap_enable_reg_pp3_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage2) and (ap_const_boolean_0 = ap_block_pp3_stage2))) then 
            grp_fu_432_p1 <= ap_const_lv32_3E800000;
        elsif (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1))) then 
            grp_fu_432_p1 <= ap_const_lv32_3E000000;
        else 
            grp_fu_432_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_443_p0_assign_proc : process(ori_q0, dct_r_q0, ap_CS_fsm_pp1_stage1, ap_enable_reg_pp1_iter0, ap_CS_fsm_pp2_stage1, ap_enable_reg_pp2_iter0, ap_enable_reg_pp3_iter4, grp_fu_432_p2, ap_CS_fsm_pp3_stage5, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter6, ap_CS_fsm_pp3_stage7, ap_enable_reg_pp3_iter6, ap_block_pp1_stage0, ap_block_pp3_stage5, ap_block_pp3_stage7, ap_block_pp1_stage1, ap_block_pp2_stage1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp3_stage5) and (ap_enable_reg_pp3_iter4 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp3_stage5))) then 
            grp_fu_443_p0 <= grp_fu_432_p2;
        elsif ((((ap_enable_reg_pp3_iter6 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage7) and (ap_const_boolean_0 = ap_block_pp3_stage7)) or ((ap_enable_reg_pp1_iter6 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0)))) then 
            grp_fu_443_p0 <= dct_r_q0;
        elsif ((((ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage1) and (ap_const_boolean_0 = ap_block_pp2_stage1)) or ((ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage1) and (ap_const_boolean_0 = ap_block_pp1_stage1)))) then 
            grp_fu_443_p0 <= ori_q0;
        else 
            grp_fu_443_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_453_p0_assign_proc : process(ap_CS_fsm_pp1_stage1, ap_enable_reg_pp1_iter6, ap_enable_reg_pp2_iter6, grp_fu_443_p1, ap_CS_fsm_pp2_stage2, ap_CS_fsm_pp3_stage0, ap_enable_reg_pp3_iter7, grp_fu_448_p1, ap_block_pp3_stage0, ap_block_pp1_stage1, ap_block_pp2_stage2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp2_stage2) and (ap_enable_reg_pp2_iter6 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp2_stage2))) then 
            grp_fu_453_p0 <= grp_fu_448_p1;
        elsif ((((ap_enable_reg_pp3_iter7 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0) and (ap_const_boolean_0 = ap_block_pp3_stage0)) or ((ap_enable_reg_pp1_iter6 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage1) and (ap_const_boolean_0 = ap_block_pp1_stage1)))) then 
            grp_fu_453_p0 <= grp_fu_443_p1;
        else 
            grp_fu_453_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_453_p1_assign_proc : process(ap_CS_fsm_pp1_stage1, ap_enable_reg_pp1_iter6, ap_enable_reg_pp2_iter6, ap_CS_fsm_pp2_stage2, reg_518, ap_CS_fsm_pp3_stage0, ap_enable_reg_pp3_iter7, tmp_72_reg_1616, ap_block_pp3_stage0, ap_block_pp1_stage1, ap_block_pp2_stage2)
    begin
        if (((ap_enable_reg_pp3_iter7 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0) and (ap_const_boolean_0 = ap_block_pp3_stage0))) then 
            grp_fu_453_p1 <= tmp_72_reg_1616;
        elsif ((((ap_const_logic_1 = ap_CS_fsm_pp2_stage2) and (ap_enable_reg_pp2_iter6 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp2_stage2)) or ((ap_enable_reg_pp1_iter6 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage1) and (ap_const_boolean_0 = ap_block_pp1_stage1)))) then 
            grp_fu_453_p1 <= reg_518;
        else 
            grp_fu_453_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_460_p0_assign_proc : process(ap_enable_reg_pp1_iter0, ap_enable_reg_pp2_iter0, ap_CS_fsm_pp3_stage2, ap_CS_fsm_pp3_stage5, ap_CS_fsm_pp3_stage7, ap_enable_reg_pp3_iter6, grp_fu_443_p1, reg_491, ap_CS_fsm_pp1_stage2, ap_CS_fsm_pp3_stage6, ap_CS_fsm_pp2_stage2, grp_fu_468_p1, reg_496, ap_CS_fsm_pp1_stage6, ap_enable_reg_pp3_iter0, reg_501, reg_501_pp1_iter4_reg, ap_CS_fsm_pp2_stage7, reg_501_pp2_iter4_reg, ap_CS_fsm_pp3_stage4, ap_enable_reg_pp3_iter1, reg_507, ap_CS_fsm_pp1_stage3, ap_enable_reg_pp1_iter1, ap_CS_fsm_pp2_stage4, ap_enable_reg_pp2_iter1, ap_enable_reg_pp1_iter5, ap_enable_reg_pp2_iter5, ap_enable_reg_pp3_iter5, reg_518, ap_CS_fsm_pp3_stage0, tmp_70_reg_1596, ap_block_pp3_stage0, ap_block_pp1_stage2, ap_block_pp3_stage4, ap_block_pp1_stage3, ap_block_pp2_stage4, ap_block_pp3_stage5, ap_block_pp1_stage6, ap_block_pp2_stage7, ap_block_pp3_stage7, ap_CS_fsm_pp1_stage4, ap_block_pp1_stage4, ap_CS_fsm_pp2_stage5, ap_block_pp2_stage5, ap_block_pp3_stage6, ap_block_pp3_stage2, ap_block_pp2_stage2)
    begin
        if (((ap_enable_reg_pp3_iter6 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage2) and (ap_const_boolean_0 = ap_block_pp3_stage2))) then 
            grp_fu_460_p0 <= reg_518;
        elsif (((ap_enable_reg_pp3_iter5 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage4) and (ap_const_boolean_0 = ap_block_pp3_stage4))) then 
            grp_fu_460_p0 <= reg_491;
        elsif (((ap_enable_reg_pp3_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage5) and (ap_const_boolean_0 = ap_block_pp3_stage5))) then 
            grp_fu_460_p0 <= reg_501;
        elsif (((ap_const_logic_1 = ap_CS_fsm_pp3_stage0) and (ap_enable_reg_pp3_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp3_stage0))) then 
            grp_fu_460_p0 <= tmp_70_reg_1596;
        elsif (((ap_enable_reg_pp2_iter5 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage4) and (ap_const_boolean_0 = ap_block_pp2_stage4))) then 
            grp_fu_460_p0 <= reg_501_pp2_iter4_reg;
        elsif ((((ap_enable_reg_pp3_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage7) and (ap_const_boolean_0 = ap_block_pp3_stage7)) or ((ap_const_logic_1 = ap_CS_fsm_pp2_stage7) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp2_stage7)))) then 
            grp_fu_460_p0 <= reg_496;
        elsif (((ap_enable_reg_pp1_iter5 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage3) and (ap_const_boolean_0 = ap_block_pp1_stage3))) then 
            grp_fu_460_p0 <= reg_501_pp1_iter4_reg;
        elsif ((((ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage5) and (ap_const_boolean_0 = ap_block_pp2_stage5)) or ((ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage4) and (ap_const_boolean_0 = ap_block_pp1_stage4)) or ((ap_enable_reg_pp3_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage6) and (ap_const_boolean_0 = ap_block_pp3_stage6)))) then 
            grp_fu_460_p0 <= reg_507;
        elsif (((ap_const_logic_1 = ap_CS_fsm_pp1_stage6) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage6))) then 
            grp_fu_460_p0 <= grp_fu_468_p1;
        elsif ((((ap_const_logic_1 = ap_CS_fsm_pp2_stage2) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp2_stage2)) or ((ap_const_logic_1 = ap_CS_fsm_pp1_stage2) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage2)))) then 
            grp_fu_460_p0 <= grp_fu_443_p1;
        else 
            grp_fu_460_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_460_p1_assign_proc : process(ap_enable_reg_pp1_iter0, ap_enable_reg_pp2_iter0, ap_CS_fsm_pp3_stage2, ap_CS_fsm_pp3_stage5, ap_CS_fsm_pp3_stage7, ap_enable_reg_pp3_iter6, ap_CS_fsm_pp1_stage2, ap_CS_fsm_pp3_stage6, ap_CS_fsm_pp2_stage2, ap_CS_fsm_pp1_stage6, ap_enable_reg_pp3_iter0, ap_CS_fsm_pp2_stage7, ap_CS_fsm_pp3_stage4, ap_enable_reg_pp3_iter1, ap_CS_fsm_pp1_stage3, ap_enable_reg_pp1_iter1, ap_CS_fsm_pp2_stage4, ap_enable_reg_pp2_iter1, reg_513, ap_enable_reg_pp1_iter5, ap_enable_reg_pp2_iter5, ap_enable_reg_pp3_iter5, ap_CS_fsm_pp3_stage0, tmp_i_i3_reg_1611, ap_block_pp3_stage0, ap_block_pp1_stage2, ap_block_pp3_stage4, ap_block_pp1_stage3, ap_block_pp2_stage4, ap_block_pp3_stage5, ap_block_pp1_stage6, ap_block_pp2_stage7, ap_block_pp3_stage7, ap_CS_fsm_pp1_stage4, ap_block_pp1_stage4, ap_CS_fsm_pp2_stage5, ap_block_pp2_stage5, ap_block_pp3_stage6, ap_block_pp3_stage2, ap_block_pp2_stage2)
    begin
        if (((ap_enable_reg_pp3_iter6 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage2) and (ap_const_boolean_0 = ap_block_pp3_stage2))) then 
            grp_fu_460_p1 <= tmp_i_i3_reg_1611;
        elsif ((((ap_enable_reg_pp2_iter5 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage4) and (ap_const_boolean_0 = ap_block_pp2_stage4)) or ((ap_enable_reg_pp1_iter5 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage3) and (ap_const_boolean_0 = ap_block_pp1_stage3)) or ((ap_enable_reg_pp3_iter5 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage4) and (ap_const_boolean_0 = ap_block_pp3_stage4)))) then 
            grp_fu_460_p1 <= reg_513;
        elsif ((((ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage5) and (ap_const_boolean_0 = ap_block_pp2_stage5)) or ((ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage4) and (ap_const_boolean_0 = ap_block_pp1_stage4)) or ((ap_enable_reg_pp3_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage6) and (ap_const_boolean_0 = ap_block_pp3_stage6)) or ((ap_enable_reg_pp3_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage5) and (ap_const_boolean_0 = ap_block_pp3_stage5)))) then 
            grp_fu_460_p1 <= ap_const_lv64_3FB0000000000000;
        elsif ((((ap_const_logic_1 = ap_CS_fsm_pp3_stage0) and (ap_enable_reg_pp3_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp3_stage0)) or ((ap_enable_reg_pp3_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage7) and (ap_const_boolean_0 = ap_block_pp3_stage7)) or ((ap_const_logic_1 = ap_CS_fsm_pp2_stage7) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp2_stage7)) or ((ap_const_logic_1 = ap_CS_fsm_pp1_stage6) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage6)))) then 
            grp_fu_460_p1 <= ap_const_lv64_400921FB54442D28;
        elsif ((((ap_const_logic_1 = ap_CS_fsm_pp2_stage2) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp2_stage2)) or ((ap_const_logic_1 = ap_CS_fsm_pp1_stage2) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage2)))) then 
            grp_fu_460_p1 <= ap_const_lv64_3FC6A09E667F055A;
        else 
            grp_fu_460_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_468_p0_assign_proc : process(ap_CS_fsm_pp1_stage1, ap_enable_reg_pp1_iter0, ap_CS_fsm_pp2_stage1, ap_enable_reg_pp2_iter0, ap_CS_fsm_pp3_stage2, ap_enable_reg_pp3_iter0, ap_CS_fsm_pp3_stage1, zext_ln338_3_fu_757_p1, zext_ln353_4_fu_956_p1, zext_ln370_4_fu_1221_p1, zext_ln370_7_fu_1278_p1, ap_block_pp3_stage1, ap_block_pp3_stage2, ap_block_pp1_stage1, ap_block_pp2_stage1)
    begin
        if (((ap_enable_reg_pp3_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage2) and (ap_const_boolean_0 = ap_block_pp3_stage2))) then 
            grp_fu_468_p0 <= zext_ln370_7_fu_1278_p1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_pp3_stage1) and (ap_enable_reg_pp3_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp3_stage1))) then 
            grp_fu_468_p0 <= zext_ln370_4_fu_1221_p1;
        elsif (((ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage1) and (ap_const_boolean_0 = ap_block_pp2_stage1))) then 
            grp_fu_468_p0 <= zext_ln353_4_fu_956_p1;
        elsif (((ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage1) and (ap_const_boolean_0 = ap_block_pp1_stage1))) then 
            grp_fu_468_p0 <= zext_ln338_3_fu_757_p1;
        else 
            grp_fu_468_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    grp_sin_or_cos_double_s_fu_409_ap_start <= grp_sin_or_cos_double_s_fu_409_ap_start_reg;

    grp_sin_or_cos_double_s_fu_409_t_in_assign_proc : process(ap_CS_fsm_pp1_stage2, reg_501, ap_CS_fsm_pp3_stage4, ap_enable_reg_pp3_iter2, icmp_ln360_reg_1491_pp3_iter2_reg, ap_CS_fsm_pp3_stage3, reg_507, ap_enable_reg_pp1_iter2, icmp_ln330_reg_1347_pp1_iter2_reg, ap_enable_reg_pp2_iter2, icmp_ln345_reg_1404_pp2_iter2_reg, ap_CS_fsm_pp2_stage3, ap_block_pp1_stage2, ap_block_pp2_stage3, ap_block_pp3_stage3, ap_block_pp3_stage4)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_pp3_stage3) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (icmp_ln360_reg_1491_pp3_iter2_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp3_stage3)) or ((ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage4) and (icmp_ln360_reg_1491_pp3_iter2_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp3_stage4)))) then 
            grp_sin_or_cos_double_s_fu_409_t_in <= reg_501;
        elsif ((((ap_const_logic_1 = ap_CS_fsm_pp2_stage3) and (ap_enable_reg_pp2_iter2 = ap_const_logic_1) and (icmp_ln345_reg_1404_pp2_iter2_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp2_stage3)) or ((ap_enable_reg_pp1_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage2) and (icmp_ln330_reg_1347_pp1_iter2_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp1_stage2)))) then 
            grp_sin_or_cos_double_s_fu_409_t_in <= reg_507;
        else 
            grp_sin_or_cos_double_s_fu_409_t_in <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    icmp_ln317_fu_534_p2 <= "1" when (ap_phi_mux_indvar_flatten_phi_fu_193_p4 = ap_const_lv7_40) else "0";
    icmp_ln320_fu_552_p2 <= "1" when (ap_phi_mux_n_0_phi_fu_215_p4 = ap_const_lv4_8) else "0";
    icmp_ln330_fu_606_p2 <= "1" when (ap_phi_mux_indvar_flatten22_phi_fu_226_p4 = ap_const_lv9_1C0) else "0";
    icmp_ln332_fu_624_p2 <= "1" when (ap_phi_mux_indvar_flatten6_phi_fu_248_p4 = ap_const_lv8_40) else "0";
    icmp_ln335_fu_652_p2 <= "1" when (ap_phi_mux_n2_0_phi_fu_270_p4 = ap_const_lv4_8) else "0";
    icmp_ln345_fu_797_p2 <= "1" when (ap_phi_mux_indvar_flatten61_phi_fu_281_p4 = ap_const_lv9_1C0) else "0";
    icmp_ln347_fu_815_p2 <= "1" when (ap_phi_mux_indvar_flatten29_phi_fu_303_p4 = ap_const_lv8_40) else "0";
    icmp_ln350_fu_843_p2 <= "1" when (ap_phi_mux_n5_0_phi_fu_325_p4 = ap_const_lv4_8) else "0";
    icmp_ln360_fu_1010_p2 <= "1" when (ap_phi_mux_indvar_flatten142_phi_fu_336_p4 = ap_const_lv12_C40) else "0";
    icmp_ln362_fu_1028_p2 <= "1" when (ap_phi_mux_indvar_flatten100_phi_fu_358_p4 = ap_const_lv10_1C0) else "0";
    icmp_ln364_fu_1068_p2 <= "1" when (ap_phi_mux_indvar_flatten68_phi_fu_380_p4 = ap_const_lv8_40) else "0";
    icmp_ln367_fu_1056_p2 <= "1" when (ap_phi_mux_n7_0_phi_fu_402_p4 = ap_const_lv4_8) else "0";
    k_fu_1022_p2 <= std_logic_vector(unsigned(ap_const_lv4_1) + unsigned(ap_phi_mux_k_0_phi_fu_347_p4));
    l_fu_1170_p2 <= std_logic_vector(unsigned(ap_const_lv4_1) + unsigned(select_ln360_reg_1511));
    m_14_fu_664_p2 <= std_logic_vector(unsigned(ap_const_lv4_1) + unsigned(select_ln330_fu_630_p3));
    m_15_fu_855_p2 <= std_logic_vector(unsigned(ap_const_lv4_1) + unsigned(select_ln345_fu_821_p3));
    m_16_fu_1112_p2 <= std_logic_vector(unsigned(ap_const_lv4_1) + unsigned(select_ln362_fu_1086_p3));
    m_fu_546_p2 <= std_logic_vector(unsigned(ap_phi_mux_m_0_phi_fu_204_p4) + unsigned(ap_const_lv4_1));
    mul_ln338_fu_751_p0 <= mul_ln338_fu_751_p00(4 - 1 downto 0);
    mul_ln338_fu_751_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln330_1_reg_1356),8));
    mul_ln338_fu_751_p1 <= mul_ln338_fu_751_p10(4 - 1 downto 0);
    mul_ln338_fu_751_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln338_fu_741_p2),8));
    mul_ln338_fu_751_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(mul_ln338_fu_751_p0) * unsigned(mul_ln338_fu_751_p1), 8));
    mul_ln353_1_fu_943_p0 <= mul_ln353_1_fu_943_p00(4 - 1 downto 0);
    mul_ln353_1_fu_943_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln345_1_reg_1424),8));
    mul_ln353_1_fu_943_p1 <= mul_ln353_1_fu_943_p10(4 - 1 downto 0);
    mul_ln353_1_fu_943_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln353_2_fu_933_p2),8));
    mul_ln353_1_fu_943_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(mul_ln353_1_fu_943_p0) * unsigned(mul_ln353_1_fu_943_p1), 8));
    mul_ln353_fu_791_p0 <= mul_ln353_fu_791_p00(4 - 1 downto 0);
    mul_ln353_fu_791_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln353_fu_781_p2),8));
    mul_ln353_fu_791_p1 <= mul_ln353_fu_791_p10(4 - 1 downto 0);
    mul_ln353_fu_791_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ap_phi_mux_v3_0_phi_fu_292_p4),8));
    mul_ln353_fu_791_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(mul_ln353_fu_791_p0) * unsigned(mul_ln353_fu_791_p1), 8));
    mul_ln370_1_fu_1272_p0 <= mul_ln370_1_fu_1272_p00(4 - 1 downto 0);
    mul_ln370_1_fu_1272_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln370_1_fu_1262_p2),8));
    mul_ln370_1_fu_1272_p1 <= zext_ln362_1_fu_1243_p1(4 - 1 downto 0);
    mul_ln370_1_fu_1272_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(mul_ln370_1_fu_1272_p0) * unsigned(mul_ln370_1_fu_1272_p1), 8));
    mul_ln370_2_fu_1208_p0 <= mul_ln370_2_fu_1208_p00(4 - 1 downto 0);
    mul_ln370_2_fu_1208_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln370_3_fu_1198_p2),8));
    mul_ln370_2_fu_1208_p1 <= zext_ln360_1_fu_1158_p1(4 - 1 downto 0);
    mul_ln370_2_fu_1208_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(mul_ln370_2_fu_1208_p0) * unsigned(mul_ln370_2_fu_1208_p1), 8));
    mul_ln370_fu_1004_p0 <= mul_ln370_fu_1004_p00(4 - 1 downto 0);
    mul_ln370_fu_1004_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln370_fu_994_p2),8));
    mul_ln370_fu_1004_p1 <= mul_ln370_fu_1004_p10(4 - 1 downto 0);
    mul_ln370_fu_1004_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ap_phi_mux_k_0_phi_fu_347_p4),8));
    mul_ln370_fu_1004_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(mul_ln370_fu_1004_p0) * unsigned(mul_ln370_fu_1004_p1), 8));
    n_1_fu_762_p2 <= std_logic_vector(unsigned(ap_const_lv4_1) + unsigned(select_ln338_reg_1363));
    n_2_fu_967_p2 <= std_logic_vector(unsigned(ap_const_lv4_1) + unsigned(select_ln353_reg_1441));
    n_3_fu_1283_p2 <= std_logic_vector(unsigned(ap_const_lv4_1) + unsigned(select_ln370_reg_1547));
    n_fu_601_p2 <= std_logic_vector(unsigned(select_ln323_reg_1327) + unsigned(ap_const_lv4_1));
    or_ln338_1_fu_670_p2 <= (icmp_ln332_fu_624_p2 or and_ln330_fu_658_p2);
    or_ln338_fu_741_p2 <= (shl_ln338_fu_736_p2 or ap_const_lv4_1);
    or_ln353_1_fu_861_p2 <= (icmp_ln347_fu_815_p2 or and_ln345_fu_849_p2);
    or_ln353_2_fu_933_p2 <= (shl_ln353_1_fu_928_p2 or ap_const_lv4_1);
    or_ln353_fu_781_p2 <= (shl_ln353_fu_775_p2 or ap_const_lv4_1);
    or_ln362_1_fu_1100_p2 <= (xor_ln362_fu_1094_p2 or icmp_ln362_fu_1028_p2);
    or_ln362_fu_1080_p2 <= (icmp_ln362_fu_1028_p2 or and_ln360_1_fu_1074_p2);
    or_ln370_1_fu_1262_p2 <= (shl_ln370_2_fu_1257_p2 or ap_const_lv4_1);
    or_ln370_2_fu_1118_p2 <= (and_ln362_fu_1106_p2 or and_ln360_1_fu_1074_p2);
    or_ln370_3_fu_1198_p2 <= (shl_ln370_1_fu_1193_p2 or ap_const_lv4_1);
    or_ln370_4_fu_1124_p2 <= (or_ln370_2_fu_1118_p2 or icmp_ln362_fu_1028_p2);
    or_ln370_fu_994_p2 <= (shl_ln370_fu_988_p2 or ap_const_lv4_1);

    ori_address0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp1_iter0, ap_enable_reg_pp2_iter0, ap_enable_reg_pp3_iter4, ap_CS_fsm_pp1_stage0, ap_CS_fsm_pp3_stage1, ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp2_stage0, ap_block_pp0_stage0, ap_block_pp1_stage0, ap_block_pp2_stage0, ap_block_pp3_stage1, zext_ln323_1_fu_596_p1, zext_ln338_1_fu_714_p1, zext_ln353_6_fu_905_p1, zext_ln370_8_fu_1308_p1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp3_stage1) and (ap_enable_reg_pp3_iter4 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp3_stage1))) then 
            ori_address0 <= zext_ln370_8_fu_1308_p1(6 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp2_stage0))) then 
            ori_address0 <= zext_ln353_6_fu_905_p1(6 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0))) then 
            ori_address0 <= zext_ln338_1_fu_714_p1(6 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            ori_address0 <= zext_ln323_1_fu_596_p1(6 - 1 downto 0);
        else 
            ori_address0 <= "XXXXXX";
        end if; 
    end process;


    ori_ce0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp1_iter0, ap_enable_reg_pp2_iter0, ap_enable_reg_pp3_iter4, ap_CS_fsm_pp1_stage0, ap_block_pp1_stage0_11001, ap_CS_fsm_pp3_stage1, ap_block_pp3_stage1_11001, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_CS_fsm_pp2_stage0, ap_block_pp2_stage0_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp3_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage1) and (ap_enable_reg_pp3_iter4 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)))) then 
            ori_ce0 <= ap_const_logic_1;
        else 
            ori_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    select_ln323_1_fu_566_p3 <= 
        m_fu_546_p2 when (icmp_ln320_fu_552_p2(0) = '1') else 
        ap_phi_mux_m_0_phi_fu_204_p4;
    select_ln323_fu_558_p3 <= 
        ap_const_lv4_0 when (icmp_ln320_fu_552_p2(0) = '1') else 
        ap_phi_mux_n_0_phi_fu_215_p4;
    select_ln330_1_fu_638_p3 <= 
        v_fu_618_p2 when (icmp_ln332_fu_624_p2(0) = '1') else 
        ap_phi_mux_v_0_phi_fu_237_p4;
    select_ln330_fu_630_p3 <= 
        ap_const_lv4_0 when (icmp_ln332_fu_624_p2(0) = '1') else 
        ap_phi_mux_m1_0_phi_fu_259_p4;
    select_ln332_fu_725_p3 <= 
        ap_const_lv8_1 when (icmp_ln332_fu_624_p2(0) = '1') else 
        add_ln332_1_fu_719_p2;
    select_ln338_1_fu_684_p3 <= 
        m_14_fu_664_p2 when (and_ln330_fu_658_p2(0) = '1') else 
        select_ln330_fu_630_p3;
    select_ln338_fu_676_p3 <= 
        ap_const_lv4_0 when (or_ln338_1_fu_670_p2(0) = '1') else 
        ap_phi_mux_n2_0_phi_fu_270_p4;
    select_ln345_1_fu_829_p3 <= 
        v_5_fu_809_p2 when (icmp_ln347_fu_815_p2(0) = '1') else 
        ap_phi_mux_v3_0_phi_fu_292_p4;
    select_ln345_2_fu_922_p3 <= 
        zext_ln345_2_fu_919_p1 when (icmp_ln347_reg_1418(0) = '1') else 
        mul_ln353_reg_1399;
    select_ln345_fu_821_p3 <= 
        ap_const_lv4_0 when (icmp_ln347_fu_815_p2(0) = '1') else 
        ap_phi_mux_m4_0_phi_fu_314_p4;
    select_ln347_fu_961_p3 <= 
        ap_const_lv8_1 when (icmp_ln347_reg_1418(0) = '1') else 
        add_ln347_1_reg_1456;
    select_ln353_1_fu_875_p3 <= 
        m_15_fu_855_p2 when (and_ln345_fu_849_p2(0) = '1') else 
        select_ln345_fu_821_p3;
    select_ln353_2_fu_949_p3 <= 
        mul_ln353_1_fu_943_p2 when (and_ln345_reg_1431(0) = '1') else 
        select_ln345_2_fu_922_p3;
    select_ln353_fu_867_p3 <= 
        ap_const_lv4_0 when (or_ln353_1_fu_861_p2(0) = '1') else 
        ap_phi_mux_n5_0_phi_fu_325_p4;
    select_ln360_1_fu_1042_p3 <= 
        k_fu_1022_p2 when (icmp_ln362_fu_1028_p2(0) = '1') else 
        ap_phi_mux_k_0_phi_fu_347_p4;
    select_ln360_2_fu_1164_p3 <= 
        zext_ln360_2_fu_1161_p1 when (icmp_ln362_reg_1505(0) = '1') else 
        mul_ln370_reg_1486;
    select_ln360_fu_1034_p3 <= 
        ap_const_lv4_1 when (icmp_ln362_fu_1028_p2(0) = '1') else 
        ap_phi_mux_l_0_phi_fu_369_p4;
    select_ln362_1_fu_1175_p3 <= 
        l_fu_1170_p2 when (and_ln360_1_reg_1524(0) = '1') else 
        select_ln360_reg_1511;
    select_ln362_2_fu_1181_p3 <= 
        zext_ln360_1_fu_1158_p1 when (and_ln360_1_reg_1524(0) = '1') else 
        select_ln360_2_fu_1164_p3;
    select_ln362_3_fu_1226_p3 <= 
        ap_const_lv10_1 when (icmp_ln362_reg_1505(0) = '1') else 
        add_ln362_1_reg_1559;
    select_ln362_fu_1086_p3 <= 
        ap_const_lv4_0 when (or_ln362_fu_1080_p2(0) = '1') else 
        ap_phi_mux_m6_0_phi_fu_391_p4;
    select_ln364_fu_1144_p3 <= 
        ap_const_lv8_1 when (or_ln362_fu_1080_p2(0) = '1') else 
        add_ln364_1_fu_1138_p2;
    select_ln370_1_fu_1188_p3 <= 
        m_16_reg_1541 when (and_ln362_reg_1535(0) = '1') else 
        select_ln362_reg_1530;
    select_ln370_2_fu_1214_p3 <= 
        mul_ln370_2_fu_1208_p2 when (and_ln362_reg_1535(0) = '1') else 
        select_ln362_2_fu_1181_p3;
    select_ln370_fu_1130_p3 <= 
        ap_const_lv4_0 when (or_ln370_4_fu_1124_p2(0) = '1') else 
        ap_phi_mux_n7_0_phi_fu_402_p4;
    shl_ln338_fu_736_p2 <= std_logic_vector(shift_left(unsigned(select_ln338_reg_1363),to_integer(unsigned('0' & ap_const_lv4_1(4-1 downto 0)))));
    shl_ln353_1_fu_928_p2 <= std_logic_vector(shift_left(unsigned(m_15_reg_1436),to_integer(unsigned('0' & ap_const_lv4_1(4-1 downto 0)))));
    shl_ln353_fu_775_p2 <= std_logic_vector(shift_left(unsigned(ap_phi_mux_m4_0_phi_fu_314_p4),to_integer(unsigned('0' & ap_const_lv4_1(4-1 downto 0)))));
    shl_ln370_1_fu_1193_p2 <= std_logic_vector(shift_left(unsigned(m_16_reg_1541),to_integer(unsigned('0' & ap_const_lv4_1(4-1 downto 0)))));
    shl_ln370_2_fu_1257_p2 <= std_logic_vector(shift_left(unsigned(select_ln370_reg_1547),to_integer(unsigned('0' & ap_const_lv4_1(4-1 downto 0)))));
    shl_ln370_fu_988_p2 <= std_logic_vector(shift_left(unsigned(ap_phi_mux_m6_0_phi_fu_391_p4),to_integer(unsigned('0' & ap_const_lv4_1(4-1 downto 0)))));
    tmp_76_fu_574_p3 <= (select_ln323_1_fu_566_p3 & ap_const_lv3_0);
    tmp_77_fu_692_p3 <= (select_ln338_1_fu_684_p3 & ap_const_lv3_0);
    tmp_78_fu_972_p3 <= (select_ln345_1_reg_1424_pp2_iter5_reg & ap_const_lv3_0);
    tmp_79_fu_883_p3 <= (select_ln353_1_fu_875_p3 & ap_const_lv3_0);
    tmp_80_fu_1232_p3 <= (select_ln360_1_reg_1517 & ap_const_lv3_0);
    tmp_81_fu_1288_p3 <= (select_ln370_1_reg_1570_pp3_iter3_reg & ap_const_lv3_0);
    v_5_fu_809_p2 <= std_logic_vector(unsigned(ap_const_lv4_1) + unsigned(ap_phi_mux_v3_0_phi_fu_292_p4));
    v_fu_618_p2 <= std_logic_vector(unsigned(ap_const_lv4_1) + unsigned(ap_phi_mux_v_0_phi_fu_237_p4));
    xor_ln330_fu_646_p2 <= (icmp_ln332_fu_624_p2 xor ap_const_lv1_1);
    xor_ln345_fu_837_p2 <= (icmp_ln347_fu_815_p2 xor ap_const_lv1_1);
    xor_ln360_fu_1050_p2 <= (icmp_ln362_fu_1028_p2 xor ap_const_lv1_1);
    xor_ln362_fu_1094_p2 <= (icmp_ln364_fu_1068_p2 xor ap_const_lv1_1);
    zext_ln321_fu_582_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_76_fu_574_p3),8));
    zext_ln323_1_fu_596_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln323_fu_590_p2),64));
    zext_ln323_fu_586_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln323_fu_558_p3),8));
    zext_ln330_1_fu_767_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln330_1_reg_1356_pp1_iter5_reg),64));
    zext_ln332_fu_700_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_77_fu_692_p3),8));
    zext_ln338_1_fu_714_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln338_fu_708_p2),64));
    zext_ln338_3_fu_757_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(mul_ln338_fu_751_p2),32));
    zext_ln338_fu_704_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln338_fu_676_p3),8));
    zext_ln345_2_fu_919_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(v_5_reg_1413),8));
    zext_ln353_1_fu_979_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_78_fu_972_p3),64));
    zext_ln353_2_fu_891_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_79_fu_883_p3),8));
    zext_ln353_4_fu_956_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln353_2_fu_949_p3),32));
    zext_ln353_5_fu_895_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln353_fu_867_p3),8));
    zext_ln353_6_fu_905_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln353_fu_899_p2),64));
    zext_ln360_1_fu_1158_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln360_1_reg_1517),8));
    zext_ln360_2_fu_1161_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(k_reg_1500),8));
    zext_ln362_1_fu_1243_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln362_1_reg_1564),8));
    zext_ln362_fu_1239_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_80_fu_1232_p3),8));
    zext_ln370_1_fu_1252_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln370_fu_1246_p2),64));
    zext_ln370_2_fu_1295_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_81_fu_1288_p3),8));
    zext_ln370_4_fu_1221_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln370_2_fu_1214_p3),32));
    zext_ln370_5_fu_1299_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln370_reg_1547_pp3_iter4_reg),8));
    zext_ln370_7_fu_1278_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(mul_ln370_1_fu_1272_p2),32));
    zext_ln370_8_fu_1308_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln370_1_fu_1302_p2),64));
end behav;

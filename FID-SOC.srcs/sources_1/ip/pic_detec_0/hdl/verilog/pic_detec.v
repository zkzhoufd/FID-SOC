// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="pic_detec,hls_ip_2019_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7a200t-fbg484-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=13.845000,HLS_SYN_LAT=35322981,HLS_SYN_TPT=none,HLS_SYN_MEM=171,HLS_SYN_DSP=35,HLS_SYN_FF=16011,HLS_SYN_LUT=23011,HLS_VERSION=2019_2}" *)

module pic_detec (
        ap_clk,
        ap_rst_n,
        data_in_TDATA,
        data_in_TVALID,
        data_in_TREADY,
        data_in_TLAST,
        weight_in_TDATA,
        weight_in_TVALID,
        weight_in_TREADY,
        weight_in_TLAST,
        control_in_TDATA,
        control_in_TVALID,
        control_in_TREADY,
        control_in_TLAST,
        data_out_TDATA,
        data_out_TVALID,
        data_out_TREADY,
        data_out_TLAST
);

parameter    ap_ST_fsm_state1 = 15'd1;
parameter    ap_ST_fsm_state2 = 15'd2;
parameter    ap_ST_fsm_state3 = 15'd4;
parameter    ap_ST_fsm_state4 = 15'd8;
parameter    ap_ST_fsm_state5 = 15'd16;
parameter    ap_ST_fsm_state6 = 15'd32;
parameter    ap_ST_fsm_pp0_stage0 = 15'd64;
parameter    ap_ST_fsm_state11 = 15'd128;
parameter    ap_ST_fsm_state12 = 15'd256;
parameter    ap_ST_fsm_state13 = 15'd512;
parameter    ap_ST_fsm_state14 = 15'd1024;
parameter    ap_ST_fsm_state15 = 15'd2048;
parameter    ap_ST_fsm_state16 = 15'd4096;
parameter    ap_ST_fsm_state17 = 15'd8192;
parameter    ap_ST_fsm_state18 = 15'd16384;

input   ap_clk;
input   ap_rst_n;
input  [31:0] data_in_TDATA;
input   data_in_TVALID;
output   data_in_TREADY;
input   data_in_TLAST;
input  [31:0] weight_in_TDATA;
input   weight_in_TVALID;
output   weight_in_TREADY;
input   weight_in_TLAST;
input  [15:0] control_in_TDATA;
input   control_in_TVALID;
output   control_in_TREADY;
input   control_in_TLAST;
output  [31:0] data_out_TDATA;
output   data_out_TVALID;
input   data_out_TREADY;
output   data_out_TLAST;

reg data_in_TREADY;
reg weight_in_TREADY;
reg control_in_TREADY;

 reg    ap_rst_n_inv;
reg   [15:0] fc2_b_0;
reg   [15:0] fc2_b_1;
reg   [13:0] fc1_m_address0;
reg    fc1_m_ce0;
reg    fc1_m_we0;
wire   [15:0] fc1_m_q0;
reg   [5:0] fc1_b_address0;
reg    fc1_b_ce0;
reg    fc1_b_we0;
wire   [15:0] fc1_b_q0;
reg   [6:0] fc2_m_address0;
reg    fc2_m_ce0;
reg    fc2_m_we0;
wire   [15:0] fc2_m_q0;
reg   [13:0] image_r_address0;
reg    image_r_ce0;
reg    image_r_we0;
reg   [31:0] image_r_d0;
wire   [31:0] image_r_q0;
reg    image_r_ce1;
reg    image_r_we1;
wire   [31:0] image_r_q1;
reg   [7:0] p_address0;
reg    p_ce0;
reg    p_we0;
wire   [31:0] p_q0;
reg    data_in_TDATA_blk_n;
(* fsm_encoding = "none" *) reg   [14:0] ap_CS_fsm;
wire    ap_CS_fsm_state3;
wire   [0:0] icmp_ln63_fu_434_p2;
reg    control_in_TDATA_blk_n;
wire    ap_CS_fsm_state1;
reg   [7:0] i1_0_reg_282;
reg   [15:0] fc2_b_0_load_reg_523;
reg   [15:0] fc2_b_1_load_reg_528;
wire   [7:0] i_6_fu_416_p2;
reg   [7:0] i_6_reg_536;
wire    ap_CS_fsm_state2;
wire   [15:0] zext_ln63_fu_430_p1;
reg   [15:0] zext_ln63_reg_541;
wire   [0:0] icmp_ln61_fu_410_p2;
wire   [7:0] j_fu_440_p2;
reg    ap_block_state3;
wire   [0:0] icmp_ln76_fu_465_p2;
reg   [0:0] icmp_ln76_reg_554;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_block_state7_pp0_stage0_iter0;
wire    ap_block_state8_pp0_stage0_iter1;
wire    ap_block_state9_pp0_stage0_iter2;
wire    pre_out_V_full_n;
reg    pre_out_V_write;
reg   [0:0] icmp_ln76_reg_554_pp0_iter2_reg;
reg    ap_block_state10_pp0_stage0_iter3;
reg    ap_enable_reg_pp0_iter3;
reg    ap_block_pp0_stage0_11001;
reg   [0:0] icmp_ln76_reg_554_pp0_iter1_reg;
wire   [7:0] i_fu_471_p2;
reg    ap_enable_reg_pp0_iter0;
wire   [15:0] grp_fu_388_p1;
reg   [15:0] tmp_1_reg_573;
wire    ap_CS_fsm_state6;
wire    grp_markov_fu_315_ap_ready;
wire    grp_markov_fu_315_ap_done;
reg    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state7;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
wire    grp_BDCT_fu_293_ap_start;
wire    grp_BDCT_fu_293_ap_done;
wire    grp_BDCT_fu_293_ap_idle;
wire    grp_BDCT_fu_293_ap_ready;
wire   [13:0] grp_BDCT_fu_293_image_in_out_address0;
wire    grp_BDCT_fu_293_image_in_out_ce0;
wire    grp_BDCT_fu_293_image_in_out_we0;
wire   [31:0] grp_BDCT_fu_293_image_in_out_d0;
wire    grp_markov_fu_315_ap_start;
wire    grp_markov_fu_315_ap_idle;
wire   [13:0] grp_markov_fu_315_img_BDCT_address0;
wire    grp_markov_fu_315_img_BDCT_ce0;
wire   [13:0] grp_markov_fu_315_img_BDCT_address1;
wire    grp_markov_fu_315_img_BDCT_ce1;
wire    grp_markov_fu_315_img_BDCT_we1;
wire   [31:0] grp_markov_fu_315_img_BDCT_d1;
wire   [7:0] grp_markov_fu_315_p_address0;
wire    grp_markov_fu_315_p_ce0;
wire    grp_markov_fu_315_p_we0;
wire   [31:0] grp_markov_fu_315_p_d0;
wire    grp_fc_relu6_fu_335_ap_start;
wire    grp_fc_relu6_fu_335_ap_done;
wire    grp_fc_relu6_fu_335_ap_idle;
wire    grp_fc_relu6_fu_335_ap_ready;
wire    grp_fc_relu6_fu_335_in_stream_V_read;
wire   [15:0] grp_fc_relu6_fu_335_out_stream_V_din;
wire    grp_fc_relu6_fu_335_out_stream_V_write;
wire   [5:0] grp_fc_relu6_fu_335_fc1_b_address0;
wire    grp_fc_relu6_fu_335_fc1_b_ce0;
wire   [13:0] grp_fc_relu6_fu_335_fc1_m_address0;
wire    grp_fc_relu6_fu_335_fc1_m_ce0;
wire    grp_fc_64u_2u_1u_s_fu_349_ap_start;
wire    grp_fc_64u_2u_1u_s_fu_349_ap_done;
wire    grp_fc_64u_2u_1u_s_fu_349_ap_idle;
wire    grp_fc_64u_2u_1u_s_fu_349_ap_ready;
wire    grp_fc_64u_2u_1u_s_fu_349_in_stream_V_read;
wire   [15:0] grp_fc_64u_2u_1u_s_fu_349_out_stream_V_din;
wire    grp_fc_64u_2u_1u_s_fu_349_out_stream_V_write;
wire   [6:0] grp_fc_64u_2u_1u_s_fu_349_fc2_m_address0;
wire    grp_fc_64u_2u_1u_s_fu_349_fc2_m_ce0;
wire    grp_weight_loader_fu_365_ap_start;
wire    grp_weight_loader_fu_365_ap_done;
wire    grp_weight_loader_fu_365_ap_idle;
wire    grp_weight_loader_fu_365_ap_ready;
wire    grp_weight_loader_fu_365_weight_in_TREADY;
wire   [13:0] grp_weight_loader_fu_365_fc1_m_address0;
wire    grp_weight_loader_fu_365_fc1_m_ce0;
wire    grp_weight_loader_fu_365_fc1_m_we0;
wire   [15:0] grp_weight_loader_fu_365_fc1_m_d0;
wire   [5:0] grp_weight_loader_fu_365_fc1_b_address0;
wire    grp_weight_loader_fu_365_fc1_b_ce0;
wire    grp_weight_loader_fu_365_fc1_b_we0;
wire   [15:0] grp_weight_loader_fu_365_fc1_b_d0;
wire   [6:0] grp_weight_loader_fu_365_fc2_m_address0;
wire    grp_weight_loader_fu_365_fc2_m_ce0;
wire    grp_weight_loader_fu_365_fc2_m_we0;
wire   [15:0] grp_weight_loader_fu_365_fc2_m_d0;
wire   [15:0] grp_weight_loader_fu_365_ap_return_0;
wire   [15:0] grp_weight_loader_fu_365_ap_return_1;
wire    grp_datastream_out_2u_s_fu_379_ap_start;
wire    grp_datastream_out_2u_s_fu_379_ap_done;
wire    grp_datastream_out_2u_s_fu_379_ap_idle;
wire    grp_datastream_out_2u_s_fu_379_ap_ready;
wire    grp_datastream_out_2u_s_fu_379_output_V_read;
wire   [31:0] grp_datastream_out_2u_s_fu_379_data_out_TDATA;
wire    grp_datastream_out_2u_s_fu_379_data_out_TVALID;
wire    grp_datastream_out_2u_s_fu_379_data_out_TREADY;
wire    grp_datastream_out_2u_s_fu_379_data_out_TLAST;
reg   [7:0] i_0_reg_260;
wire   [0:0] icmp_ln47_fu_396_p2;
reg   [7:0] j_0_reg_271;
reg    grp_BDCT_fu_293_ap_start_reg;
wire    ap_CS_fsm_state4;
reg    grp_markov_fu_315_ap_start_reg;
wire    ap_CS_fsm_state5;
reg    grp_fc_relu6_fu_335_ap_start_reg;
wire    ap_CS_fsm_state11;
wire   [15:0] pre_out_V_dout;
wire    pre_out_V_empty_n;
reg    pre_out_V_read;
wire    ap_CS_fsm_state12;
wire    fc2final_V_full_n;
reg    fc2final_V_write;
reg    grp_fc_64u_2u_1u_s_fu_349_ap_start_reg;
wire    ap_CS_fsm_state13;
wire   [15:0] fc2final_V_dout;
wire    fc2final_V_empty_n;
reg    fc2final_V_read;
wire    ap_CS_fsm_state14;
wire    data1_out_V_full_n;
reg    data1_out_V_write;
reg    grp_weight_loader_fu_365_ap_start_reg;
wire    ap_CS_fsm_state17;
reg    grp_datastream_out_2u_s_fu_379_ap_start_reg;
wire    ap_CS_fsm_state15;
wire   [15:0] data1_out_V_dout;
wire    data1_out_V_empty_n;
reg    data1_out_V_read;
wire    ap_CS_fsm_state16;
wire   [63:0] zext_ln67_1_fu_460_p1;
wire   [63:0] zext_ln79_fu_477_p1;
wire    ap_block_pp0_stage0;
reg    ap_block_pp0_stage0_01001;
wire   [14:0] tmp_8_fu_422_p3;
wire   [15:0] zext_ln67_fu_451_p1;
wire   [15:0] add_ln67_fu_455_p2;
reg    grp_fu_388_ce;
reg   [14:0] ap_NS_fsm;
wire    ap_CS_fsm_state18;
wire    regslice_both_data_out_V_data_U_apdone_blk;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
wire    regslice_both_data_in_V_data_U_apdone_blk;
wire   [31:0] data_in_TDATA_int;
wire    data_in_TVALID_int;
reg    data_in_TREADY_int;
wire    regslice_both_data_in_V_data_U_ack_in;
wire    regslice_both_w1_data_in_V_last_U_apdone_blk;
wire    data_in_TLAST_int;
wire    regslice_both_w1_data_in_V_last_U_vld_out;
wire    regslice_both_w1_data_in_V_last_U_ack_in;
wire    regslice_both_weight_in_V_data_U_apdone_blk;
wire   [31:0] weight_in_TDATA_int;
wire    weight_in_TVALID_int;
reg    weight_in_TREADY_int;
wire    regslice_both_weight_in_V_data_U_ack_in;
wire    regslice_both_w1_weight_in_V_last_U_apdone_blk;
wire    weight_in_TLAST_int;
wire    regslice_both_w1_weight_in_V_last_U_vld_out;
wire    regslice_both_w1_weight_in_V_last_U_ack_in;
wire    regslice_both_control_in_V_data_U_apdone_blk;
wire   [15:0] control_in_TDATA_int;
wire    control_in_TVALID_int;
reg    control_in_TREADY_int;
wire    regslice_both_control_in_V_data_U_ack_in;
wire    regslice_both_w1_control_in_V_last_U_apdone_blk;
wire    control_in_TLAST_int;
wire    regslice_both_w1_control_in_V_last_U_vld_out;
wire    regslice_both_w1_control_in_V_last_U_ack_in;
wire    data_out_TREADY_int;
wire    regslice_both_data_out_V_data_U_vld_out;
wire    regslice_both_w1_data_out_V_last_U_apdone_blk;
wire    regslice_both_w1_data_out_V_last_U_ack_in_dummy;
wire    regslice_both_w1_data_out_V_last_U_vld_out;

// power-on initialization
initial begin
#0 fc2_b_0 = 16'd0;
#0 fc2_b_1 = 16'd0;
#0 ap_CS_fsm = 15'd1;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 grp_BDCT_fu_293_ap_start_reg = 1'b0;
#0 grp_markov_fu_315_ap_start_reg = 1'b0;
#0 grp_fc_relu6_fu_335_ap_start_reg = 1'b0;
#0 grp_fc_64u_2u_1u_s_fu_349_ap_start_reg = 1'b0;
#0 grp_weight_loader_fu_365_ap_start_reg = 1'b0;
#0 grp_datastream_out_2u_s_fu_379_ap_start_reg = 1'b0;
end

pic_detec_fc1_m #(
    .DataWidth( 16 ),
    .AddressRange( 12544 ),
    .AddressWidth( 14 ))
fc1_m_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(fc1_m_address0),
    .ce0(fc1_m_ce0),
    .we0(fc1_m_we0),
    .d0(grp_weight_loader_fu_365_fc1_m_d0),
    .q0(fc1_m_q0)
);

fc_relu6_y #(
    .DataWidth( 16 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
fc1_b_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(fc1_b_address0),
    .ce0(fc1_b_ce0),
    .we0(fc1_b_we0),
    .d0(grp_weight_loader_fu_365_fc1_b_d0),
    .q0(fc1_b_q0)
);

pic_detec_fc2_m #(
    .DataWidth( 16 ),
    .AddressRange( 128 ),
    .AddressWidth( 7 ))
fc2_m_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(fc2_m_address0),
    .ce0(fc2_m_ce0),
    .we0(fc2_m_we0),
    .d0(grp_weight_loader_fu_365_fc2_m_d0),
    .q0(fc2_m_q0)
);

pic_detec_image_r #(
    .DataWidth( 32 ),
    .AddressRange( 16384 ),
    .AddressWidth( 14 ))
image_r_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(image_r_address0),
    .ce0(image_r_ce0),
    .we0(image_r_we0),
    .d0(image_r_d0),
    .q0(image_r_q0),
    .address1(grp_markov_fu_315_img_BDCT_address1),
    .ce1(image_r_ce1),
    .we1(image_r_we1),
    .d1(grp_markov_fu_315_img_BDCT_d1),
    .q1(image_r_q1)
);

pic_detec_p #(
    .DataWidth( 32 ),
    .AddressRange( 196 ),
    .AddressWidth( 8 ))
p_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(p_address0),
    .ce0(p_ce0),
    .we0(p_we0),
    .d0(grp_markov_fu_315_p_d0),
    .q0(p_q0)
);

BDCT grp_BDCT_fu_293(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_BDCT_fu_293_ap_start),
    .ap_done(grp_BDCT_fu_293_ap_done),
    .ap_idle(grp_BDCT_fu_293_ap_idle),
    .ap_ready(grp_BDCT_fu_293_ap_ready),
    .image_in_out_address0(grp_BDCT_fu_293_image_in_out_address0),
    .image_in_out_ce0(grp_BDCT_fu_293_image_in_out_ce0),
    .image_in_out_we0(grp_BDCT_fu_293_image_in_out_we0),
    .image_in_out_d0(grp_BDCT_fu_293_image_in_out_d0),
    .image_in_out_q0(image_r_q0)
);

markov grp_markov_fu_315(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_markov_fu_315_ap_start),
    .ap_done(grp_markov_fu_315_ap_done),
    .ap_idle(grp_markov_fu_315_ap_idle),
    .ap_ready(grp_markov_fu_315_ap_ready),
    .img_BDCT_address0(grp_markov_fu_315_img_BDCT_address0),
    .img_BDCT_ce0(grp_markov_fu_315_img_BDCT_ce0),
    .img_BDCT_q0(image_r_q0),
    .img_BDCT_address1(grp_markov_fu_315_img_BDCT_address1),
    .img_BDCT_ce1(grp_markov_fu_315_img_BDCT_ce1),
    .img_BDCT_we1(grp_markov_fu_315_img_BDCT_we1),
    .img_BDCT_d1(grp_markov_fu_315_img_BDCT_d1),
    .img_BDCT_q1(image_r_q1),
    .p_address0(grp_markov_fu_315_p_address0),
    .p_ce0(grp_markov_fu_315_p_ce0),
    .p_we0(grp_markov_fu_315_p_we0),
    .p_d0(grp_markov_fu_315_p_d0)
);

fc_relu6 grp_fc_relu6_fu_335(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_fc_relu6_fu_335_ap_start),
    .ap_done(grp_fc_relu6_fu_335_ap_done),
    .ap_idle(grp_fc_relu6_fu_335_ap_idle),
    .ap_ready(grp_fc_relu6_fu_335_ap_ready),
    .in_stream_V_dout(pre_out_V_dout),
    .in_stream_V_empty_n(pre_out_V_empty_n),
    .in_stream_V_read(grp_fc_relu6_fu_335_in_stream_V_read),
    .out_stream_V_din(grp_fc_relu6_fu_335_out_stream_V_din),
    .out_stream_V_full_n(fc2final_V_full_n),
    .out_stream_V_write(grp_fc_relu6_fu_335_out_stream_V_write),
    .fc1_b_address0(grp_fc_relu6_fu_335_fc1_b_address0),
    .fc1_b_ce0(grp_fc_relu6_fu_335_fc1_b_ce0),
    .fc1_b_q0(fc1_b_q0),
    .fc1_m_address0(grp_fc_relu6_fu_335_fc1_m_address0),
    .fc1_m_ce0(grp_fc_relu6_fu_335_fc1_m_ce0),
    .fc1_m_q0(fc1_m_q0)
);

fc_64u_2u_1u_s grp_fc_64u_2u_1u_s_fu_349(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_fc_64u_2u_1u_s_fu_349_ap_start),
    .ap_done(grp_fc_64u_2u_1u_s_fu_349_ap_done),
    .ap_idle(grp_fc_64u_2u_1u_s_fu_349_ap_idle),
    .ap_ready(grp_fc_64u_2u_1u_s_fu_349_ap_ready),
    .in_stream_V_dout(fc2final_V_dout),
    .in_stream_V_empty_n(fc2final_V_empty_n),
    .in_stream_V_read(grp_fc_64u_2u_1u_s_fu_349_in_stream_V_read),
    .out_stream_V_din(grp_fc_64u_2u_1u_s_fu_349_out_stream_V_din),
    .out_stream_V_full_n(data1_out_V_full_n),
    .out_stream_V_write(grp_fc_64u_2u_1u_s_fu_349_out_stream_V_write),
    .bias_0_read(fc2_b_0_load_reg_523),
    .bias_1_read(fc2_b_1_load_reg_528),
    .fc2_m_address0(grp_fc_64u_2u_1u_s_fu_349_fc2_m_address0),
    .fc2_m_ce0(grp_fc_64u_2u_1u_s_fu_349_fc2_m_ce0),
    .fc2_m_q0(fc2_m_q0)
);

weight_loader grp_weight_loader_fu_365(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_weight_loader_fu_365_ap_start),
    .ap_done(grp_weight_loader_fu_365_ap_done),
    .ap_idle(grp_weight_loader_fu_365_ap_idle),
    .ap_ready(grp_weight_loader_fu_365_ap_ready),
    .weight_in_TDATA(weight_in_TDATA_int),
    .weight_in_TVALID(weight_in_TVALID_int),
    .weight_in_TREADY(grp_weight_loader_fu_365_weight_in_TREADY),
    .weight_in_TLAST(weight_in_TLAST_int),
    .fc1_m_address0(grp_weight_loader_fu_365_fc1_m_address0),
    .fc1_m_ce0(grp_weight_loader_fu_365_fc1_m_ce0),
    .fc1_m_we0(grp_weight_loader_fu_365_fc1_m_we0),
    .fc1_m_d0(grp_weight_loader_fu_365_fc1_m_d0),
    .fc1_b_address0(grp_weight_loader_fu_365_fc1_b_address0),
    .fc1_b_ce0(grp_weight_loader_fu_365_fc1_b_ce0),
    .fc1_b_we0(grp_weight_loader_fu_365_fc1_b_we0),
    .fc1_b_d0(grp_weight_loader_fu_365_fc1_b_d0),
    .fc2_m_address0(grp_weight_loader_fu_365_fc2_m_address0),
    .fc2_m_ce0(grp_weight_loader_fu_365_fc2_m_ce0),
    .fc2_m_we0(grp_weight_loader_fu_365_fc2_m_we0),
    .fc2_m_d0(grp_weight_loader_fu_365_fc2_m_d0),
    .ap_return_0(grp_weight_loader_fu_365_ap_return_0),
    .ap_return_1(grp_weight_loader_fu_365_ap_return_1)
);

datastream_out_2u_s grp_datastream_out_2u_s_fu_379(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_datastream_out_2u_s_fu_379_ap_start),
    .ap_done(grp_datastream_out_2u_s_fu_379_ap_done),
    .ap_idle(grp_datastream_out_2u_s_fu_379_ap_idle),
    .ap_ready(grp_datastream_out_2u_s_fu_379_ap_ready),
    .output_V_dout(data1_out_V_dout),
    .output_V_empty_n(data1_out_V_empty_n),
    .output_V_read(grp_datastream_out_2u_s_fu_379_output_V_read),
    .data_out_TDATA(grp_datastream_out_2u_s_fu_379_data_out_TDATA),
    .data_out_TVALID(grp_datastream_out_2u_s_fu_379_data_out_TVALID),
    .data_out_TREADY(grp_datastream_out_2u_s_fu_379_data_out_TREADY),
    .data_out_TLAST(grp_datastream_out_2u_s_fu_379_data_out_TLAST)
);

pic_detec_sptohp_Hfu #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 16 ))
pic_detec_sptohp_Hfu_U102(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(p_q0),
    .ce(grp_fu_388_ce),
    .dout(grp_fu_388_p1)
);

fifo_w16_d196_A pre_out_V_fifo_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(tmp_1_reg_573),
    .if_full_n(pre_out_V_full_n),
    .if_write(pre_out_V_write),
    .if_dout(pre_out_V_dout),
    .if_empty_n(pre_out_V_empty_n),
    .if_read(pre_out_V_read)
);

fifo_w16_d64_A fc2final_V_fifo_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(grp_fc_relu6_fu_335_out_stream_V_din),
    .if_full_n(fc2final_V_full_n),
    .if_write(fc2final_V_write),
    .if_dout(fc2final_V_dout),
    .if_empty_n(fc2final_V_empty_n),
    .if_read(fc2final_V_read)
);

fifo_w16_d2_A data1_out_V_fifo_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(grp_fc_64u_2u_1u_s_fu_349_out_stream_V_din),
    .if_full_n(data1_out_V_full_n),
    .if_write(data1_out_V_write),
    .if_dout(data1_out_V_dout),
    .if_empty_n(data1_out_V_empty_n),
    .if_read(data1_out_V_read)
);

regslice_both #(
    .DataWidth( 32 ))
regslice_both_data_in_V_data_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(data_in_TDATA),
    .vld_in(data_in_TVALID),
    .ack_in(regslice_both_data_in_V_data_U_ack_in),
    .data_out(data_in_TDATA_int),
    .vld_out(data_in_TVALID_int),
    .ack_out(data_in_TREADY_int),
    .apdone_blk(regslice_both_data_in_V_data_U_apdone_blk)
);

regslice_both_w1 #(
    .DataWidth( 1 ))
regslice_both_w1_data_in_V_last_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(data_in_TLAST),
    .vld_in(data_in_TVALID),
    .ack_in(regslice_both_w1_data_in_V_last_U_ack_in),
    .data_out(data_in_TLAST_int),
    .vld_out(regslice_both_w1_data_in_V_last_U_vld_out),
    .ack_out(data_in_TREADY_int),
    .apdone_blk(regslice_both_w1_data_in_V_last_U_apdone_blk)
);

regslice_both #(
    .DataWidth( 32 ))
regslice_both_weight_in_V_data_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(weight_in_TDATA),
    .vld_in(weight_in_TVALID),
    .ack_in(regslice_both_weight_in_V_data_U_ack_in),
    .data_out(weight_in_TDATA_int),
    .vld_out(weight_in_TVALID_int),
    .ack_out(weight_in_TREADY_int),
    .apdone_blk(regslice_both_weight_in_V_data_U_apdone_blk)
);

regslice_both_w1 #(
    .DataWidth( 1 ))
regslice_both_w1_weight_in_V_last_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(weight_in_TLAST),
    .vld_in(weight_in_TVALID),
    .ack_in(regslice_both_w1_weight_in_V_last_U_ack_in),
    .data_out(weight_in_TLAST_int),
    .vld_out(regslice_both_w1_weight_in_V_last_U_vld_out),
    .ack_out(weight_in_TREADY_int),
    .apdone_blk(regslice_both_w1_weight_in_V_last_U_apdone_blk)
);

regslice_both #(
    .DataWidth( 16 ))
regslice_both_control_in_V_data_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(control_in_TDATA),
    .vld_in(control_in_TVALID),
    .ack_in(regslice_both_control_in_V_data_U_ack_in),
    .data_out(control_in_TDATA_int),
    .vld_out(control_in_TVALID_int),
    .ack_out(control_in_TREADY_int),
    .apdone_blk(regslice_both_control_in_V_data_U_apdone_blk)
);

regslice_both_w1 #(
    .DataWidth( 1 ))
regslice_both_w1_control_in_V_last_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(control_in_TLAST),
    .vld_in(control_in_TVALID),
    .ack_in(regslice_both_w1_control_in_V_last_U_ack_in),
    .data_out(control_in_TLAST_int),
    .vld_out(regslice_both_w1_control_in_V_last_U_vld_out),
    .ack_out(control_in_TREADY_int),
    .apdone_blk(regslice_both_w1_control_in_V_last_U_apdone_blk)
);

regslice_both #(
    .DataWidth( 32 ))
regslice_both_data_out_V_data_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(grp_datastream_out_2u_s_fu_379_data_out_TDATA),
    .vld_in(grp_datastream_out_2u_s_fu_379_data_out_TVALID),
    .ack_in(data_out_TREADY_int),
    .data_out(data_out_TDATA),
    .vld_out(regslice_both_data_out_V_data_U_vld_out),
    .ack_out(data_out_TREADY),
    .apdone_blk(regslice_both_data_out_V_data_U_apdone_blk)
);

regslice_both_w1 #(
    .DataWidth( 1 ))
regslice_both_w1_data_out_V_last_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(grp_datastream_out_2u_s_fu_379_data_out_TLAST),
    .vld_in(grp_datastream_out_2u_s_fu_379_data_out_TVALID),
    .ack_in(regslice_both_w1_data_out_V_last_U_ack_in_dummy),
    .data_out(data_out_TLAST),
    .vld_out(regslice_both_w1_data_out_V_last_U_vld_out),
    .ack_out(data_out_TREADY),
    .apdone_blk(regslice_both_w1_data_out_V_last_U_apdone_blk)
);

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_condition_pp0_exit_iter0_state7) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_state6) & (grp_markov_fu_315_ap_done == 1'b1))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp0_exit_iter0_state7)) begin
                ap_enable_reg_pp0_iter1 <= (1'b1 ^ ap_condition_pp0_exit_iter0_state7);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end else if (((1'b1 == ap_CS_fsm_state6) & (grp_markov_fu_315_ap_done == 1'b1))) begin
            ap_enable_reg_pp0_iter3 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_BDCT_fu_293_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln61_fu_410_p2 == 1'd1))) begin
            grp_BDCT_fu_293_ap_start_reg <= 1'b1;
        end else if ((grp_BDCT_fu_293_ap_ready == 1'b1)) begin
            grp_BDCT_fu_293_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_datastream_out_2u_s_fu_379_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state15)) begin
            grp_datastream_out_2u_s_fu_379_ap_start_reg <= 1'b1;
        end else if ((grp_datastream_out_2u_s_fu_379_ap_ready == 1'b1)) begin
            grp_datastream_out_2u_s_fu_379_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_fc_64u_2u_1u_s_fu_349_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state13)) begin
            grp_fc_64u_2u_1u_s_fu_349_ap_start_reg <= 1'b1;
        end else if ((grp_fc_64u_2u_1u_s_fu_349_ap_ready == 1'b1)) begin
            grp_fc_64u_2u_1u_s_fu_349_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_fc_relu6_fu_335_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state11)) begin
            grp_fc_relu6_fu_335_ap_start_reg <= 1'b1;
        end else if ((grp_fc_relu6_fu_335_ap_ready == 1'b1)) begin
            grp_fc_relu6_fu_335_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_markov_fu_315_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state5)) begin
            grp_markov_fu_315_ap_start_reg <= 1'b1;
        end else if ((grp_markov_fu_315_ap_ready == 1'b1)) begin
            grp_markov_fu_315_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_weight_loader_fu_365_ap_start_reg <= 1'b0;
    end else begin
        if (((control_in_TVALID_int == 1'b1) & (icmp_ln47_fu_396_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state1))) begin
            grp_weight_loader_fu_365_ap_start_reg <= 1'b1;
        end else if ((grp_weight_loader_fu_365_ap_ready == 1'b1)) begin
            grp_weight_loader_fu_365_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln76_fu_465_p2 == 1'd0))) begin
        i1_0_reg_282 <= i_fu_471_p2;
    end else if (((1'b1 == ap_CS_fsm_state6) & (grp_markov_fu_315_ap_done == 1'b1))) begin
        i1_0_reg_282 <= 8'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((control_in_TVALID_int == 1'b1) & (1'b1 == ap_CS_fsm_state1) & (icmp_ln47_fu_396_p2 == 1'd0))) begin
        i_0_reg_260 <= 8'd0;
    end else if ((~((data_in_TVALID_int == 1'b0) & (icmp_ln63_fu_434_p2 == 1'd0)) & (1'b1 == ap_CS_fsm_state3) & (icmp_ln63_fu_434_p2 == 1'd1))) begin
        i_0_reg_260 <= i_6_reg_536;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln61_fu_410_p2 == 1'd0))) begin
        j_0_reg_271 <= 8'd0;
    end else if ((~((data_in_TVALID_int == 1'b0) & (icmp_ln63_fu_434_p2 == 1'd0)) & (1'b1 == ap_CS_fsm_state3) & (icmp_ln63_fu_434_p2 == 1'd0))) begin
        j_0_reg_271 <= j_fu_440_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((grp_weight_loader_fu_365_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state17))) begin
        fc2_b_0 <= grp_weight_loader_fu_365_ap_return_0;
        fc2_b_1 <= grp_weight_loader_fu_365_ap_return_1;
    end
end

always @ (posedge ap_clk) begin
    if (((control_in_TVALID_int == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        fc2_b_0_load_reg_523 <= fc2_b_0;
        fc2_b_1_load_reg_528 <= fc2_b_1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        i_6_reg_536 <= i_6_fu_416_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        icmp_ln76_reg_554 <= icmp_ln76_fu_465_p2;
        icmp_ln76_reg_554_pp0_iter1_reg <= icmp_ln76_reg_554;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        icmp_ln76_reg_554_pp0_iter2_reg <= icmp_ln76_reg_554_pp0_iter1_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln76_reg_554_pp0_iter1_reg == 1'd0))) begin
        tmp_1_reg_573 <= grp_fu_388_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln61_fu_410_p2 == 1'd0))) begin
        zext_ln63_reg_541[14 : 7] <= zext_ln63_fu_430_p1[14 : 7];
    end
end

always @ (*) begin
    if ((icmp_ln76_fu_465_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state7 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state7 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state1)) begin
        control_in_TDATA_blk_n = control_in_TVALID_int;
    end else begin
        control_in_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((regslice_both_control_in_V_data_U_ack_in == 1'b1) & (control_in_TVALID == 1'b1))) begin
        control_in_TREADY = 1'b1;
    end else begin
        control_in_TREADY = 1'b0;
    end
end

always @ (*) begin
    if (((control_in_TVALID_int == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        control_in_TREADY_int = 1'b1;
    end else begin
        control_in_TREADY_int = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        data1_out_V_read = grp_datastream_out_2u_s_fu_379_output_V_read;
    end else begin
        data1_out_V_read = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        data1_out_V_write = grp_fc_64u_2u_1u_s_fu_349_out_stream_V_write;
    end else begin
        data1_out_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) & (icmp_ln63_fu_434_p2 == 1'd0))) begin
        data_in_TDATA_blk_n = data_in_TVALID_int;
    end else begin
        data_in_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((regslice_both_data_in_V_data_U_ack_in == 1'b1) & (data_in_TVALID == 1'b1))) begin
        data_in_TREADY = 1'b1;
    end else begin
        data_in_TREADY = 1'b0;
    end
end

always @ (*) begin
    if ((~((data_in_TVALID_int == 1'b0) & (icmp_ln63_fu_434_p2 == 1'd0)) & (1'b1 == ap_CS_fsm_state3) & (icmp_ln63_fu_434_p2 == 1'd0))) begin
        data_in_TREADY_int = 1'b1;
    end else begin
        data_in_TREADY_int = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        fc1_b_address0 = grp_weight_loader_fu_365_fc1_b_address0;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        fc1_b_address0 = grp_fc_relu6_fu_335_fc1_b_address0;
    end else begin
        fc1_b_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        fc1_b_ce0 = grp_weight_loader_fu_365_fc1_b_ce0;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        fc1_b_ce0 = grp_fc_relu6_fu_335_fc1_b_ce0;
    end else begin
        fc1_b_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        fc1_b_we0 = grp_weight_loader_fu_365_fc1_b_we0;
    end else begin
        fc1_b_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        fc1_m_address0 = grp_weight_loader_fu_365_fc1_m_address0;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        fc1_m_address0 = grp_fc_relu6_fu_335_fc1_m_address0;
    end else begin
        fc1_m_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        fc1_m_ce0 = grp_weight_loader_fu_365_fc1_m_ce0;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        fc1_m_ce0 = grp_fc_relu6_fu_335_fc1_m_ce0;
    end else begin
        fc1_m_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        fc1_m_we0 = grp_weight_loader_fu_365_fc1_m_we0;
    end else begin
        fc1_m_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        fc2_m_address0 = grp_weight_loader_fu_365_fc2_m_address0;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        fc2_m_address0 = grp_fc_64u_2u_1u_s_fu_349_fc2_m_address0;
    end else begin
        fc2_m_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        fc2_m_ce0 = grp_weight_loader_fu_365_fc2_m_ce0;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        fc2_m_ce0 = grp_fc_64u_2u_1u_s_fu_349_fc2_m_ce0;
    end else begin
        fc2_m_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        fc2_m_we0 = grp_weight_loader_fu_365_fc2_m_we0;
    end else begin
        fc2_m_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        fc2final_V_read = grp_fc_64u_2u_1u_s_fu_349_in_stream_V_read;
    end else begin
        fc2final_V_read = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        fc2final_V_write = grp_fc_relu6_fu_335_out_stream_V_write;
    end else begin
        fc2final_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_388_ce = 1'b1;
    end else begin
        grp_fu_388_ce = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        image_r_address0 = zext_ln67_1_fu_460_p1;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        image_r_address0 = grp_markov_fu_315_img_BDCT_address0;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        image_r_address0 = grp_BDCT_fu_293_image_in_out_address0;
    end else begin
        image_r_address0 = 'bx;
    end
end

always @ (*) begin
    if ((~((data_in_TVALID_int == 1'b0) & (icmp_ln63_fu_434_p2 == 1'd0)) & (1'b1 == ap_CS_fsm_state3))) begin
        image_r_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        image_r_ce0 = grp_markov_fu_315_img_BDCT_ce0;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        image_r_ce0 = grp_BDCT_fu_293_image_in_out_ce0;
    end else begin
        image_r_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        image_r_ce1 = grp_markov_fu_315_img_BDCT_ce1;
    end else begin
        image_r_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        image_r_d0 = data_in_TDATA_int;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        image_r_d0 = grp_BDCT_fu_293_image_in_out_d0;
    end else begin
        image_r_d0 = 'bx;
    end
end

always @ (*) begin
    if ((~((data_in_TVALID_int == 1'b0) & (icmp_ln63_fu_434_p2 == 1'd0)) & (1'b1 == ap_CS_fsm_state3) & (icmp_ln63_fu_434_p2 == 1'd0))) begin
        image_r_we0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        image_r_we0 = grp_BDCT_fu_293_image_in_out_we0;
    end else begin
        image_r_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        image_r_we1 = grp_markov_fu_315_img_BDCT_we1;
    end else begin
        image_r_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        p_address0 = zext_ln79_fu_477_p1;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        p_address0 = grp_markov_fu_315_p_address0;
    end else begin
        p_address0 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        p_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        p_ce0 = grp_markov_fu_315_p_ce0;
    end else begin
        p_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        p_we0 = grp_markov_fu_315_p_we0;
    end else begin
        p_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        pre_out_V_read = grp_fc_relu6_fu_335_in_stream_V_read;
    end else begin
        pre_out_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln76_reg_554_pp0_iter2_reg == 1'd0))) begin
        pre_out_V_write = 1'b1;
    end else begin
        pre_out_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((regslice_both_weight_in_V_data_U_ack_in == 1'b1) & (weight_in_TVALID == 1'b1))) begin
        weight_in_TREADY = 1'b1;
    end else begin
        weight_in_TREADY = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        weight_in_TREADY_int = grp_weight_loader_fu_365_weight_in_TREADY;
    end else begin
        weight_in_TREADY_int = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((control_in_TVALID_int == 1'b1) & (1'b1 == ap_CS_fsm_state1) & (icmp_ln47_fu_396_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else if (((control_in_TVALID_int == 1'b1) & (icmp_ln47_fu_396_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state17;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln61_fu_410_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state3 : begin
            if ((~((data_in_TVALID_int == 1'b0) & (icmp_ln63_fu_434_p2 == 1'd0)) & (1'b1 == ap_CS_fsm_state3) & (icmp_ln63_fu_434_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else if ((~((data_in_TVALID_int == 1'b0) & (icmp_ln63_fu_434_p2 == 1'd0)) & (1'b1 == ap_CS_fsm_state3) & (icmp_ln63_fu_434_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state4 : begin
            if (((grp_BDCT_fu_293_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            if (((1'b1 == ap_CS_fsm_state6) & (grp_markov_fu_315_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((ap_enable_reg_pp0_iter1 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln76_fu_465_p2 == 1'd1)) & ~((ap_enable_reg_pp0_iter2 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter3 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((((ap_enable_reg_pp0_iter1 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln76_fu_465_p2 == 1'd1)) | ((ap_enable_reg_pp0_iter2 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter3 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            if (((grp_fc_relu6_fu_335_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state12))) begin
                ap_NS_fsm = ap_ST_fsm_state13;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state12;
            end
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            if (((grp_fc_64u_2u_1u_s_fu_349_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state14))) begin
                ap_NS_fsm = ap_ST_fsm_state15;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state14;
            end
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            if (((grp_datastream_out_2u_s_fu_379_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state16))) begin
                ap_NS_fsm = ap_ST_fsm_state18;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state16;
            end
        end
        ap_ST_fsm_state17 : begin
            if (((grp_weight_loader_fu_365_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state17))) begin
                ap_NS_fsm = ap_ST_fsm_state18;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state17;
            end
        end
        ap_ST_fsm_state18 : begin
            if (((regslice_both_data_out_V_data_U_apdone_blk == 1'b0) & (1'b1 == ap_CS_fsm_state18))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state18;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln67_fu_455_p2 = (zext_ln63_reg_541 + zext_ln67_fu_451_p1);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd8];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state18 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = ((pre_out_V_full_n == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b1) & (icmp_ln76_reg_554_pp0_iter2_reg == 1'd0));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((pre_out_V_full_n == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b1) & (icmp_ln76_reg_554_pp0_iter2_reg == 1'd0));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((pre_out_V_full_n == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b1) & (icmp_ln76_reg_554_pp0_iter2_reg == 1'd0));
end

always @ (*) begin
    ap_block_state10_pp0_stage0_iter3 = ((pre_out_V_full_n == 1'b0) & (icmp_ln76_reg_554_pp0_iter2_reg == 1'd0));
end

always @ (*) begin
    ap_block_state3 = ((data_in_TVALID_int == 1'b0) & (icmp_ln63_fu_434_p2 == 1'd0));
end

assign ap_block_state7_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

always @ (*) begin
    ap_rst_n_inv = ~ap_rst_n;
end

assign data_out_TVALID = regslice_both_data_out_V_data_U_vld_out;

assign grp_BDCT_fu_293_ap_start = grp_BDCT_fu_293_ap_start_reg;

assign grp_datastream_out_2u_s_fu_379_ap_start = grp_datastream_out_2u_s_fu_379_ap_start_reg;

assign grp_datastream_out_2u_s_fu_379_data_out_TREADY = (data_out_TREADY_int & ap_CS_fsm_state16);

assign grp_fc_64u_2u_1u_s_fu_349_ap_start = grp_fc_64u_2u_1u_s_fu_349_ap_start_reg;

assign grp_fc_relu6_fu_335_ap_start = grp_fc_relu6_fu_335_ap_start_reg;

assign grp_markov_fu_315_ap_start = grp_markov_fu_315_ap_start_reg;

assign grp_weight_loader_fu_365_ap_start = grp_weight_loader_fu_365_ap_start_reg;

assign i_6_fu_416_p2 = (i_0_reg_260 + 8'd1);

assign i_fu_471_p2 = (i1_0_reg_282 + 8'd1);

assign icmp_ln47_fu_396_p2 = ((control_in_TDATA_int == 16'd0) ? 1'b1 : 1'b0);

assign icmp_ln61_fu_410_p2 = ((i_0_reg_260 == 8'd128) ? 1'b1 : 1'b0);

assign icmp_ln63_fu_434_p2 = ((j_0_reg_271 == 8'd128) ? 1'b1 : 1'b0);

assign icmp_ln76_fu_465_p2 = ((i1_0_reg_282 == 8'd196) ? 1'b1 : 1'b0);

assign j_fu_440_p2 = (j_0_reg_271 + 8'd1);

assign tmp_8_fu_422_p3 = {{i_0_reg_260}, {7'd0}};

assign zext_ln63_fu_430_p1 = tmp_8_fu_422_p3;

assign zext_ln67_1_fu_460_p1 = add_ln67_fu_455_p2;

assign zext_ln67_fu_451_p1 = j_0_reg_271;

assign zext_ln79_fu_477_p1 = i1_0_reg_282;

always @ (posedge ap_clk) begin
    zext_ln63_reg_541[6:0] <= 7'b0000000;
    zext_ln63_reg_541[15] <= 1'b0;
end

endmodule //pic_detec

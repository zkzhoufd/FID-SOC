// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module DCT (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        ori_address0,
        ori_ce0,
        ori_q0,
        dct_r_address0,
        dct_r_ce0,
        dct_r_we0,
        dct_r_d0,
        dct_r_q0
);

parameter    ap_ST_fsm_state1 = 35'd1;
parameter    ap_ST_fsm_pp0_stage0 = 35'd2;
parameter    ap_ST_fsm_pp0_stage1 = 35'd4;
parameter    ap_ST_fsm_pp0_stage2 = 35'd8;
parameter    ap_ST_fsm_pp0_stage3 = 35'd16;
parameter    ap_ST_fsm_pp0_stage4 = 35'd32;
parameter    ap_ST_fsm_pp0_stage5 = 35'd64;
parameter    ap_ST_fsm_state12 = 35'd128;
parameter    ap_ST_fsm_pp1_stage0 = 35'd256;
parameter    ap_ST_fsm_pp1_stage1 = 35'd512;
parameter    ap_ST_fsm_pp1_stage2 = 35'd1024;
parameter    ap_ST_fsm_pp1_stage3 = 35'd2048;
parameter    ap_ST_fsm_pp1_stage4 = 35'd4096;
parameter    ap_ST_fsm_pp1_stage5 = 35'd8192;
parameter    ap_ST_fsm_pp1_stage6 = 35'd16384;
parameter    ap_ST_fsm_pp1_stage7 = 35'd32768;
parameter    ap_ST_fsm_state68 = 35'd65536;
parameter    ap_ST_fsm_pp2_stage0 = 35'd131072;
parameter    ap_ST_fsm_pp2_stage1 = 35'd262144;
parameter    ap_ST_fsm_pp2_stage2 = 35'd524288;
parameter    ap_ST_fsm_pp2_stage3 = 35'd1048576;
parameter    ap_ST_fsm_pp2_stage4 = 35'd2097152;
parameter    ap_ST_fsm_pp2_stage5 = 35'd4194304;
parameter    ap_ST_fsm_pp2_stage6 = 35'd8388608;
parameter    ap_ST_fsm_pp2_stage7 = 35'd16777216;
parameter    ap_ST_fsm_state125 = 35'd33554432;
parameter    ap_ST_fsm_pp3_stage0 = 35'd67108864;
parameter    ap_ST_fsm_pp3_stage1 = 35'd134217728;
parameter    ap_ST_fsm_pp3_stage2 = 35'd268435456;
parameter    ap_ST_fsm_pp3_stage3 = 35'd536870912;
parameter    ap_ST_fsm_pp3_stage4 = 35'd1073741824;
parameter    ap_ST_fsm_pp3_stage5 = 35'd2147483648;
parameter    ap_ST_fsm_pp3_stage6 = 35'd4294967296;
parameter    ap_ST_fsm_pp3_stage7 = 35'd8589934592;
parameter    ap_ST_fsm_state188 = 35'd17179869184;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [5:0] ori_address0;
output   ori_ce0;
input  [31:0] ori_q0;
output  [5:0] dct_r_address0;
output   dct_r_ce0;
output   dct_r_we0;
output  [31:0] dct_r_d0;
input  [31:0] dct_r_q0;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[5:0] ori_address0;
reg ori_ce0;
reg[5:0] dct_r_address0;
reg dct_r_ce0;
reg dct_r_we0;
reg[31:0] dct_r_d0;

(* fsm_encoding = "none" *) reg   [34:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [6:0] indvar_flatten_reg_189;
reg   [3:0] m_0_reg_200;
reg   [3:0] n_0_reg_211;
reg   [8:0] indvar_flatten22_reg_222;
reg   [3:0] v_0_reg_233;
reg   [7:0] indvar_flatten6_reg_244;
reg   [3:0] m1_0_reg_255;
reg   [3:0] n2_0_reg_266;
reg   [8:0] indvar_flatten61_reg_277;
reg   [3:0] v3_0_reg_288;
reg   [7:0] indvar_flatten29_reg_299;
reg   [3:0] m4_0_reg_310;
reg   [3:0] n5_0_reg_321;
reg   [11:0] indvar_flatten142_reg_332;
reg   [3:0] k_0_reg_343;
reg   [9:0] indvar_flatten100_reg_354;
reg   [3:0] l_0_reg_365;
reg   [7:0] indvar_flatten68_reg_376;
reg   [3:0] m6_0_reg_387;
reg   [3:0] n7_0_reg_398;
wire    ap_CS_fsm_pp0_stage1;
reg    ap_enable_reg_pp0_iter0;
wire    ap_block_state3_pp0_stage1_iter0;
wire    ap_block_state9_pp0_stage1_iter1;
wire    ap_block_pp0_stage1_11001;
reg   [0:0] icmp_ln317_reg_1318;
wire    ap_CS_fsm_pp1_stage1;
reg    ap_enable_reg_pp1_iter0;
wire    ap_block_state14_pp1_stage1_iter0;
wire    ap_block_state22_pp1_stage1_iter1;
wire    ap_block_state30_pp1_stage1_iter2;
wire    ap_block_state38_pp1_stage1_iter3;
wire    ap_block_state46_pp1_stage1_iter4;
wire    ap_block_state54_pp1_stage1_iter5;
wire    ap_block_state62_pp1_stage1_iter6;
wire    ap_block_pp1_stage1_11001;
reg   [0:0] icmp_ln330_reg_1347;
wire    ap_CS_fsm_pp2_stage1;
reg    ap_enable_reg_pp2_iter0;
wire    ap_block_state70_pp2_stage1_iter0;
wire    ap_block_state78_pp2_stage1_iter1;
wire    ap_block_state86_pp2_stage1_iter2;
wire    ap_block_state94_pp2_stage1_iter3;
wire    ap_block_state102_pp2_stage1_iter4;
wire    ap_block_state110_pp2_stage1_iter5;
wire    ap_block_state118_pp2_stage1_iter6;
wire    ap_block_pp2_stage1_11001;
reg   [0:0] icmp_ln345_reg_1404;
wire    ap_CS_fsm_pp3_stage2;
reg    ap_enable_reg_pp3_iter4;
wire    ap_block_state128_pp3_stage2_iter0;
wire    ap_block_state136_pp3_stage2_iter1;
wire    ap_block_state144_pp3_stage2_iter2;
wire    ap_block_state152_pp3_stage2_iter3;
wire    ap_block_state160_pp3_stage2_iter4;
wire    ap_block_state168_pp3_stage2_iter5;
wire    ap_block_state176_pp3_stage2_iter6;
wire    ap_block_state184_pp3_stage2_iter7;
wire    ap_block_pp3_stage2_11001;
reg   [0:0] icmp_ln360_reg_1491;
reg   [0:0] icmp_ln360_reg_1491_pp3_iter4_reg;
wire   [31:0] grp_fu_432_p2;
reg   [31:0] reg_478;
wire    ap_CS_fsm_pp0_stage4;
wire    ap_block_state6_pp0_stage4_iter0;
wire    ap_block_pp0_stage4_11001;
wire    ap_CS_fsm_pp3_stage5;
wire    ap_block_state131_pp3_stage5_iter0;
wire    ap_block_state139_pp3_stage5_iter1;
wire    ap_block_state147_pp3_stage5_iter2;
wire    ap_block_state155_pp3_stage5_iter3;
wire    ap_block_state163_pp3_stage5_iter4;
wire    ap_block_state171_pp3_stage5_iter5;
wire    ap_block_state179_pp3_stage5_iter6;
wire    ap_block_state187_pp3_stage5_iter7;
wire    ap_block_pp3_stage5_11001;
wire    ap_CS_fsm_pp0_stage5;
wire    ap_block_state7_pp0_stage5_iter0;
wire    ap_block_pp0_stage5_11001;
wire    ap_CS_fsm_pp1_stage0;
reg    ap_enable_reg_pp1_iter6;
wire    ap_block_state13_pp1_stage0_iter0;
wire    ap_block_state21_pp1_stage0_iter1;
wire    ap_block_state29_pp1_stage0_iter2;
wire    ap_block_state37_pp1_stage0_iter3;
wire    ap_block_state45_pp1_stage0_iter4;
wire    ap_block_state53_pp1_stage0_iter5;
wire    ap_block_state61_pp1_stage0_iter6;
wire    ap_block_pp1_stage0_11001;
reg   [0:0] icmp_ln330_reg_1347_pp1_iter5_reg;
reg    ap_enable_reg_pp2_iter6;
reg   [0:0] icmp_ln345_reg_1404_pp2_iter6_reg;
wire    ap_CS_fsm_pp3_stage7;
reg    ap_enable_reg_pp3_iter6;
wire    ap_block_state133_pp3_stage7_iter0;
wire    ap_block_state141_pp3_stage7_iter1;
wire    ap_block_state149_pp3_stage7_iter2;
wire    ap_block_state157_pp3_stage7_iter3;
wire    ap_block_state165_pp3_stage7_iter4;
wire    ap_block_state173_pp3_stage7_iter5;
wire    ap_block_state181_pp3_stage7_iter6;
wire    ap_block_pp3_stage7_11001;
reg   [0:0] icmp_ln360_reg_1491_pp3_iter6_reg;
wire   [63:0] grp_fu_443_p1;
reg   [63:0] reg_491;
wire    ap_CS_fsm_pp1_stage2;
wire    ap_block_state15_pp1_stage2_iter0;
wire    ap_block_state23_pp1_stage2_iter1;
wire    ap_block_state31_pp1_stage2_iter2;
wire    ap_block_state39_pp1_stage2_iter3;
wire    ap_block_state47_pp1_stage2_iter4;
wire    ap_block_state55_pp1_stage2_iter5;
wire    ap_block_state63_pp1_stage2_iter6;
wire    ap_block_pp1_stage2_11001;
wire    ap_CS_fsm_pp3_stage6;
wire    ap_block_state132_pp3_stage6_iter0;
wire    ap_block_state140_pp3_stage6_iter1;
wire    ap_block_state148_pp3_stage6_iter2;
wire    ap_block_state156_pp3_stage6_iter3;
wire    ap_block_state164_pp3_stage6_iter4;
wire    ap_block_state172_pp3_stage6_iter5;
wire    ap_block_state180_pp3_stage6_iter6;
wire    ap_block_pp3_stage6_11001;
wire    ap_CS_fsm_pp2_stage2;
wire    ap_block_state71_pp2_stage2_iter0;
wire    ap_block_state79_pp2_stage2_iter1;
wire    ap_block_state87_pp2_stage2_iter2;
wire    ap_block_state95_pp2_stage2_iter3;
wire    ap_block_state103_pp2_stage2_iter4;
wire    ap_block_state111_pp2_stage2_iter5;
wire    ap_block_state119_pp2_stage2_iter6;
wire    ap_block_pp2_stage2_11001;
wire   [63:0] grp_fu_468_p1;
reg   [63:0] reg_496;
wire    ap_CS_fsm_pp1_stage6;
wire    ap_block_state19_pp1_stage6_iter0;
wire    ap_block_state27_pp1_stage6_iter1;
wire    ap_block_state35_pp1_stage6_iter2;
wire    ap_block_state43_pp1_stage6_iter3;
wire    ap_block_state51_pp1_stage6_iter4;
wire    ap_block_state59_pp1_stage6_iter5;
wire    ap_block_state67_pp1_stage6_iter6;
wire    ap_block_pp1_stage6_11001;
wire    ap_CS_fsm_pp2_stage6;
wire    ap_block_state75_pp2_stage6_iter0;
wire    ap_block_state83_pp2_stage6_iter1;
wire    ap_block_state91_pp2_stage6_iter2;
wire    ap_block_state99_pp2_stage6_iter3;
wire    ap_block_state107_pp2_stage6_iter4;
wire    ap_block_state115_pp2_stage6_iter5;
wire    ap_block_state123_pp2_stage6_iter6;
wire    ap_block_pp2_stage6_11001;
reg    ap_enable_reg_pp3_iter0;
wire   [63:0] grp_fu_460_p2;
reg   [63:0] reg_501;
wire    ap_CS_fsm_pp1_stage7;
wire    ap_block_state20_pp1_stage7_iter0;
wire    ap_block_state28_pp1_stage7_iter1;
wire    ap_block_state36_pp1_stage7_iter2;
wire    ap_block_state44_pp1_stage7_iter3;
wire    ap_block_state52_pp1_stage7_iter4;
wire    ap_block_state60_pp1_stage7_iter5;
wire    ap_block_pp1_stage7_11001;
reg   [63:0] reg_501_pp1_iter1_reg;
reg   [63:0] reg_501_pp1_iter2_reg;
reg   [63:0] reg_501_pp1_iter3_reg;
reg   [63:0] reg_501_pp1_iter4_reg;
reg   [63:0] reg_501_pp2_iter1_reg;
wire    ap_CS_fsm_pp2_stage7;
wire    ap_block_state76_pp2_stage7_iter0;
wire    ap_block_state84_pp2_stage7_iter1;
wire    ap_block_state92_pp2_stage7_iter2;
wire    ap_block_state100_pp2_stage7_iter3;
wire    ap_block_state108_pp2_stage7_iter4;
wire    ap_block_state116_pp2_stage7_iter5;
wire    ap_block_state124_pp2_stage7_iter6;
wire    ap_block_pp2_stage7_11001;
reg   [63:0] reg_501_pp2_iter2_reg;
reg   [63:0] reg_501_pp2_iter3_reg;
reg   [63:0] reg_501_pp2_iter4_reg;
wire    ap_CS_fsm_pp3_stage4;
reg    ap_enable_reg_pp3_iter1;
wire    ap_block_state130_pp3_stage4_iter0;
wire    ap_block_state138_pp3_stage4_iter1;
wire    ap_block_state146_pp3_stage4_iter2;
wire    ap_block_state154_pp3_stage4_iter3;
wire    ap_block_state162_pp3_stage4_iter4;
wire    ap_block_state170_pp3_stage4_iter5;
wire    ap_block_state178_pp3_stage4_iter6;
wire    ap_block_state186_pp3_stage4_iter7;
wire    ap_block_pp3_stage4_11001;
reg   [0:0] icmp_ln360_reg_1491_pp3_iter1_reg;
reg    ap_enable_reg_pp3_iter2;
reg   [0:0] icmp_ln360_reg_1491_pp3_iter2_reg;
wire    ap_CS_fsm_pp3_stage3;
wire    ap_block_state129_pp3_stage3_iter0;
wire    ap_block_state137_pp3_stage3_iter1;
wire    ap_block_state145_pp3_stage3_iter2;
wire    ap_block_state153_pp3_stage3_iter3;
wire    ap_block_state161_pp3_stage3_iter4;
wire    ap_block_state169_pp3_stage3_iter5;
wire    ap_block_state177_pp3_stage3_iter6;
wire    ap_block_state185_pp3_stage3_iter7;
wire    ap_block_pp3_stage3_11001;
reg   [63:0] reg_507;
wire    ap_CS_fsm_pp1_stage3;
reg    ap_enable_reg_pp1_iter1;
wire    ap_block_state16_pp1_stage3_iter0;
wire    ap_block_state24_pp1_stage3_iter1;
wire    ap_block_state32_pp1_stage3_iter2;
wire    ap_block_state40_pp1_stage3_iter3;
wire    ap_block_state48_pp1_stage3_iter4;
wire    ap_block_state56_pp1_stage3_iter5;
wire    ap_block_state64_pp1_stage3_iter6;
wire    ap_block_pp1_stage3_11001;
reg   [0:0] icmp_ln330_reg_1347_pp1_iter1_reg;
reg    ap_enable_reg_pp1_iter2;
reg   [0:0] icmp_ln330_reg_1347_pp1_iter2_reg;
wire    ap_CS_fsm_pp2_stage4;
reg    ap_enable_reg_pp2_iter1;
wire    ap_block_state73_pp2_stage4_iter0;
wire    ap_block_state81_pp2_stage4_iter1;
wire    ap_block_state89_pp2_stage4_iter2;
wire    ap_block_state97_pp2_stage4_iter3;
wire    ap_block_state105_pp2_stage4_iter4;
wire    ap_block_state113_pp2_stage4_iter5;
wire    ap_block_state121_pp2_stage4_iter6;
wire    ap_block_pp2_stage4_11001;
reg   [0:0] icmp_ln345_reg_1404_pp2_iter1_reg;
reg    ap_enable_reg_pp2_iter2;
reg   [0:0] icmp_ln345_reg_1404_pp2_iter2_reg;
wire   [63:0] grp_sin_or_cos_double_s_fu_409_ap_return;
reg   [63:0] reg_513;
reg    ap_enable_reg_pp1_iter5;
wire    ap_CS_fsm_pp2_stage3;
reg    ap_enable_reg_pp2_iter5;
wire    ap_block_state72_pp2_stage3_iter0;
wire    ap_block_state80_pp2_stage3_iter1;
wire    ap_block_state88_pp2_stage3_iter2;
wire    ap_block_state96_pp2_stage3_iter3;
wire    ap_block_state104_pp2_stage3_iter4;
wire    ap_block_state112_pp2_stage3_iter5;
wire    ap_block_state120_pp2_stage3_iter6;
wire    ap_block_pp2_stage3_11001;
reg   [0:0] icmp_ln345_reg_1404_pp2_iter5_reg;
reg    ap_enable_reg_pp3_iter5;
reg   [0:0] icmp_ln360_reg_1491_pp3_iter5_reg;
reg   [63:0] reg_518;
wire    ap_CS_fsm_pp3_stage1;
wire    ap_block_state127_pp3_stage1_iter0;
wire    ap_block_state135_pp3_stage1_iter1;
wire    ap_block_state143_pp3_stage1_iter2;
wire    ap_block_state151_pp3_stage1_iter3;
wire    ap_block_state159_pp3_stage1_iter4;
wire    ap_block_state167_pp3_stage1_iter5;
wire    ap_block_state175_pp3_stage1_iter6;
wire    ap_block_state183_pp3_stage1_iter7;
wire    ap_block_pp3_stage1_11001;
reg   [0:0] icmp_ln330_reg_1347_pp1_iter6_reg;
wire    ap_CS_fsm_pp3_stage0;
reg    ap_enable_reg_pp3_iter7;
wire    ap_block_state126_pp3_stage0_iter0;
wire    ap_block_state134_pp3_stage0_iter1;
wire    ap_block_state142_pp3_stage0_iter2;
wire    ap_block_state150_pp3_stage0_iter3;
wire    ap_block_state158_pp3_stage0_iter4;
wire    ap_block_state166_pp3_stage0_iter5;
wire    ap_block_state174_pp3_stage0_iter6;
wire    ap_block_state182_pp3_stage0_iter7;
wire    ap_block_pp3_stage0_11001;
wire   [63:0] grp_fu_453_p2;
wire    ap_CS_fsm_pp1_stage5;
wire    ap_block_state18_pp1_stage5_iter0;
wire    ap_block_state26_pp1_stage5_iter1;
wire    ap_block_state34_pp1_stage5_iter2;
wire    ap_block_state42_pp1_stage5_iter3;
wire    ap_block_state50_pp1_stage5_iter4;
wire    ap_block_state58_pp1_stage5_iter5;
wire    ap_block_state66_pp1_stage5_iter6;
wire    ap_block_pp1_stage5_11001;
reg   [0:0] icmp_ln360_reg_1491_pp3_iter7_reg;
wire   [0:0] icmp_ln317_fu_534_p2;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_block_state2_pp0_stage0_iter0;
wire    ap_block_state8_pp0_stage0_iter1;
wire    ap_block_pp0_stage0_11001;
reg   [0:0] icmp_ln317_reg_1318_pp0_iter1_reg;
wire   [6:0] add_ln317_fu_540_p2;
reg   [6:0] add_ln317_reg_1322;
wire   [3:0] select_ln323_fu_558_p3;
reg   [3:0] select_ln323_reg_1327;
wire   [3:0] select_ln323_1_fu_566_p3;
reg   [3:0] select_ln323_1_reg_1332;
wire   [3:0] n_fu_601_p2;
reg   [3:0] n_reg_1342;
wire   [0:0] icmp_ln330_fu_606_p2;
reg   [0:0] icmp_ln330_reg_1347_pp1_iter3_reg;
reg   [0:0] icmp_ln330_reg_1347_pp1_iter4_reg;
wire   [8:0] add_ln330_fu_612_p2;
reg   [8:0] add_ln330_reg_1351;
wire   [3:0] select_ln330_1_fu_638_p3;
reg   [3:0] select_ln330_1_reg_1356;
reg   [3:0] select_ln330_1_reg_1356_pp1_iter1_reg;
reg   [3:0] select_ln330_1_reg_1356_pp1_iter2_reg;
reg   [3:0] select_ln330_1_reg_1356_pp1_iter3_reg;
reg   [3:0] select_ln330_1_reg_1356_pp1_iter4_reg;
reg   [3:0] select_ln330_1_reg_1356_pp1_iter5_reg;
wire   [3:0] select_ln338_fu_676_p3;
reg   [3:0] select_ln338_reg_1363;
wire   [3:0] select_ln338_1_fu_684_p3;
reg   [3:0] select_ln338_1_reg_1369;
wire   [7:0] select_ln332_fu_725_p3;
reg   [7:0] select_ln332_reg_1379;
wire   [31:0] zext_ln338_3_fu_757_p1;
wire   [3:0] n_1_fu_762_p2;
reg   [3:0] n_1_reg_1389;
reg   [5:0] dct_addr_1_reg_1394;
wire   [7:0] mul_ln353_fu_791_p2;
reg   [7:0] mul_ln353_reg_1399;
wire    ap_CS_fsm_pp2_stage0;
wire    ap_block_state69_pp2_stage0_iter0;
wire    ap_block_state77_pp2_stage0_iter1;
wire    ap_block_state85_pp2_stage0_iter2;
wire    ap_block_state93_pp2_stage0_iter3;
wire    ap_block_state101_pp2_stage0_iter4;
wire    ap_block_state109_pp2_stage0_iter5;
wire    ap_block_state117_pp2_stage0_iter6;
wire    ap_block_pp2_stage0_11001;
wire   [0:0] icmp_ln345_fu_797_p2;
reg   [0:0] icmp_ln345_reg_1404_pp2_iter3_reg;
reg   [0:0] icmp_ln345_reg_1404_pp2_iter4_reg;
wire   [8:0] add_ln345_fu_803_p2;
reg   [8:0] add_ln345_reg_1408;
wire   [3:0] v_5_fu_809_p2;
reg   [3:0] v_5_reg_1413;
wire   [0:0] icmp_ln347_fu_815_p2;
reg   [0:0] icmp_ln347_reg_1418;
wire   [3:0] select_ln345_1_fu_829_p3;
reg   [3:0] select_ln345_1_reg_1424;
reg   [3:0] select_ln345_1_reg_1424_pp2_iter1_reg;
reg   [3:0] select_ln345_1_reg_1424_pp2_iter2_reg;
reg   [3:0] select_ln345_1_reg_1424_pp2_iter3_reg;
reg   [3:0] select_ln345_1_reg_1424_pp2_iter4_reg;
reg   [3:0] select_ln345_1_reg_1424_pp2_iter5_reg;
wire   [0:0] and_ln345_fu_849_p2;
reg   [0:0] and_ln345_reg_1431;
wire   [3:0] m_15_fu_855_p2;
reg   [3:0] m_15_reg_1436;
wire   [3:0] select_ln353_fu_867_p3;
reg   [3:0] select_ln353_reg_1441;
wire   [3:0] select_ln353_1_fu_875_p3;
reg   [3:0] select_ln353_1_reg_1446;
wire   [7:0] add_ln347_1_fu_910_p2;
reg   [7:0] add_ln347_1_reg_1456;
wire   [31:0] zext_ln353_4_fu_956_p1;
wire   [7:0] select_ln347_fu_961_p3;
reg   [7:0] select_ln347_reg_1466;
wire   [3:0] n_2_fu_967_p2;
reg   [3:0] n_2_reg_1471;
reg   [5:0] dct_addr_2_reg_1476;
wire   [63:0] grp_fu_448_p1;
wire   [7:0] mul_ln370_fu_1004_p2;
reg   [7:0] mul_ln370_reg_1486;
wire   [0:0] icmp_ln360_fu_1010_p2;
reg   [0:0] icmp_ln360_reg_1491_pp3_iter3_reg;
wire   [11:0] add_ln360_fu_1016_p2;
reg   [11:0] add_ln360_reg_1495;
wire   [3:0] k_fu_1022_p2;
reg   [3:0] k_reg_1500;
wire   [0:0] icmp_ln362_fu_1028_p2;
reg   [0:0] icmp_ln362_reg_1505;
wire   [3:0] select_ln360_fu_1034_p3;
reg   [3:0] select_ln360_reg_1511;
wire   [3:0] select_ln360_1_fu_1042_p3;
reg   [3:0] select_ln360_1_reg_1517;
wire   [0:0] and_ln360_1_fu_1074_p2;
reg   [0:0] and_ln360_1_reg_1524;
wire   [3:0] select_ln362_fu_1086_p3;
reg   [3:0] select_ln362_reg_1530;
wire   [0:0] and_ln362_fu_1106_p2;
reg   [0:0] and_ln362_reg_1535;
wire   [3:0] m_16_fu_1112_p2;
reg   [3:0] m_16_reg_1541;
wire   [3:0] select_ln370_fu_1130_p3;
reg   [3:0] select_ln370_reg_1547;
reg   [3:0] select_ln370_reg_1547_pp3_iter1_reg;
reg   [3:0] select_ln370_reg_1547_pp3_iter2_reg;
reg   [3:0] select_ln370_reg_1547_pp3_iter3_reg;
reg   [3:0] select_ln370_reg_1547_pp3_iter4_reg;
wire   [7:0] select_ln364_fu_1144_p3;
reg   [7:0] select_ln364_reg_1554;
wire   [9:0] add_ln362_1_fu_1152_p2;
reg   [9:0] add_ln362_1_reg_1559;
wire   [3:0] select_ln362_1_fu_1175_p3;
reg   [3:0] select_ln362_1_reg_1564;
wire   [3:0] select_ln370_1_fu_1188_p3;
reg   [3:0] select_ln370_1_reg_1570;
reg   [3:0] select_ln370_1_reg_1570_pp3_iter1_reg;
reg   [3:0] select_ln370_1_reg_1570_pp3_iter2_reg;
reg   [3:0] select_ln370_1_reg_1570_pp3_iter3_reg;
wire   [31:0] zext_ln370_4_fu_1221_p1;
wire   [9:0] select_ln362_3_fu_1226_p3;
reg   [9:0] select_ln362_3_reg_1581;
reg   [5:0] dct_addr_3_reg_1586;
reg   [5:0] dct_addr_3_reg_1586_pp3_iter1_reg;
reg   [5:0] dct_addr_3_reg_1586_pp3_iter2_reg;
reg   [5:0] dct_addr_3_reg_1586_pp3_iter3_reg;
reg   [5:0] dct_addr_3_reg_1586_pp3_iter4_reg;
reg   [5:0] dct_addr_3_reg_1586_pp3_iter5_reg;
reg   [5:0] dct_addr_3_reg_1586_pp3_iter6_reg;
reg   [5:0] dct_addr_3_reg_1586_pp3_iter7_reg;
wire   [31:0] zext_ln370_7_fu_1278_p1;
reg   [63:0] tmp_70_reg_1596;
wire   [3:0] n_3_fu_1283_p2;
reg   [3:0] n_3_reg_1601;
reg   [63:0] tmp_i_i3_reg_1611;
reg   [63:0] tmp_72_reg_1616;
wire    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state2;
reg    ap_enable_reg_pp0_iter1;
wire    ap_block_pp0_stage5_subdone;
wire    ap_block_state5_pp0_stage3_iter0;
wire    ap_block_state11_pp0_stage3_iter1;
wire    ap_block_pp0_stage3_subdone;
wire    ap_CS_fsm_pp0_stage3;
wire    ap_CS_fsm_state12;
wire    ap_block_pp1_stage0_subdone;
reg    ap_condition_pp1_exit_iter0_state13;
wire    ap_block_pp1_stage7_subdone;
wire    ap_block_pp1_stage6_subdone;
reg    ap_enable_reg_pp1_iter3;
reg    ap_enable_reg_pp1_iter4;
wire    ap_CS_fsm_state68;
wire    ap_block_pp2_stage0_subdone;
reg    ap_condition_pp2_exit_iter0_state69;
wire    ap_block_pp2_stage7_subdone;
reg    ap_enable_reg_pp2_iter3;
reg    ap_enable_reg_pp2_iter4;
wire    ap_CS_fsm_state125;
wire    ap_block_pp3_stage0_subdone;
reg    ap_condition_pp3_exit_iter0_state126;
wire    ap_block_pp3_stage7_subdone;
wire    ap_block_pp3_stage5_subdone;
reg    ap_enable_reg_pp3_iter3;
wire    grp_sin_or_cos_double_s_fu_409_ap_start;
wire    grp_sin_or_cos_double_s_fu_409_ap_done;
wire    grp_sin_or_cos_double_s_fu_409_ap_idle;
wire    grp_sin_or_cos_double_s_fu_409_ap_ready;
reg   [63:0] grp_sin_or_cos_double_s_fu_409_t_in;
reg   [6:0] ap_phi_mux_indvar_flatten_phi_fu_193_p4;
wire    ap_block_pp0_stage0;
reg   [3:0] ap_phi_mux_m_0_phi_fu_204_p4;
reg   [3:0] ap_phi_mux_n_0_phi_fu_215_p4;
reg   [8:0] ap_phi_mux_indvar_flatten22_phi_fu_226_p4;
wire    ap_block_pp1_stage0;
reg   [3:0] ap_phi_mux_v_0_phi_fu_237_p4;
reg   [7:0] ap_phi_mux_indvar_flatten6_phi_fu_248_p4;
reg   [3:0] ap_phi_mux_m1_0_phi_fu_259_p4;
reg   [3:0] ap_phi_mux_n2_0_phi_fu_270_p4;
reg   [8:0] ap_phi_mux_indvar_flatten61_phi_fu_281_p4;
wire    ap_block_pp2_stage0;
reg   [3:0] ap_phi_mux_v3_0_phi_fu_292_p4;
reg   [7:0] ap_phi_mux_indvar_flatten29_phi_fu_303_p4;
reg   [3:0] ap_phi_mux_m4_0_phi_fu_314_p4;
reg   [3:0] ap_phi_mux_n5_0_phi_fu_325_p4;
reg   [11:0] ap_phi_mux_indvar_flatten142_phi_fu_336_p4;
wire    ap_block_pp3_stage0;
reg   [3:0] ap_phi_mux_k_0_phi_fu_347_p4;
reg   [9:0] ap_phi_mux_indvar_flatten100_phi_fu_358_p4;
reg   [3:0] ap_phi_mux_l_0_phi_fu_369_p4;
reg   [7:0] ap_phi_mux_indvar_flatten68_phi_fu_380_p4;
reg   [3:0] ap_phi_mux_m6_0_phi_fu_391_p4;
reg   [3:0] ap_phi_mux_n7_0_phi_fu_402_p4;
reg    grp_sin_or_cos_double_s_fu_409_ap_start_reg;
wire    ap_block_pp1_stage2;
wire    ap_block_pp2_stage3;
wire    ap_block_pp3_stage3;
wire    ap_block_pp3_stage4;
wire    ap_block_pp1_stage3;
wire    ap_block_pp2_stage4;
wire    ap_block_pp3_stage5;
wire    ap_block_pp1_stage6;
wire    ap_block_pp1_stage7;
wire    ap_block_pp2_stage7;
wire    ap_block_pp3_stage7;
wire    ap_block_pp3_stage1;
wire    ap_CS_fsm_pp1_stage4;
wire    ap_block_pp1_stage4;
wire    ap_block_pp1_stage5;
wire    ap_CS_fsm_pp2_stage5;
wire    ap_block_pp2_stage5;
wire    ap_block_pp2_stage6;
wire    ap_block_pp3_stage6;
wire   [63:0] zext_ln323_1_fu_596_p1;
wire   [63:0] zext_ln338_1_fu_714_p1;
wire   [63:0] zext_ln330_1_fu_767_p1;
wire   [63:0] zext_ln353_6_fu_905_p1;
wire   [63:0] zext_ln353_1_fu_979_p1;
wire   [63:0] zext_ln370_1_fu_1252_p1;
wire    ap_block_pp3_stage2;
wire   [63:0] zext_ln370_8_fu_1308_p1;
wire    ap_block_pp0_stage4;
wire    ap_block_pp0_stage3_11001;
wire   [31:0] grp_fu_426_p2;
wire    ap_block_pp0_stage3;
wire   [31:0] grp_fu_439_p1;
wire    ap_block_pp0_stage5;
reg   [31:0] grp_fu_432_p1;
wire    ap_block_pp0_stage1;
reg   [31:0] grp_fu_443_p0;
wire    ap_block_pp1_stage1;
wire    ap_block_pp2_stage1;
reg   [63:0] grp_fu_453_p0;
reg   [63:0] grp_fu_453_p1;
wire    ap_block_pp2_stage2;
reg   [63:0] grp_fu_460_p0;
reg   [63:0] grp_fu_460_p1;
reg   [31:0] grp_fu_468_p0;
wire   [0:0] icmp_ln320_fu_552_p2;
wire   [3:0] m_fu_546_p2;
wire   [6:0] tmp_76_fu_574_p3;
wire   [7:0] zext_ln323_fu_586_p1;
wire   [7:0] zext_ln321_fu_582_p1;
wire   [7:0] add_ln323_fu_590_p2;
wire   [0:0] icmp_ln332_fu_624_p2;
wire   [3:0] v_fu_618_p2;
wire   [0:0] icmp_ln335_fu_652_p2;
wire   [0:0] xor_ln330_fu_646_p2;
wire   [3:0] select_ln330_fu_630_p3;
wire   [0:0] and_ln330_fu_658_p2;
wire   [0:0] or_ln338_1_fu_670_p2;
wire   [3:0] m_14_fu_664_p2;
wire   [6:0] tmp_77_fu_692_p3;
wire   [7:0] zext_ln338_fu_704_p1;
wire   [7:0] zext_ln332_fu_700_p1;
wire   [7:0] add_ln338_fu_708_p2;
wire   [7:0] add_ln332_1_fu_719_p2;
wire   [3:0] shl_ln338_fu_736_p2;
wire   [3:0] or_ln338_fu_741_p2;
wire   [3:0] mul_ln338_fu_751_p0;
wire   [3:0] mul_ln338_fu_751_p1;
wire   [7:0] mul_ln338_fu_751_p2;
wire   [3:0] shl_ln353_fu_775_p2;
wire   [3:0] or_ln353_fu_781_p2;
wire   [3:0] mul_ln353_fu_791_p0;
wire   [3:0] mul_ln353_fu_791_p1;
wire   [0:0] icmp_ln350_fu_843_p2;
wire   [0:0] xor_ln345_fu_837_p2;
wire   [3:0] select_ln345_fu_821_p3;
wire   [0:0] or_ln353_1_fu_861_p2;
wire   [6:0] tmp_79_fu_883_p3;
wire   [7:0] zext_ln353_5_fu_895_p1;
wire   [7:0] zext_ln353_2_fu_891_p1;
wire   [7:0] add_ln353_fu_899_p2;
wire   [7:0] zext_ln345_2_fu_919_p1;
wire   [3:0] shl_ln353_1_fu_928_p2;
wire   [3:0] or_ln353_2_fu_933_p2;
wire   [3:0] mul_ln353_1_fu_943_p0;
wire   [3:0] mul_ln353_1_fu_943_p1;
wire   [7:0] mul_ln353_1_fu_943_p2;
wire   [7:0] select_ln345_2_fu_922_p3;
wire   [7:0] select_ln353_2_fu_949_p3;
wire   [6:0] tmp_78_fu_972_p3;
wire   [3:0] shl_ln370_fu_988_p2;
wire   [3:0] or_ln370_fu_994_p2;
wire   [3:0] mul_ln370_fu_1004_p0;
wire   [3:0] mul_ln370_fu_1004_p1;
wire   [0:0] icmp_ln367_fu_1056_p2;
wire   [0:0] xor_ln360_fu_1050_p2;
wire   [0:0] icmp_ln364_fu_1068_p2;
wire   [0:0] or_ln362_fu_1080_p2;
wire   [0:0] xor_ln362_fu_1094_p2;
wire   [0:0] and_ln360_fu_1062_p2;
wire   [0:0] or_ln362_1_fu_1100_p2;
wire   [0:0] or_ln370_2_fu_1118_p2;
wire   [0:0] or_ln370_4_fu_1124_p2;
wire   [7:0] add_ln364_1_fu_1138_p2;
wire   [7:0] zext_ln360_2_fu_1161_p1;
wire   [3:0] l_fu_1170_p2;
wire   [7:0] zext_ln360_1_fu_1158_p1;
wire   [7:0] select_ln360_2_fu_1164_p3;
wire   [3:0] shl_ln370_1_fu_1193_p2;
wire   [3:0] or_ln370_3_fu_1198_p2;
wire   [3:0] mul_ln370_2_fu_1208_p0;
wire   [3:0] mul_ln370_2_fu_1208_p1;
wire   [7:0] mul_ln370_2_fu_1208_p2;
wire   [7:0] select_ln362_2_fu_1181_p3;
wire   [7:0] select_ln370_2_fu_1214_p3;
wire   [6:0] tmp_80_fu_1232_p3;
wire   [7:0] zext_ln362_fu_1239_p1;
wire   [7:0] zext_ln362_1_fu_1243_p1;
wire   [7:0] add_ln370_fu_1246_p2;
wire   [3:0] shl_ln370_2_fu_1257_p2;
wire   [3:0] or_ln370_1_fu_1262_p2;
wire   [3:0] mul_ln370_1_fu_1272_p0;
wire   [3:0] mul_ln370_1_fu_1272_p1;
wire   [7:0] mul_ln370_1_fu_1272_p2;
wire   [6:0] tmp_81_fu_1288_p3;
wire   [7:0] zext_ln370_2_fu_1295_p1;
wire   [7:0] zext_ln370_5_fu_1299_p1;
wire   [7:0] add_ln370_1_fu_1302_p2;
wire    ap_CS_fsm_state188;
reg   [34:0] ap_NS_fsm;
wire    ap_block_pp0_stage1_subdone;
wire    ap_block_state4_pp0_stage2_iter0;
wire    ap_block_state10_pp0_stage2_iter1;
wire    ap_block_pp0_stage2_subdone;
wire    ap_block_pp0_stage4_subdone;
wire    ap_block_pp1_stage1_subdone;
wire    ap_block_pp1_stage2_subdone;
wire    ap_block_pp1_stage3_subdone;
wire    ap_block_state17_pp1_stage4_iter0;
wire    ap_block_state25_pp1_stage4_iter1;
wire    ap_block_state33_pp1_stage4_iter2;
wire    ap_block_state41_pp1_stage4_iter3;
wire    ap_block_state49_pp1_stage4_iter4;
wire    ap_block_state57_pp1_stage4_iter5;
wire    ap_block_state65_pp1_stage4_iter6;
wire    ap_block_pp1_stage4_subdone;
wire    ap_block_pp1_stage5_subdone;
wire    ap_block_pp2_stage1_subdone;
wire    ap_block_pp2_stage2_subdone;
wire    ap_block_pp2_stage3_subdone;
wire    ap_block_pp2_stage4_subdone;
wire    ap_block_state74_pp2_stage5_iter0;
wire    ap_block_state82_pp2_stage5_iter1;
wire    ap_block_state90_pp2_stage5_iter2;
wire    ap_block_state98_pp2_stage5_iter3;
wire    ap_block_state106_pp2_stage5_iter4;
wire    ap_block_state114_pp2_stage5_iter5;
wire    ap_block_state122_pp2_stage5_iter6;
wire    ap_block_pp2_stage5_subdone;
wire    ap_block_pp2_stage6_subdone;
wire    ap_block_pp3_stage1_subdone;
wire    ap_block_pp3_stage2_subdone;
wire    ap_block_pp3_stage3_subdone;
wire    ap_block_pp3_stage4_subdone;
wire    ap_block_pp3_stage6_subdone;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
reg    ap_idle_pp1;
wire    ap_enable_pp1;
reg    ap_idle_pp2;
wire    ap_enable_pp2;
reg    ap_idle_pp3;
wire    ap_enable_pp3;
wire   [7:0] mul_ln338_fu_751_p00;
wire   [7:0] mul_ln338_fu_751_p10;
wire   [7:0] mul_ln353_1_fu_943_p00;
wire   [7:0] mul_ln353_1_fu_943_p10;
wire   [7:0] mul_ln353_fu_791_p00;
wire   [7:0] mul_ln353_fu_791_p10;
wire   [7:0] mul_ln370_1_fu_1272_p00;
wire   [7:0] mul_ln370_2_fu_1208_p00;
wire   [7:0] mul_ln370_fu_1004_p00;
wire   [7:0] mul_ln370_fu_1004_p10;

// power-on initialization
initial begin
#0 ap_CS_fsm = 35'd1;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp1_iter0 = 1'b0;
#0 ap_enable_reg_pp2_iter0 = 1'b0;
#0 ap_enable_reg_pp3_iter4 = 1'b0;
#0 ap_enable_reg_pp1_iter6 = 1'b0;
#0 ap_enable_reg_pp2_iter6 = 1'b0;
#0 ap_enable_reg_pp3_iter6 = 1'b0;
#0 ap_enable_reg_pp3_iter0 = 1'b0;
#0 ap_enable_reg_pp3_iter1 = 1'b0;
#0 ap_enable_reg_pp3_iter2 = 1'b0;
#0 ap_enable_reg_pp1_iter1 = 1'b0;
#0 ap_enable_reg_pp1_iter2 = 1'b0;
#0 ap_enable_reg_pp2_iter1 = 1'b0;
#0 ap_enable_reg_pp2_iter2 = 1'b0;
#0 ap_enable_reg_pp1_iter5 = 1'b0;
#0 ap_enable_reg_pp2_iter5 = 1'b0;
#0 ap_enable_reg_pp3_iter5 = 1'b0;
#0 ap_enable_reg_pp3_iter7 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp1_iter3 = 1'b0;
#0 ap_enable_reg_pp1_iter4 = 1'b0;
#0 ap_enable_reg_pp2_iter3 = 1'b0;
#0 ap_enable_reg_pp2_iter4 = 1'b0;
#0 ap_enable_reg_pp3_iter3 = 1'b0;
#0 grp_sin_or_cos_double_s_fu_409_ap_start_reg = 1'b0;
end

sin_or_cos_double_s grp_sin_or_cos_double_s_fu_409(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_sin_or_cos_double_s_fu_409_ap_start),
    .ap_done(grp_sin_or_cos_double_s_fu_409_ap_done),
    .ap_idle(grp_sin_or_cos_double_s_fu_409_ap_idle),
    .ap_ready(grp_sin_or_cos_double_s_fu_409_ap_ready),
    .ap_ce(1'b1),
    .t_in(grp_sin_or_cos_double_s_fu_409_t_in),
    .ap_return(grp_sin_or_cos_double_s_fu_409_ap_return)
);

pic_detec_fadd_32pcA #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
pic_detec_fadd_32pcA_U28(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(dct_r_q0),
    .din1(reg_478),
    .ce(1'b1),
    .dout(grp_fu_426_p2)
);

pic_detec_fmul_32qcK #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
pic_detec_fmul_32qcK_U29(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(ori_q0),
    .din1(grp_fu_432_p1),
    .ce(1'b1),
    .dout(grp_fu_432_p2)
);

pic_detec_fptruncrcU #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 64 ),
    .dout_WIDTH( 32 ))
pic_detec_fptruncrcU_U30(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_453_p2),
    .ce(1'b1),
    .dout(grp_fu_439_p1)
);

pic_detec_fpext_3sc4 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
pic_detec_fpext_3sc4_U31(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_443_p0),
    .ce(1'b1),
    .dout(grp_fu_443_p1)
);

pic_detec_fpext_3sc4 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
pic_detec_fpext_3sc4_U32(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(dct_r_q0),
    .ce(1'b1),
    .dout(grp_fu_448_p1)
);

pic_detec_dadd_64tde #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
pic_detec_dadd_64tde_U33(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_453_p0),
    .din1(grp_fu_453_p1),
    .ce(1'b1),
    .dout(grp_fu_453_p2)
);

pic_detec_dmul_64udo #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
pic_detec_dmul_64udo_U34(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_460_p0),
    .din1(grp_fu_460_p1),
    .ce(1'b1),
    .dout(grp_fu_460_p2)
);

pic_detec_sitodp_vdy #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
pic_detec_sitodp_vdy_U35(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_468_p0),
    .ce(1'b1),
    .dout(grp_fu_468_p1)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_condition_pp0_exit_iter0_state2) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((((1'b0 == ap_block_pp0_stage3_subdone) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage5_subdone) & (1'b1 == ap_CS_fsm_pp0_stage5)))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp1_stage0_subdone) & (1'b1 == ap_condition_pp1_exit_iter0_state13) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
            ap_enable_reg_pp1_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state12)) begin
            ap_enable_reg_pp1_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp1_stage7_subdone) & (1'b1 == ap_CS_fsm_pp1_stage7))) begin
            ap_enable_reg_pp1_iter1 <= ap_enable_reg_pp1_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter2 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp1_stage7_subdone) & (1'b1 == ap_CS_fsm_pp1_stage7))) begin
            ap_enable_reg_pp1_iter2 <= ap_enable_reg_pp1_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter3 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp1_stage7_subdone) & (1'b1 == ap_CS_fsm_pp1_stage7))) begin
            ap_enable_reg_pp1_iter3 <= ap_enable_reg_pp1_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter4 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp1_stage7_subdone) & (1'b1 == ap_CS_fsm_pp1_stage7))) begin
            ap_enable_reg_pp1_iter4 <= ap_enable_reg_pp1_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter5 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp1_stage7_subdone) & (1'b1 == ap_CS_fsm_pp1_stage7))) begin
            ap_enable_reg_pp1_iter5 <= ap_enable_reg_pp1_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter6 <= 1'b0;
    end else begin
        if ((((1'b0 == ap_block_pp1_stage7_subdone) & (1'b1 == ap_CS_fsm_pp1_stage7)) | ((1'b0 == ap_block_pp1_stage6_subdone) & (1'b1 == ap_CS_fsm_pp1_stage6)))) begin
            ap_enable_reg_pp1_iter6 <= ap_enable_reg_pp1_iter5;
        end else if ((1'b1 == ap_CS_fsm_state12)) begin
            ap_enable_reg_pp1_iter6 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp2_stage0_subdone) & (1'b1 == ap_condition_pp2_exit_iter0_state69) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
            ap_enable_reg_pp2_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state68)) begin
            ap_enable_reg_pp2_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp2_stage7_subdone) & (1'b1 == ap_CS_fsm_pp2_stage7))) begin
            ap_enable_reg_pp2_iter1 <= ap_enable_reg_pp2_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter2 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp2_stage7_subdone) & (1'b1 == ap_CS_fsm_pp2_stage7))) begin
            ap_enable_reg_pp2_iter2 <= ap_enable_reg_pp2_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter3 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp2_stage7_subdone) & (1'b1 == ap_CS_fsm_pp2_stage7))) begin
            ap_enable_reg_pp2_iter3 <= ap_enable_reg_pp2_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter4 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp2_stage7_subdone) & (1'b1 == ap_CS_fsm_pp2_stage7))) begin
            ap_enable_reg_pp2_iter4 <= ap_enable_reg_pp2_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter5 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp2_stage7_subdone) & (1'b1 == ap_CS_fsm_pp2_stage7))) begin
            ap_enable_reg_pp2_iter5 <= ap_enable_reg_pp2_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter6 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp2_stage7_subdone) & (1'b1 == ap_CS_fsm_pp2_stage7))) begin
            ap_enable_reg_pp2_iter6 <= ap_enable_reg_pp2_iter5;
        end else if ((1'b1 == ap_CS_fsm_state68)) begin
            ap_enable_reg_pp2_iter6 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp3_stage0_subdone) & (1'b1 == ap_CS_fsm_pp3_stage0) & (1'b1 == ap_condition_pp3_exit_iter0_state126))) begin
            ap_enable_reg_pp3_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state125)) begin
            ap_enable_reg_pp3_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp3_stage7) & (1'b0 == ap_block_pp3_stage7_subdone))) begin
            ap_enable_reg_pp3_iter1 <= ap_enable_reg_pp3_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter2 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp3_stage7) & (1'b0 == ap_block_pp3_stage7_subdone))) begin
            ap_enable_reg_pp3_iter2 <= ap_enable_reg_pp3_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter3 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp3_stage7) & (1'b0 == ap_block_pp3_stage7_subdone))) begin
            ap_enable_reg_pp3_iter3 <= ap_enable_reg_pp3_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter4 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp3_stage7) & (1'b0 == ap_block_pp3_stage7_subdone))) begin
            ap_enable_reg_pp3_iter4 <= ap_enable_reg_pp3_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter5 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp3_stage7) & (1'b0 == ap_block_pp3_stage7_subdone))) begin
            ap_enable_reg_pp3_iter5 <= ap_enable_reg_pp3_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter6 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp3_stage7) & (1'b0 == ap_block_pp3_stage7_subdone))) begin
            ap_enable_reg_pp3_iter6 <= ap_enable_reg_pp3_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter7 <= 1'b0;
    end else begin
        if ((((1'b1 == ap_CS_fsm_pp3_stage7) & (1'b0 == ap_block_pp3_stage7_subdone)) | ((1'b1 == ap_CS_fsm_pp3_stage5) & (1'b0 == ap_block_pp3_stage5_subdone)))) begin
            ap_enable_reg_pp3_iter7 <= ap_enable_reg_pp3_iter6;
        end else if ((1'b1 == ap_CS_fsm_state125)) begin
            ap_enable_reg_pp3_iter7 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_sin_or_cos_double_s_fu_409_ap_start_reg <= 1'b0;
    end else begin
        if ((((1'b0 == ap_block_pp3_stage3_11001) & (1'b1 == ap_CS_fsm_pp3_stage3) & (ap_enable_reg_pp3_iter2 == 1'b1) & (icmp_ln360_reg_1491_pp3_iter2_reg == 1'd0)) | ((1'b0 == ap_block_pp2_stage2_11001) & (ap_enable_reg_pp2_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage2) & (icmp_ln345_reg_1404_pp2_iter2_reg == 1'd0)) | ((ap_enable_reg_pp3_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage2) & (1'b0 == ap_block_pp3_stage2_11001) & (icmp_ln360_reg_1491_pp3_iter2_reg == 1'd0)) | ((ap_enable_reg_pp1_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage1) & (1'b0 == ap_block_pp1_stage1_11001) & (icmp_ln330_reg_1347_pp1_iter2_reg == 1'd0)))) begin
            grp_sin_or_cos_double_s_fu_409_ap_start_reg <= 1'b1;
        end else if ((grp_sin_or_cos_double_s_fu_409_ap_ready == 1'b1)) begin
            grp_sin_or_cos_double_s_fu_409_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state125)) begin
        indvar_flatten100_reg_354 <= 10'd0;
    end else if (((1'b0 == ap_block_pp3_stage0_11001) & (1'b1 == ap_CS_fsm_pp3_stage0) & (ap_enable_reg_pp3_iter1 == 1'b1) & (icmp_ln360_reg_1491 == 1'd0))) begin
        indvar_flatten100_reg_354 <= select_ln362_3_reg_1581;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state125)) begin
        indvar_flatten142_reg_332 <= 12'd0;
    end else if (((1'b0 == ap_block_pp3_stage0_11001) & (1'b1 == ap_CS_fsm_pp3_stage0) & (ap_enable_reg_pp3_iter1 == 1'b1) & (icmp_ln360_reg_1491 == 1'd0))) begin
        indvar_flatten142_reg_332 <= add_ln360_reg_1495;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        indvar_flatten22_reg_222 <= 9'd0;
    end else if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln330_reg_1347 == 1'd0))) begin
        indvar_flatten22_reg_222 <= add_ln330_reg_1351;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state68)) begin
        indvar_flatten29_reg_299 <= 8'd0;
    end else if (((1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (icmp_ln345_reg_1404 == 1'd0))) begin
        indvar_flatten29_reg_299 <= select_ln347_reg_1466;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state68)) begin
        indvar_flatten61_reg_277 <= 9'd0;
    end else if (((1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (icmp_ln345_reg_1404 == 1'd0))) begin
        indvar_flatten61_reg_277 <= add_ln345_reg_1408;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state125)) begin
        indvar_flatten68_reg_376 <= 8'd0;
    end else if (((1'b0 == ap_block_pp3_stage0_11001) & (1'b1 == ap_CS_fsm_pp3_stage0) & (ap_enable_reg_pp3_iter1 == 1'b1) & (icmp_ln360_reg_1491 == 1'd0))) begin
        indvar_flatten68_reg_376 <= select_ln364_reg_1554;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        indvar_flatten6_reg_244 <= 8'd0;
    end else if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln330_reg_1347 == 1'd0))) begin
        indvar_flatten6_reg_244 <= select_ln332_reg_1379;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln317_reg_1318 == 1'd0))) begin
        indvar_flatten_reg_189 <= add_ln317_reg_1322;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        indvar_flatten_reg_189 <= 7'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state125)) begin
        k_0_reg_343 <= 4'd1;
    end else if (((1'b0 == ap_block_pp3_stage0_11001) & (1'b1 == ap_CS_fsm_pp3_stage0) & (ap_enable_reg_pp3_iter1 == 1'b1) & (icmp_ln360_reg_1491 == 1'd0))) begin
        k_0_reg_343 <= select_ln360_1_reg_1517;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state125)) begin
        l_0_reg_365 <= 4'd1;
    end else if (((1'b0 == ap_block_pp3_stage0_11001) & (1'b1 == ap_CS_fsm_pp3_stage0) & (ap_enable_reg_pp3_iter1 == 1'b1) & (icmp_ln360_reg_1491 == 1'd0))) begin
        l_0_reg_365 <= select_ln362_1_reg_1564;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        m1_0_reg_255 <= 4'd0;
    end else if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln330_reg_1347 == 1'd0))) begin
        m1_0_reg_255 <= select_ln338_1_reg_1369;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state68)) begin
        m4_0_reg_310 <= 4'd0;
    end else if (((1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (icmp_ln345_reg_1404 == 1'd0))) begin
        m4_0_reg_310 <= select_ln353_1_reg_1446;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state125)) begin
        m6_0_reg_387 <= 4'd0;
    end else if (((1'b0 == ap_block_pp3_stage0_11001) & (1'b1 == ap_CS_fsm_pp3_stage0) & (ap_enable_reg_pp3_iter1 == 1'b1) & (icmp_ln360_reg_1491 == 1'd0))) begin
        m6_0_reg_387 <= select_ln370_1_reg_1570;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln317_reg_1318 == 1'd0))) begin
        m_0_reg_200 <= select_ln323_1_reg_1332;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        m_0_reg_200 <= 4'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        n2_0_reg_266 <= 4'd0;
    end else if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln330_reg_1347 == 1'd0))) begin
        n2_0_reg_266 <= n_1_reg_1389;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state68)) begin
        n5_0_reg_321 <= 4'd0;
    end else if (((1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (icmp_ln345_reg_1404 == 1'd0))) begin
        n5_0_reg_321 <= n_2_reg_1471;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state125)) begin
        n7_0_reg_398 <= 4'd0;
    end else if (((1'b0 == ap_block_pp3_stage0_11001) & (1'b1 == ap_CS_fsm_pp3_stage0) & (ap_enable_reg_pp3_iter1 == 1'b1) & (icmp_ln360_reg_1491 == 1'd0))) begin
        n7_0_reg_398 <= n_3_reg_1601;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln317_reg_1318 == 1'd0))) begin
        n_0_reg_211 <= n_reg_1342;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        n_0_reg_211 <= 4'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state68)) begin
        v3_0_reg_288 <= 4'd1;
    end else if (((1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (icmp_ln345_reg_1404 == 1'd0))) begin
        v3_0_reg_288 <= select_ln345_1_reg_1424;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        v_0_reg_233 <= 4'd1;
    end else if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln330_reg_1347 == 1'd0))) begin
        v_0_reg_233 <= select_ln330_1_reg_1356;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        add_ln317_reg_1322 <= add_ln317_fu_540_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1))) begin
        add_ln330_reg_1351 <= add_ln330_fu_612_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0) & (ap_enable_reg_pp2_iter0 == 1'b1))) begin
        add_ln345_reg_1408 <= add_ln345_fu_803_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0) & (icmp_ln345_fu_797_p2 == 1'd0))) begin
        add_ln347_1_reg_1456 <= add_ln347_1_fu_910_p2;
        and_ln345_reg_1431 <= and_ln345_fu_849_p2;
        icmp_ln347_reg_1418 <= icmp_ln347_fu_815_p2;
        m_15_reg_1436 <= m_15_fu_855_p2;
        select_ln353_reg_1441 <= select_ln353_fu_867_p3;
        v_5_reg_1413 <= v_5_fu_809_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp3_stage0_11001) & (1'b1 == ap_CS_fsm_pp3_stage0) & (ap_enable_reg_pp3_iter0 == 1'b1))) begin
        add_ln360_reg_1495 <= add_ln360_fu_1016_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp3_stage0_11001) & (1'b1 == ap_CS_fsm_pp3_stage0) & (icmp_ln360_fu_1010_p2 == 1'd0))) begin
        add_ln362_1_reg_1559 <= add_ln362_1_fu_1152_p2;
        and_ln360_1_reg_1524 <= and_ln360_1_fu_1074_p2;
        and_ln362_reg_1535 <= and_ln362_fu_1106_p2;
        icmp_ln362_reg_1505 <= icmp_ln362_fu_1028_p2;
        k_reg_1500 <= k_fu_1022_p2;
        m_16_reg_1541 <= m_16_fu_1112_p2;
        select_ln360_reg_1511 <= select_ln360_fu_1034_p3;
        select_ln362_reg_1530 <= select_ln362_fu_1086_p3;
        select_ln370_reg_1547 <= select_ln370_fu_1130_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage7_11001) & (1'b1 == ap_CS_fsm_pp1_stage7) & (icmp_ln330_reg_1347_pp1_iter5_reg == 1'd0))) begin
        dct_addr_1_reg_1394[3 : 0] <= zext_ln330_1_fu_767_p1[3 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0) & (icmp_ln345_reg_1404_pp2_iter5_reg == 1'd0))) begin
        dct_addr_2_reg_1476[5 : 3] <= zext_ln353_1_fu_979_p1[5 : 3];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp3_stage2) & (1'b0 == ap_block_pp3_stage2_11001) & (icmp_ln360_reg_1491 == 1'd0))) begin
        dct_addr_3_reg_1586 <= zext_ln370_1_fu_1252_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp3_stage2) & (1'b0 == ap_block_pp3_stage2_11001))) begin
        dct_addr_3_reg_1586_pp3_iter1_reg <= dct_addr_3_reg_1586;
        dct_addr_3_reg_1586_pp3_iter2_reg <= dct_addr_3_reg_1586_pp3_iter1_reg;
        dct_addr_3_reg_1586_pp3_iter3_reg <= dct_addr_3_reg_1586_pp3_iter2_reg;
        dct_addr_3_reg_1586_pp3_iter4_reg <= dct_addr_3_reg_1586_pp3_iter3_reg;
        dct_addr_3_reg_1586_pp3_iter5_reg <= dct_addr_3_reg_1586_pp3_iter4_reg;
        dct_addr_3_reg_1586_pp3_iter6_reg <= dct_addr_3_reg_1586_pp3_iter5_reg;
        dct_addr_3_reg_1586_pp3_iter7_reg <= dct_addr_3_reg_1586_pp3_iter6_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln317_reg_1318 <= icmp_ln317_fu_534_p2;
        icmp_ln317_reg_1318_pp0_iter1_reg <= icmp_ln317_reg_1318;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        icmp_ln330_reg_1347 <= icmp_ln330_fu_606_p2;
        icmp_ln330_reg_1347_pp1_iter1_reg <= icmp_ln330_reg_1347;
        icmp_ln330_reg_1347_pp1_iter2_reg <= icmp_ln330_reg_1347_pp1_iter1_reg;
        icmp_ln330_reg_1347_pp1_iter3_reg <= icmp_ln330_reg_1347_pp1_iter2_reg;
        icmp_ln330_reg_1347_pp1_iter4_reg <= icmp_ln330_reg_1347_pp1_iter3_reg;
        icmp_ln330_reg_1347_pp1_iter5_reg <= icmp_ln330_reg_1347_pp1_iter4_reg;
        icmp_ln330_reg_1347_pp1_iter6_reg <= icmp_ln330_reg_1347_pp1_iter5_reg;
        select_ln330_1_reg_1356_pp1_iter1_reg <= select_ln330_1_reg_1356;
        select_ln330_1_reg_1356_pp1_iter2_reg <= select_ln330_1_reg_1356_pp1_iter1_reg;
        select_ln330_1_reg_1356_pp1_iter3_reg <= select_ln330_1_reg_1356_pp1_iter2_reg;
        select_ln330_1_reg_1356_pp1_iter4_reg <= select_ln330_1_reg_1356_pp1_iter3_reg;
        select_ln330_1_reg_1356_pp1_iter5_reg <= select_ln330_1_reg_1356_pp1_iter4_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        icmp_ln345_reg_1404 <= icmp_ln345_fu_797_p2;
        icmp_ln345_reg_1404_pp2_iter1_reg <= icmp_ln345_reg_1404;
        icmp_ln345_reg_1404_pp2_iter2_reg <= icmp_ln345_reg_1404_pp2_iter1_reg;
        icmp_ln345_reg_1404_pp2_iter3_reg <= icmp_ln345_reg_1404_pp2_iter2_reg;
        icmp_ln345_reg_1404_pp2_iter4_reg <= icmp_ln345_reg_1404_pp2_iter3_reg;
        icmp_ln345_reg_1404_pp2_iter5_reg <= icmp_ln345_reg_1404_pp2_iter4_reg;
        icmp_ln345_reg_1404_pp2_iter6_reg <= icmp_ln345_reg_1404_pp2_iter5_reg;
        mul_ln353_reg_1399 <= mul_ln353_fu_791_p2;
        select_ln345_1_reg_1424_pp2_iter1_reg <= select_ln345_1_reg_1424;
        select_ln345_1_reg_1424_pp2_iter2_reg <= select_ln345_1_reg_1424_pp2_iter1_reg;
        select_ln345_1_reg_1424_pp2_iter3_reg <= select_ln345_1_reg_1424_pp2_iter2_reg;
        select_ln345_1_reg_1424_pp2_iter4_reg <= select_ln345_1_reg_1424_pp2_iter3_reg;
        select_ln345_1_reg_1424_pp2_iter5_reg <= select_ln345_1_reg_1424_pp2_iter4_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp3_stage0_11001) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        icmp_ln360_reg_1491 <= icmp_ln360_fu_1010_p2;
        icmp_ln360_reg_1491_pp3_iter1_reg <= icmp_ln360_reg_1491;
        icmp_ln360_reg_1491_pp3_iter2_reg <= icmp_ln360_reg_1491_pp3_iter1_reg;
        icmp_ln360_reg_1491_pp3_iter3_reg <= icmp_ln360_reg_1491_pp3_iter2_reg;
        icmp_ln360_reg_1491_pp3_iter4_reg <= icmp_ln360_reg_1491_pp3_iter3_reg;
        icmp_ln360_reg_1491_pp3_iter5_reg <= icmp_ln360_reg_1491_pp3_iter4_reg;
        icmp_ln360_reg_1491_pp3_iter6_reg <= icmp_ln360_reg_1491_pp3_iter5_reg;
        icmp_ln360_reg_1491_pp3_iter7_reg <= icmp_ln360_reg_1491_pp3_iter6_reg;
        mul_ln370_reg_1486 <= mul_ln370_fu_1004_p2;
        select_ln370_reg_1547_pp3_iter1_reg <= select_ln370_reg_1547;
        select_ln370_reg_1547_pp3_iter2_reg <= select_ln370_reg_1547_pp3_iter1_reg;
        select_ln370_reg_1547_pp3_iter3_reg <= select_ln370_reg_1547_pp3_iter2_reg;
        select_ln370_reg_1547_pp3_iter4_reg <= select_ln370_reg_1547_pp3_iter3_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage7_11001) & (1'b1 == ap_CS_fsm_pp1_stage7) & (ap_enable_reg_pp1_iter0 == 1'b1) & (icmp_ln330_reg_1347 == 1'd0))) begin
        n_1_reg_1389 <= n_1_fu_762_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage7_11001) & (1'b1 == ap_CS_fsm_pp2_stage7) & (ap_enable_reg_pp2_iter0 == 1'b1) & (icmp_ln345_reg_1404 == 1'd0))) begin
        n_2_reg_1471 <= n_2_fu_967_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp3_stage7_11001) & (ap_enable_reg_pp3_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage7) & (icmp_ln360_reg_1491 == 1'd0))) begin
        n_3_reg_1601 <= n_3_fu_1283_p2;
        tmp_70_reg_1596 <= grp_fu_468_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage5_11001) & (1'b1 == ap_CS_fsm_pp0_stage5) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln317_reg_1318 == 1'd0))) begin
        n_reg_1342 <= n_fu_601_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b0 == ap_block_pp3_stage5_11001) & (1'b1 == ap_CS_fsm_pp3_stage5) & (ap_enable_reg_pp3_iter4 == 1'b1) & (icmp_ln360_reg_1491_pp3_iter4_reg == 1'd0)) | ((1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln317_reg_1318 == 1'd0)))) begin
        reg_478 <= grp_fu_432_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b0 == ap_block_pp3_stage6_11001) & (1'b1 == ap_CS_fsm_pp3_stage6) & (ap_enable_reg_pp3_iter4 == 1'b1) & (icmp_ln360_reg_1491_pp3_iter4_reg == 1'd0)) | ((1'b0 == ap_block_pp2_stage2_11001) & (1'b1 == ap_CS_fsm_pp2_stage2) & (ap_enable_reg_pp2_iter0 == 1'b1) & (icmp_ln345_reg_1404 == 1'd0)) | ((1'b0 == ap_block_pp1_stage2_11001) & (1'b1 == ap_CS_fsm_pp1_stage2) & (ap_enable_reg_pp1_iter0 == 1'b1) & (icmp_ln330_reg_1347 == 1'd0)))) begin
        reg_491 <= grp_fu_443_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b0 == ap_block_pp3_stage6_11001) & (ap_enable_reg_pp3_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage6) & (icmp_ln360_reg_1491 == 1'd0)) | ((1'b0 == ap_block_pp2_stage6_11001) & (1'b1 == ap_CS_fsm_pp2_stage6) & (ap_enable_reg_pp2_iter0 == 1'b1) & (icmp_ln345_reg_1404 == 1'd0)) | ((1'b0 == ap_block_pp1_stage6_11001) & (1'b1 == ap_CS_fsm_pp1_stage6) & (ap_enable_reg_pp1_iter0 == 1'b1) & (icmp_ln330_reg_1347 == 1'd0)))) begin
        reg_496 <= grp_fu_468_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b0 == ap_block_pp3_stage3_11001) & (1'b1 == ap_CS_fsm_pp3_stage3) & (ap_enable_reg_pp3_iter2 == 1'b1) & (icmp_ln360_reg_1491_pp3_iter2_reg == 1'd0)) | ((1'b0 == ap_block_pp3_stage4_11001) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage4) & (icmp_ln360_reg_1491_pp3_iter1_reg == 1'd0)) | ((ap_enable_reg_pp3_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage2) & (1'b0 == ap_block_pp3_stage2_11001) & (icmp_ln360_reg_1491_pp3_iter2_reg == 1'd0)) | ((1'b0 == ap_block_pp2_stage7_11001) & (1'b1 == ap_CS_fsm_pp2_stage7) & (ap_enable_reg_pp2_iter0 == 1'b1) & (icmp_ln345_reg_1404 == 1'd0)) | ((1'b0 == ap_block_pp1_stage7_11001) & (1'b1 == ap_CS_fsm_pp1_stage7) & (ap_enable_reg_pp1_iter0 == 1'b1) & (icmp_ln330_reg_1347 == 1'd0)))) begin
        reg_501 <= grp_fu_460_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage7_11001) & (1'b1 == ap_CS_fsm_pp1_stage7))) begin
        reg_501_pp1_iter1_reg <= reg_501;
        reg_501_pp1_iter2_reg <= reg_501_pp1_iter1_reg;
        reg_501_pp1_iter3_reg <= reg_501_pp1_iter2_reg;
        reg_501_pp1_iter4_reg <= reg_501_pp1_iter3_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage7_11001) & (1'b1 == ap_CS_fsm_pp2_stage7))) begin
        reg_501_pp2_iter1_reg <= reg_501;
        reg_501_pp2_iter2_reg <= reg_501_pp2_iter1_reg;
        reg_501_pp2_iter3_reg <= reg_501_pp2_iter2_reg;
        reg_501_pp2_iter4_reg <= reg_501_pp2_iter3_reg;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b0 == ap_block_pp2_stage4_11001) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage4) & (icmp_ln345_reg_1404_pp2_iter1_reg == 1'd0)) | ((1'b0 == ap_block_pp1_stage3_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage3) & (icmp_ln330_reg_1347_pp1_iter1_reg == 1'd0)) | ((1'b0 == ap_block_pp2_stage2_11001) & (ap_enable_reg_pp2_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage2) & (icmp_ln345_reg_1404_pp2_iter2_reg == 1'd0)) | ((1'b0 == ap_block_pp3_stage5_11001) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage5) & (icmp_ln360_reg_1491_pp3_iter1_reg == 1'd0)) | ((ap_enable_reg_pp1_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage1) & (1'b0 == ap_block_pp1_stage1_11001) & (icmp_ln330_reg_1347_pp1_iter2_reg == 1'd0)))) begin
        reg_507 <= grp_fu_460_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b0 == ap_block_pp2_stage3_11001) & (ap_enable_reg_pp2_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage3) & (icmp_ln345_reg_1404_pp2_iter5_reg == 1'd0)) | ((1'b0 == ap_block_pp3_stage3_11001) & (ap_enable_reg_pp3_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage3) & (icmp_ln360_reg_1491_pp3_iter5_reg == 1'd0)) | ((1'b0 == ap_block_pp1_stage2_11001) & (ap_enable_reg_pp1_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage2) & (icmp_ln330_reg_1347_pp1_iter5_reg == 1'd0)))) begin
        reg_513 <= grp_sin_or_cos_double_s_fu_409_ap_return;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b0 == ap_block_pp3_stage1_11001) & (1'b1 == ap_CS_fsm_pp3_stage1) & (ap_enable_reg_pp3_iter6 == 1'b1) & (icmp_ln360_reg_1491_pp3_iter6_reg == 1'd0)) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter6 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln330_reg_1347_pp1_iter5_reg == 1'd0)) | ((ap_enable_reg_pp2_iter6 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage1) & (1'b0 == ap_block_pp2_stage1_11001) & (icmp_ln345_reg_1404_pp2_iter6_reg == 1'd0)))) begin
        reg_518 <= grp_fu_460_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln317_fu_534_p2 == 1'd0))) begin
        select_ln323_1_reg_1332 <= select_ln323_1_fu_566_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln317_fu_534_p2 == 1'd0))) begin
        select_ln323_reg_1327 <= select_ln323_fu_558_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (icmp_ln330_fu_606_p2 == 1'd0))) begin
        select_ln330_1_reg_1356 <= select_ln330_1_fu_638_p3;
        select_ln332_reg_1379 <= select_ln332_fu_725_p3;
        select_ln338_1_reg_1369 <= select_ln338_1_fu_684_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln330_fu_606_p2 == 1'd0))) begin
        select_ln338_reg_1363 <= select_ln338_fu_676_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0) & (ap_enable_reg_pp2_iter0 == 1'b1) & (icmp_ln345_fu_797_p2 == 1'd0))) begin
        select_ln345_1_reg_1424 <= select_ln345_1_fu_829_p3;
        select_ln353_1_reg_1446 <= select_ln353_1_fu_875_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage1) & (1'b0 == ap_block_pp2_stage1_11001) & (icmp_ln345_reg_1404 == 1'd0))) begin
        select_ln347_reg_1466 <= select_ln347_fu_961_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp3_stage0_11001) & (1'b1 == ap_CS_fsm_pp3_stage0) & (ap_enable_reg_pp3_iter0 == 1'b1) & (icmp_ln360_fu_1010_p2 == 1'd0))) begin
        select_ln360_1_reg_1517 <= select_ln360_1_fu_1042_p3;
        select_ln364_reg_1554 <= select_ln364_fu_1144_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp3_stage1_11001) & (1'b1 == ap_CS_fsm_pp3_stage1) & (ap_enable_reg_pp3_iter0 == 1'b1) & (icmp_ln360_reg_1491 == 1'd0))) begin
        select_ln362_1_reg_1564 <= select_ln362_1_fu_1175_p3;
        select_ln362_3_reg_1581 <= select_ln362_3_fu_1226_p3;
        select_ln370_1_reg_1570 <= select_ln370_1_fu_1188_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp3_stage1_11001) & (1'b1 == ap_CS_fsm_pp3_stage1))) begin
        select_ln370_1_reg_1570_pp3_iter1_reg <= select_ln370_1_reg_1570;
        select_ln370_1_reg_1570_pp3_iter2_reg <= select_ln370_1_reg_1570_pp3_iter1_reg;
        select_ln370_1_reg_1570_pp3_iter3_reg <= select_ln370_1_reg_1570_pp3_iter2_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp3_stage7_11001) & (ap_enable_reg_pp3_iter6 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage7) & (icmp_ln360_reg_1491_pp3_iter6_reg == 1'd0))) begin
        tmp_72_reg_1616 <= grp_fu_460_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp3_stage4_11001) & (ap_enable_reg_pp3_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage4) & (icmp_ln360_reg_1491_pp3_iter5_reg == 1'd0))) begin
        tmp_i_i3_reg_1611 <= grp_sin_or_cos_double_s_fu_409_ap_return;
    end
end

always @ (*) begin
    if ((icmp_ln317_fu_534_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state2 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state2 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln330_fu_606_p2 == 1'd1)) begin
        ap_condition_pp1_exit_iter0_state13 = 1'b1;
    end else begin
        ap_condition_pp1_exit_iter0_state13 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln345_fu_797_p2 == 1'd1)) begin
        ap_condition_pp2_exit_iter0_state69 = 1'b1;
    end else begin
        ap_condition_pp2_exit_iter0_state69 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln360_fu_1010_p2 == 1'd1)) begin
        ap_condition_pp3_exit_iter0_state126 = 1'b1;
    end else begin
        ap_condition_pp3_exit_iter0_state126 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state188) | ((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter4 == 1'b0) & (ap_enable_reg_pp1_iter3 == 1'b0) & (ap_enable_reg_pp1_iter5 == 1'b0) & (ap_enable_reg_pp1_iter2 == 1'b0) & (ap_enable_reg_pp1_iter1 == 1'b0) & (ap_enable_reg_pp1_iter6 == 1'b0) & (ap_enable_reg_pp1_iter0 == 1'b0))) begin
        ap_idle_pp1 = 1'b1;
    end else begin
        ap_idle_pp1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp2_iter4 == 1'b0) & (ap_enable_reg_pp2_iter3 == 1'b0) & (ap_enable_reg_pp2_iter5 == 1'b0) & (ap_enable_reg_pp2_iter2 == 1'b0) & (ap_enable_reg_pp2_iter1 == 1'b0) & (ap_enable_reg_pp2_iter6 == 1'b0) & (ap_enable_reg_pp2_iter0 == 1'b0))) begin
        ap_idle_pp2 = 1'b1;
    end else begin
        ap_idle_pp2 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp3_iter7 == 1'b0) & (ap_enable_reg_pp3_iter5 == 1'b0) & (ap_enable_reg_pp3_iter2 == 1'b0) & (ap_enable_reg_pp3_iter1 == 1'b0) & (ap_enable_reg_pp3_iter0 == 1'b0) & (ap_enable_reg_pp3_iter6 == 1'b0) & (ap_enable_reg_pp3_iter4 == 1'b0) & (ap_enable_reg_pp3_iter3 == 1'b0))) begin
        ap_idle_pp3 = 1'b1;
    end else begin
        ap_idle_pp3 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp3_stage0) & (ap_enable_reg_pp3_iter1 == 1'b1) & (icmp_ln360_reg_1491 == 1'd0) & (1'b0 == ap_block_pp3_stage0))) begin
        ap_phi_mux_indvar_flatten100_phi_fu_358_p4 = select_ln362_3_reg_1581;
    end else begin
        ap_phi_mux_indvar_flatten100_phi_fu_358_p4 = indvar_flatten100_reg_354;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp3_stage0) & (ap_enable_reg_pp3_iter1 == 1'b1) & (icmp_ln360_reg_1491 == 1'd0) & (1'b0 == ap_block_pp3_stage0))) begin
        ap_phi_mux_indvar_flatten142_phi_fu_336_p4 = add_ln360_reg_1495;
    end else begin
        ap_phi_mux_indvar_flatten142_phi_fu_336_p4 = indvar_flatten142_reg_332;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln330_reg_1347 == 1'd0) & (1'b0 == ap_block_pp1_stage0))) begin
        ap_phi_mux_indvar_flatten22_phi_fu_226_p4 = add_ln330_reg_1351;
    end else begin
        ap_phi_mux_indvar_flatten22_phi_fu_226_p4 = indvar_flatten22_reg_222;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp2_stage0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (icmp_ln345_reg_1404 == 1'd0) & (1'b0 == ap_block_pp2_stage0))) begin
        ap_phi_mux_indvar_flatten29_phi_fu_303_p4 = select_ln347_reg_1466;
    end else begin
        ap_phi_mux_indvar_flatten29_phi_fu_303_p4 = indvar_flatten29_reg_299;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp2_stage0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (icmp_ln345_reg_1404 == 1'd0) & (1'b0 == ap_block_pp2_stage0))) begin
        ap_phi_mux_indvar_flatten61_phi_fu_281_p4 = add_ln345_reg_1408;
    end else begin
        ap_phi_mux_indvar_flatten61_phi_fu_281_p4 = indvar_flatten61_reg_277;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp3_stage0) & (ap_enable_reg_pp3_iter1 == 1'b1) & (icmp_ln360_reg_1491 == 1'd0) & (1'b0 == ap_block_pp3_stage0))) begin
        ap_phi_mux_indvar_flatten68_phi_fu_380_p4 = select_ln364_reg_1554;
    end else begin
        ap_phi_mux_indvar_flatten68_phi_fu_380_p4 = indvar_flatten68_reg_376;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln330_reg_1347 == 1'd0) & (1'b0 == ap_block_pp1_stage0))) begin
        ap_phi_mux_indvar_flatten6_phi_fu_248_p4 = select_ln332_reg_1379;
    end else begin
        ap_phi_mux_indvar_flatten6_phi_fu_248_p4 = indvar_flatten6_reg_244;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln317_reg_1318 == 1'd0) & (1'b0 == ap_block_pp0_stage0))) begin
        ap_phi_mux_indvar_flatten_phi_fu_193_p4 = add_ln317_reg_1322;
    end else begin
        ap_phi_mux_indvar_flatten_phi_fu_193_p4 = indvar_flatten_reg_189;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp3_stage0) & (ap_enable_reg_pp3_iter1 == 1'b1) & (icmp_ln360_reg_1491 == 1'd0) & (1'b0 == ap_block_pp3_stage0))) begin
        ap_phi_mux_k_0_phi_fu_347_p4 = select_ln360_1_reg_1517;
    end else begin
        ap_phi_mux_k_0_phi_fu_347_p4 = k_0_reg_343;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp3_stage0) & (ap_enable_reg_pp3_iter1 == 1'b1) & (icmp_ln360_reg_1491 == 1'd0) & (1'b0 == ap_block_pp3_stage0))) begin
        ap_phi_mux_l_0_phi_fu_369_p4 = select_ln362_1_reg_1564;
    end else begin
        ap_phi_mux_l_0_phi_fu_369_p4 = l_0_reg_365;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln330_reg_1347 == 1'd0) & (1'b0 == ap_block_pp1_stage0))) begin
        ap_phi_mux_m1_0_phi_fu_259_p4 = select_ln338_1_reg_1369;
    end else begin
        ap_phi_mux_m1_0_phi_fu_259_p4 = m1_0_reg_255;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp2_stage0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (icmp_ln345_reg_1404 == 1'd0) & (1'b0 == ap_block_pp2_stage0))) begin
        ap_phi_mux_m4_0_phi_fu_314_p4 = select_ln353_1_reg_1446;
    end else begin
        ap_phi_mux_m4_0_phi_fu_314_p4 = m4_0_reg_310;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp3_stage0) & (ap_enable_reg_pp3_iter1 == 1'b1) & (icmp_ln360_reg_1491 == 1'd0) & (1'b0 == ap_block_pp3_stage0))) begin
        ap_phi_mux_m6_0_phi_fu_391_p4 = select_ln370_1_reg_1570;
    end else begin
        ap_phi_mux_m6_0_phi_fu_391_p4 = m6_0_reg_387;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln317_reg_1318 == 1'd0) & (1'b0 == ap_block_pp0_stage0))) begin
        ap_phi_mux_m_0_phi_fu_204_p4 = select_ln323_1_reg_1332;
    end else begin
        ap_phi_mux_m_0_phi_fu_204_p4 = m_0_reg_200;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln330_reg_1347 == 1'd0) & (1'b0 == ap_block_pp1_stage0))) begin
        ap_phi_mux_n2_0_phi_fu_270_p4 = n_1_reg_1389;
    end else begin
        ap_phi_mux_n2_0_phi_fu_270_p4 = n2_0_reg_266;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp2_stage0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (icmp_ln345_reg_1404 == 1'd0) & (1'b0 == ap_block_pp2_stage0))) begin
        ap_phi_mux_n5_0_phi_fu_325_p4 = n_2_reg_1471;
    end else begin
        ap_phi_mux_n5_0_phi_fu_325_p4 = n5_0_reg_321;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp3_stage0) & (ap_enable_reg_pp3_iter1 == 1'b1) & (icmp_ln360_reg_1491 == 1'd0) & (1'b0 == ap_block_pp3_stage0))) begin
        ap_phi_mux_n7_0_phi_fu_402_p4 = n_3_reg_1601;
    end else begin
        ap_phi_mux_n7_0_phi_fu_402_p4 = n7_0_reg_398;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln317_reg_1318 == 1'd0) & (1'b0 == ap_block_pp0_stage0))) begin
        ap_phi_mux_n_0_phi_fu_215_p4 = n_reg_1342;
    end else begin
        ap_phi_mux_n_0_phi_fu_215_p4 = n_0_reg_211;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp2_stage0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (icmp_ln345_reg_1404 == 1'd0) & (1'b0 == ap_block_pp2_stage0))) begin
        ap_phi_mux_v3_0_phi_fu_292_p4 = select_ln345_1_reg_1424;
    end else begin
        ap_phi_mux_v3_0_phi_fu_292_p4 = v3_0_reg_288;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln330_reg_1347 == 1'd0) & (1'b0 == ap_block_pp1_stage0))) begin
        ap_phi_mux_v_0_phi_fu_237_p4 = select_ln330_1_reg_1356;
    end else begin
        ap_phi_mux_v_0_phi_fu_237_p4 = v_0_reg_233;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state188)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp3_iter7 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage5) & (1'b0 == ap_block_pp3_stage5))) begin
        dct_r_address0 = dct_addr_3_reg_1586_pp3_iter7_reg;
    end else if (((1'b1 == ap_CS_fsm_pp3_stage6) & (ap_enable_reg_pp3_iter6 == 1'b1) & (1'b0 == ap_block_pp3_stage6))) begin
        dct_r_address0 = dct_addr_3_reg_1586_pp3_iter6_reg;
    end else if (((1'b1 == ap_CS_fsm_pp2_stage7) & (ap_enable_reg_pp2_iter6 == 1'b1) & (1'b0 == ap_block_pp2_stage7))) begin
        dct_r_address0 = dct_addr_2_reg_1476;
    end else if (((1'b1 == ap_CS_fsm_pp2_stage0) & (ap_enable_reg_pp2_iter6 == 1'b1) & (1'b0 == ap_block_pp2_stage0))) begin
        dct_r_address0 = zext_ln353_1_fu_979_p1;
    end else if (((1'b1 == ap_CS_fsm_pp1_stage6) & (ap_enable_reg_pp1_iter6 == 1'b1) & (1'b0 == ap_block_pp1_stage6))) begin
        dct_r_address0 = dct_addr_1_reg_1394;
    end else if (((ap_enable_reg_pp1_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage7) & (1'b0 == ap_block_pp1_stage7))) begin
        dct_r_address0 = zext_ln330_1_fu_767_p1;
    end else if ((((1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage3)) | ((1'b1 == ap_CS_fsm_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage4)))) begin
        dct_r_address0 = 64'd0;
    end else begin
        dct_r_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage3_11001)) | ((1'b0 == ap_block_pp1_stage7_11001) & (ap_enable_reg_pp1_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage7)) | ((1'b0 == ap_block_pp3_stage6_11001) & (1'b1 == ap_CS_fsm_pp3_stage6) & (ap_enable_reg_pp3_iter6 == 1'b1)) | ((1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0) & (ap_enable_reg_pp2_iter6 == 1'b1)) | ((1'b0 == ap_block_pp2_stage7_11001) & (1'b1 == ap_CS_fsm_pp2_stage7) & (ap_enable_reg_pp2_iter6 == 1'b1)) | ((1'b0 == ap_block_pp1_stage6_11001) & (1'b1 == ap_CS_fsm_pp1_stage6) & (ap_enable_reg_pp1_iter6 == 1'b1)) | ((1'b0 == ap_block_pp3_stage5_11001) & (ap_enable_reg_pp3_iter7 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage5)) | ((1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1)))) begin
        dct_r_ce0 = 1'b1;
    end else begin
        dct_r_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp2_stage7) & (ap_enable_reg_pp2_iter6 == 1'b1) & (1'b0 == ap_block_pp2_stage7)) | ((1'b1 == ap_CS_fsm_pp1_stage6) & (ap_enable_reg_pp1_iter6 == 1'b1) & (1'b0 == ap_block_pp1_stage6)) | ((ap_enable_reg_pp3_iter7 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage5) & (1'b0 == ap_block_pp3_stage5)))) begin
        dct_r_d0 = grp_fu_439_p1;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage3))) begin
        dct_r_d0 = grp_fu_426_p2;
    end else begin
        dct_r_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage3_11001) & (icmp_ln317_reg_1318_pp0_iter1_reg == 1'd0)) | ((1'b0 == ap_block_pp2_stage7_11001) & (1'b1 == ap_CS_fsm_pp2_stage7) & (ap_enable_reg_pp2_iter6 == 1'b1) & (icmp_ln345_reg_1404_pp2_iter6_reg == 1'd0)) | ((1'b0 == ap_block_pp1_stage6_11001) & (1'b1 == ap_CS_fsm_pp1_stage6) & (ap_enable_reg_pp1_iter6 == 1'b1) & (icmp_ln330_reg_1347_pp1_iter6_reg == 1'd0)) | ((1'b0 == ap_block_pp3_stage5_11001) & (ap_enable_reg_pp3_iter7 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage5) & (icmp_ln360_reg_1491_pp3_iter7_reg == 1'd0)))) begin
        dct_r_we0 = 1'b1;
    end else begin
        dct_r_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp3_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage2) & (1'b0 == ap_block_pp3_stage2))) begin
        grp_fu_432_p1 = 32'd1048576000;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
        grp_fu_432_p1 = 32'd1040187392;
    end else begin
        grp_fu_432_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp3_stage5) & (ap_enable_reg_pp3_iter4 == 1'b1) & (1'b0 == ap_block_pp3_stage5))) begin
        grp_fu_443_p0 = grp_fu_432_p2;
    end else if ((((ap_enable_reg_pp3_iter6 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage7) & (1'b0 == ap_block_pp3_stage7)) | ((ap_enable_reg_pp1_iter6 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0)))) begin
        grp_fu_443_p0 = dct_r_q0;
    end else if ((((ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage1) & (1'b0 == ap_block_pp2_stage1)) | ((ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage1) & (1'b0 == ap_block_pp1_stage1)))) begin
        grp_fu_443_p0 = ori_q0;
    end else begin
        grp_fu_443_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp2_stage2) & (ap_enable_reg_pp2_iter6 == 1'b1) & (1'b0 == ap_block_pp2_stage2))) begin
        grp_fu_453_p0 = grp_fu_448_p1;
    end else if ((((ap_enable_reg_pp3_iter7 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0) & (1'b0 == ap_block_pp3_stage0)) | ((ap_enable_reg_pp1_iter6 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage1) & (1'b0 == ap_block_pp1_stage1)))) begin
        grp_fu_453_p0 = grp_fu_443_p1;
    end else begin
        grp_fu_453_p0 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp3_iter7 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0) & (1'b0 == ap_block_pp3_stage0))) begin
        grp_fu_453_p1 = tmp_72_reg_1616;
    end else if ((((1'b1 == ap_CS_fsm_pp2_stage2) & (ap_enable_reg_pp2_iter6 == 1'b1) & (1'b0 == ap_block_pp2_stage2)) | ((ap_enable_reg_pp1_iter6 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage1) & (1'b0 == ap_block_pp1_stage1)))) begin
        grp_fu_453_p1 = reg_518;
    end else begin
        grp_fu_453_p1 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp3_iter6 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage2) & (1'b0 == ap_block_pp3_stage2))) begin
        grp_fu_460_p0 = reg_518;
    end else if (((ap_enable_reg_pp3_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage4) & (1'b0 == ap_block_pp3_stage4))) begin
        grp_fu_460_p0 = reg_491;
    end else if (((ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage5) & (1'b0 == ap_block_pp3_stage5))) begin
        grp_fu_460_p0 = reg_501;
    end else if (((1'b1 == ap_CS_fsm_pp3_stage0) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b0 == ap_block_pp3_stage0))) begin
        grp_fu_460_p0 = tmp_70_reg_1596;
    end else if (((ap_enable_reg_pp2_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage4) & (1'b0 == ap_block_pp2_stage4))) begin
        grp_fu_460_p0 = reg_501_pp2_iter4_reg;
    end else if ((((ap_enable_reg_pp3_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage7) & (1'b0 == ap_block_pp3_stage7)) | ((1'b1 == ap_CS_fsm_pp2_stage7) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b0 == ap_block_pp2_stage7)))) begin
        grp_fu_460_p0 = reg_496;
    end else if (((ap_enable_reg_pp1_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage3) & (1'b0 == ap_block_pp1_stage3))) begin
        grp_fu_460_p0 = reg_501_pp1_iter4_reg;
    end else if ((((ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage5) & (1'b0 == ap_block_pp2_stage5)) | ((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage4) & (1'b0 == ap_block_pp1_stage4)) | ((ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage6) & (1'b0 == ap_block_pp3_stage6)))) begin
        grp_fu_460_p0 = reg_507;
    end else if (((1'b1 == ap_CS_fsm_pp1_stage6) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b0 == ap_block_pp1_stage6))) begin
        grp_fu_460_p0 = grp_fu_468_p1;
    end else if ((((1'b1 == ap_CS_fsm_pp2_stage2) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b0 == ap_block_pp2_stage2)) | ((1'b1 == ap_CS_fsm_pp1_stage2) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b0 == ap_block_pp1_stage2)))) begin
        grp_fu_460_p0 = grp_fu_443_p1;
    end else begin
        grp_fu_460_p0 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp3_iter6 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage2) & (1'b0 == ap_block_pp3_stage2))) begin
        grp_fu_460_p1 = tmp_i_i3_reg_1611;
    end else if ((((ap_enable_reg_pp2_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage4) & (1'b0 == ap_block_pp2_stage4)) | ((ap_enable_reg_pp1_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage3) & (1'b0 == ap_block_pp1_stage3)) | ((ap_enable_reg_pp3_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage4) & (1'b0 == ap_block_pp3_stage4)))) begin
        grp_fu_460_p1 = reg_513;
    end else if ((((ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage5) & (1'b0 == ap_block_pp2_stage5)) | ((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage4) & (1'b0 == ap_block_pp1_stage4)) | ((ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage6) & (1'b0 == ap_block_pp3_stage6)) | ((ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage5) & (1'b0 == ap_block_pp3_stage5)))) begin
        grp_fu_460_p1 = 64'd4589168020290535424;
    end else if ((((1'b1 == ap_CS_fsm_pp3_stage0) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b0 == ap_block_pp3_stage0)) | ((ap_enable_reg_pp3_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage7) & (1'b0 == ap_block_pp3_stage7)) | ((1'b1 == ap_CS_fsm_pp2_stage7) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b0 == ap_block_pp2_stage7)) | ((1'b1 == ap_CS_fsm_pp1_stage6) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b0 == ap_block_pp1_stage6)))) begin
        grp_fu_460_p1 = 64'd4614256656552045864;
    end else if ((((1'b1 == ap_CS_fsm_pp2_stage2) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b0 == ap_block_pp2_stage2)) | ((1'b1 == ap_CS_fsm_pp1_stage2) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b0 == ap_block_pp1_stage2)))) begin
        grp_fu_460_p1 = 64'd4595537071963047258;
    end else begin
        grp_fu_460_p1 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp3_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage2) & (1'b0 == ap_block_pp3_stage2))) begin
        grp_fu_468_p0 = zext_ln370_7_fu_1278_p1;
    end else if (((1'b1 == ap_CS_fsm_pp3_stage1) & (ap_enable_reg_pp3_iter0 == 1'b1) & (1'b0 == ap_block_pp3_stage1))) begin
        grp_fu_468_p0 = zext_ln370_4_fu_1221_p1;
    end else if (((ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage1) & (1'b0 == ap_block_pp2_stage1))) begin
        grp_fu_468_p0 = zext_ln353_4_fu_956_p1;
    end else if (((ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage1) & (1'b0 == ap_block_pp1_stage1))) begin
        grp_fu_468_p0 = zext_ln338_3_fu_757_p1;
    end else begin
        grp_fu_468_p0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp3_stage3) & (ap_enable_reg_pp3_iter2 == 1'b1) & (icmp_ln360_reg_1491_pp3_iter2_reg == 1'd0) & (1'b0 == ap_block_pp3_stage3)) | ((ap_enable_reg_pp3_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage4) & (icmp_ln360_reg_1491_pp3_iter2_reg == 1'd0) & (1'b0 == ap_block_pp3_stage4)))) begin
        grp_sin_or_cos_double_s_fu_409_t_in = reg_501;
    end else if ((((1'b1 == ap_CS_fsm_pp2_stage3) & (ap_enable_reg_pp2_iter2 == 1'b1) & (icmp_ln345_reg_1404_pp2_iter2_reg == 1'd0) & (1'b0 == ap_block_pp2_stage3)) | ((ap_enable_reg_pp1_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage2) & (icmp_ln330_reg_1347_pp1_iter2_reg == 1'd0) & (1'b0 == ap_block_pp1_stage2)))) begin
        grp_sin_or_cos_double_s_fu_409_t_in = reg_507;
    end else begin
        grp_sin_or_cos_double_s_fu_409_t_in = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp3_stage1) & (ap_enable_reg_pp3_iter4 == 1'b1) & (1'b0 == ap_block_pp3_stage1))) begin
        ori_address0 = zext_ln370_8_fu_1308_p1;
    end else if (((1'b1 == ap_CS_fsm_pp2_stage0) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b0 == ap_block_pp2_stage0))) begin
        ori_address0 = zext_ln353_6_fu_905_p1;
    end else if (((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b0 == ap_block_pp1_stage0))) begin
        ori_address0 = zext_ln338_1_fu_714_p1;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        ori_address0 = zext_ln323_1_fu_596_p1;
    end else begin
        ori_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp3_stage1_11001) & (1'b1 == ap_CS_fsm_pp3_stage1) & (ap_enable_reg_pp3_iter4 == 1'b1)) | ((1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0) & (ap_enable_reg_pp2_iter0 == 1'b1)) | ((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1)))) begin
        ori_ce0 = 1'b1;
    end else begin
        ori_ce0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((ap_enable_reg_pp0_iter1 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (icmp_ln317_fu_534_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else if (((ap_enable_reg_pp0_iter1 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (icmp_ln317_fu_534_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state12;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_pp0_stage2 : begin
            if ((1'b0 == ap_block_pp0_stage2_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end
        end
        ap_ST_fsm_pp0_stage3 : begin
            if ((~((1'b0 == ap_block_pp0_stage3_subdone) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter1 == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b0)) & (1'b0 == ap_block_pp0_stage3_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end else if (((1'b0 == ap_block_pp0_stage3_subdone) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter1 == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
                ap_NS_fsm = ap_ST_fsm_state12;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end
        end
        ap_ST_fsm_pp0_stage4 : begin
            if ((1'b0 == ap_block_pp0_stage4_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end
        end
        ap_ST_fsm_pp0_stage5 : begin
            if ((1'b0 == ap_block_pp0_stage5_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            end
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_pp1_stage0;
        end
        ap_ST_fsm_pp1_stage0 : begin
            if ((~((1'b0 == ap_block_pp1_stage0_subdone) & (icmp_ln330_fu_606_p2 == 1'd1) & (ap_enable_reg_pp1_iter1 == 1'b0) & (ap_enable_reg_pp1_iter0 == 1'b1)) & (1'b0 == ap_block_pp1_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage1;
            end else if (((1'b0 == ap_block_pp1_stage0_subdone) & (icmp_ln330_fu_606_p2 == 1'd1) & (ap_enable_reg_pp1_iter1 == 1'b0) & (ap_enable_reg_pp1_iter0 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state68;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end
        end
        ap_ST_fsm_pp1_stage1 : begin
            if ((1'b0 == ap_block_pp1_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage1;
            end
        end
        ap_ST_fsm_pp1_stage2 : begin
            if ((1'b0 == ap_block_pp1_stage2_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage2;
            end
        end
        ap_ST_fsm_pp1_stage3 : begin
            if ((1'b0 == ap_block_pp1_stage3_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage3;
            end
        end
        ap_ST_fsm_pp1_stage4 : begin
            if ((1'b0 == ap_block_pp1_stage4_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage4;
            end
        end
        ap_ST_fsm_pp1_stage5 : begin
            if ((1'b0 == ap_block_pp1_stage5_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage5;
            end
        end
        ap_ST_fsm_pp1_stage6 : begin
            if ((~((1'b0 == ap_block_pp1_stage6_subdone) & (ap_enable_reg_pp1_iter5 == 1'b0) & (1'b1 == ap_CS_fsm_pp1_stage6) & (ap_enable_reg_pp1_iter6 == 1'b1)) & (1'b0 == ap_block_pp1_stage6_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage7;
            end else if (((1'b0 == ap_block_pp1_stage6_subdone) & (ap_enable_reg_pp1_iter5 == 1'b0) & (1'b1 == ap_CS_fsm_pp1_stage6) & (ap_enable_reg_pp1_iter6 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state68;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage6;
            end
        end
        ap_ST_fsm_pp1_stage7 : begin
            if ((1'b0 == ap_block_pp1_stage7_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage7;
            end
        end
        ap_ST_fsm_state68 : begin
            ap_NS_fsm = ap_ST_fsm_pp2_stage0;
        end
        ap_ST_fsm_pp2_stage0 : begin
            if ((~((1'b0 == ap_block_pp2_stage0_subdone) & (icmp_ln345_fu_797_p2 == 1'd1) & (ap_enable_reg_pp2_iter1 == 1'b0) & (ap_enable_reg_pp2_iter0 == 1'b1)) & (1'b0 == ap_block_pp2_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage1;
            end else if (((1'b0 == ap_block_pp2_stage0_subdone) & (icmp_ln345_fu_797_p2 == 1'd1) & (ap_enable_reg_pp2_iter1 == 1'b0) & (ap_enable_reg_pp2_iter0 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state125;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            end
        end
        ap_ST_fsm_pp2_stage1 : begin
            if ((1'b0 == ap_block_pp2_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage1;
            end
        end
        ap_ST_fsm_pp2_stage2 : begin
            if ((1'b0 == ap_block_pp2_stage2_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage2;
            end
        end
        ap_ST_fsm_pp2_stage3 : begin
            if ((1'b0 == ap_block_pp2_stage3_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage3;
            end
        end
        ap_ST_fsm_pp2_stage4 : begin
            if ((1'b0 == ap_block_pp2_stage4_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage4;
            end
        end
        ap_ST_fsm_pp2_stage5 : begin
            if ((1'b0 == ap_block_pp2_stage5_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage5;
            end
        end
        ap_ST_fsm_pp2_stage6 : begin
            if ((1'b0 == ap_block_pp2_stage6_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage6;
            end
        end
        ap_ST_fsm_pp2_stage7 : begin
            if ((~((1'b0 == ap_block_pp2_stage7_subdone) & (ap_enable_reg_pp2_iter5 == 1'b0) & (1'b1 == ap_CS_fsm_pp2_stage7) & (ap_enable_reg_pp2_iter6 == 1'b1)) & (1'b0 == ap_block_pp2_stage7_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            end else if (((1'b0 == ap_block_pp2_stage7_subdone) & (ap_enable_reg_pp2_iter5 == 1'b0) & (1'b1 == ap_CS_fsm_pp2_stage7) & (ap_enable_reg_pp2_iter6 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state125;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage7;
            end
        end
        ap_ST_fsm_state125 : begin
            ap_NS_fsm = ap_ST_fsm_pp3_stage0;
        end
        ap_ST_fsm_pp3_stage0 : begin
            if ((~((1'b0 == ap_block_pp3_stage0_subdone) & (icmp_ln360_fu_1010_p2 == 1'd1) & (ap_enable_reg_pp3_iter1 == 1'b0) & (ap_enable_reg_pp3_iter0 == 1'b1)) & (1'b0 == ap_block_pp3_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp3_stage1;
            end else if (((1'b0 == ap_block_pp3_stage0_subdone) & (icmp_ln360_fu_1010_p2 == 1'd1) & (ap_enable_reg_pp3_iter1 == 1'b0) & (ap_enable_reg_pp3_iter0 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state188;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp3_stage0;
            end
        end
        ap_ST_fsm_pp3_stage1 : begin
            if ((1'b0 == ap_block_pp3_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp3_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp3_stage1;
            end
        end
        ap_ST_fsm_pp3_stage2 : begin
            if ((1'b0 == ap_block_pp3_stage2_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp3_stage3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp3_stage2;
            end
        end
        ap_ST_fsm_pp3_stage3 : begin
            if ((1'b0 == ap_block_pp3_stage3_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp3_stage4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp3_stage3;
            end
        end
        ap_ST_fsm_pp3_stage4 : begin
            if ((1'b0 == ap_block_pp3_stage4_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp3_stage5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp3_stage4;
            end
        end
        ap_ST_fsm_pp3_stage5 : begin
            if ((~((ap_enable_reg_pp3_iter6 == 1'b0) & (ap_enable_reg_pp3_iter7 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage5) & (1'b0 == ap_block_pp3_stage5_subdone)) & (1'b0 == ap_block_pp3_stage5_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp3_stage6;
            end else if (((ap_enable_reg_pp3_iter6 == 1'b0) & (ap_enable_reg_pp3_iter7 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage5) & (1'b0 == ap_block_pp3_stage5_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_state188;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp3_stage5;
            end
        end
        ap_ST_fsm_pp3_stage6 : begin
            if ((1'b0 == ap_block_pp3_stage6_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp3_stage7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp3_stage6;
            end
        end
        ap_ST_fsm_pp3_stage7 : begin
            if ((1'b0 == ap_block_pp3_stage7_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp3_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp3_stage7;
            end
        end
        ap_ST_fsm_state188 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln317_fu_540_p2 = (ap_phi_mux_indvar_flatten_phi_fu_193_p4 + 7'd1);

assign add_ln323_fu_590_p2 = (zext_ln323_fu_586_p1 + zext_ln321_fu_582_p1);

assign add_ln330_fu_612_p2 = (ap_phi_mux_indvar_flatten22_phi_fu_226_p4 + 9'd1);

assign add_ln332_1_fu_719_p2 = (8'd1 + ap_phi_mux_indvar_flatten6_phi_fu_248_p4);

assign add_ln338_fu_708_p2 = (zext_ln338_fu_704_p1 + zext_ln332_fu_700_p1);

assign add_ln345_fu_803_p2 = (9'd1 + ap_phi_mux_indvar_flatten61_phi_fu_281_p4);

assign add_ln347_1_fu_910_p2 = (8'd1 + ap_phi_mux_indvar_flatten29_phi_fu_303_p4);

assign add_ln353_fu_899_p2 = (zext_ln353_5_fu_895_p1 + zext_ln353_2_fu_891_p1);

assign add_ln360_fu_1016_p2 = (12'd1 + ap_phi_mux_indvar_flatten142_phi_fu_336_p4);

assign add_ln362_1_fu_1152_p2 = (10'd1 + ap_phi_mux_indvar_flatten100_phi_fu_358_p4);

assign add_ln364_1_fu_1138_p2 = (8'd1 + ap_phi_mux_indvar_flatten68_phi_fu_380_p4);

assign add_ln370_1_fu_1302_p2 = (zext_ln370_2_fu_1295_p1 + zext_ln370_5_fu_1299_p1);

assign add_ln370_fu_1246_p2 = (zext_ln362_fu_1239_p1 + zext_ln362_1_fu_1243_p1);

assign and_ln330_fu_658_p2 = (xor_ln330_fu_646_p2 & icmp_ln335_fu_652_p2);

assign and_ln345_fu_849_p2 = (xor_ln345_fu_837_p2 & icmp_ln350_fu_843_p2);

assign and_ln360_1_fu_1074_p2 = (xor_ln360_fu_1050_p2 & icmp_ln364_fu_1068_p2);

assign and_ln360_fu_1062_p2 = (xor_ln360_fu_1050_p2 & icmp_ln367_fu_1056_p2);

assign and_ln362_fu_1106_p2 = (or_ln362_1_fu_1100_p2 & and_ln360_fu_1062_p2);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_pp0_stage3 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_pp0_stage4 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_pp0_stage5 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_pp1_stage0 = ap_CS_fsm[32'd8];

assign ap_CS_fsm_pp1_stage1 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_pp1_stage2 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_pp1_stage3 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_pp1_stage4 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_pp1_stage5 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_pp1_stage6 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_pp1_stage7 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_pp2_stage0 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_pp2_stage1 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_pp2_stage2 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_pp2_stage3 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_pp2_stage4 = ap_CS_fsm[32'd21];

assign ap_CS_fsm_pp2_stage5 = ap_CS_fsm[32'd22];

assign ap_CS_fsm_pp2_stage6 = ap_CS_fsm[32'd23];

assign ap_CS_fsm_pp2_stage7 = ap_CS_fsm[32'd24];

assign ap_CS_fsm_pp3_stage0 = ap_CS_fsm[32'd26];

assign ap_CS_fsm_pp3_stage1 = ap_CS_fsm[32'd27];

assign ap_CS_fsm_pp3_stage2 = ap_CS_fsm[32'd28];

assign ap_CS_fsm_pp3_stage3 = ap_CS_fsm[32'd29];

assign ap_CS_fsm_pp3_stage4 = ap_CS_fsm[32'd30];

assign ap_CS_fsm_pp3_stage5 = ap_CS_fsm[32'd31];

assign ap_CS_fsm_pp3_stage6 = ap_CS_fsm[32'd32];

assign ap_CS_fsm_pp3_stage7 = ap_CS_fsm[32'd33];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state125 = ap_CS_fsm[32'd25];

assign ap_CS_fsm_state188 = ap_CS_fsm[32'd34];

assign ap_CS_fsm_state68 = ap_CS_fsm[32'd16];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage1_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage2 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage2_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage2_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage3 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage3_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage3_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage4 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage4_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage5 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage5_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage5_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage6 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage6_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage6_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage7 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage7_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage7_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage1_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage2 = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage2_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage2_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage3 = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage3_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage3_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage4 = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage4_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage4_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage5 = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage5_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage6 = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage6_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage6_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage7 = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage7_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage7_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp3_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp3_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp3_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp3_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp3_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp3_stage1_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp3_stage2 = ~(1'b1 == 1'b1);

assign ap_block_pp3_stage2_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp3_stage2_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp3_stage3 = ~(1'b1 == 1'b1);

assign ap_block_pp3_stage3_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp3_stage3_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp3_stage4 = ~(1'b1 == 1'b1);

assign ap_block_pp3_stage4_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp3_stage4_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp3_stage5 = ~(1'b1 == 1'b1);

assign ap_block_pp3_stage5_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp3_stage5_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp3_stage6 = ~(1'b1 == 1'b1);

assign ap_block_pp3_stage6_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp3_stage6_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp3_stage7 = ~(1'b1 == 1'b1);

assign ap_block_pp3_stage7_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp3_stage7_subdone = ~(1'b1 == 1'b1);

assign ap_block_state100_pp2_stage7_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state101_pp2_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state102_pp2_stage1_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state103_pp2_stage2_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state104_pp2_stage3_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state105_pp2_stage4_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state106_pp2_stage5_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state107_pp2_stage6_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state108_pp2_stage7_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state109_pp2_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state10_pp0_stage2_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state110_pp2_stage1_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state111_pp2_stage2_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state112_pp2_stage3_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state113_pp2_stage4_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state114_pp2_stage5_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state115_pp2_stage6_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state116_pp2_stage7_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state117_pp2_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state118_pp2_stage1_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state119_pp2_stage2_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage3_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state120_pp2_stage3_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state121_pp2_stage4_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state122_pp2_stage5_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state123_pp2_stage6_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state124_pp2_stage7_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state126_pp3_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state127_pp3_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state128_pp3_stage2_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state129_pp3_stage3_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state130_pp3_stage4_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state131_pp3_stage5_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state132_pp3_stage6_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state133_pp3_stage7_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state134_pp3_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state135_pp3_stage1_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state136_pp3_stage2_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state137_pp3_stage3_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state138_pp3_stage4_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state139_pp3_stage5_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp1_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state140_pp3_stage6_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state141_pp3_stage7_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state142_pp3_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state143_pp3_stage1_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state144_pp3_stage2_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state145_pp3_stage3_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state146_pp3_stage4_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state147_pp3_stage5_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state148_pp3_stage6_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state149_pp3_stage7_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp1_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state150_pp3_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state151_pp3_stage1_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state152_pp3_stage2_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state153_pp3_stage3_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state154_pp3_stage4_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state155_pp3_stage5_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state156_pp3_stage6_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state157_pp3_stage7_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state158_pp3_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state159_pp3_stage1_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp1_stage2_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state160_pp3_stage2_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state161_pp3_stage3_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state162_pp3_stage4_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state163_pp3_stage5_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state164_pp3_stage6_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state165_pp3_stage7_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state166_pp3_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state167_pp3_stage1_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state168_pp3_stage2_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state169_pp3_stage3_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp1_stage3_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state170_pp3_stage4_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state171_pp3_stage5_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state172_pp3_stage6_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state173_pp3_stage7_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state174_pp3_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state175_pp3_stage1_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state176_pp3_stage2_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state177_pp3_stage3_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state178_pp3_stage4_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state179_pp3_stage5_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp1_stage4_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state180_pp3_stage6_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state181_pp3_stage7_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state182_pp3_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state183_pp3_stage1_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state184_pp3_stage2_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state185_pp3_stage3_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state186_pp3_stage4_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state187_pp3_stage5_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp1_stage5_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp1_stage6_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state20_pp1_stage7_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state21_pp1_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state22_pp1_stage1_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state23_pp1_stage2_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state24_pp1_stage3_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state25_pp1_stage4_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state26_pp1_stage5_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state27_pp1_stage6_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state28_pp1_stage7_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state29_pp1_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state30_pp1_stage1_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state31_pp1_stage2_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state32_pp1_stage3_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state33_pp1_stage4_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state34_pp1_stage5_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state35_pp1_stage6_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state36_pp1_stage7_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state37_pp1_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state38_pp1_stage1_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state39_pp1_stage2_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state40_pp1_stage3_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state41_pp1_stage4_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state42_pp1_stage5_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state43_pp1_stage6_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state44_pp1_stage7_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state45_pp1_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state46_pp1_stage1_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state47_pp1_stage2_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state48_pp1_stage3_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state49_pp1_stage4_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage2_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state50_pp1_stage5_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state51_pp1_stage6_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state52_pp1_stage7_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state53_pp1_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state54_pp1_stage1_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state55_pp1_stage2_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state56_pp1_stage3_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state57_pp1_stage4_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state58_pp1_stage5_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state59_pp1_stage6_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage3_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state60_pp1_stage7_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state61_pp1_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state62_pp1_stage1_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state63_pp1_stage2_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state64_pp1_stage3_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state65_pp1_stage4_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state66_pp1_stage5_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state67_pp1_stage6_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state69_pp2_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage4_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state70_pp2_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state71_pp2_stage2_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state72_pp2_stage3_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state73_pp2_stage4_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state74_pp2_stage5_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state75_pp2_stage6_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state76_pp2_stage7_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state77_pp2_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state78_pp2_stage1_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state79_pp2_stage2_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage5_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state80_pp2_stage3_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state81_pp2_stage4_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state82_pp2_stage5_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state83_pp2_stage6_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state84_pp2_stage7_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state85_pp2_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state86_pp2_stage1_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state87_pp2_stage2_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state88_pp2_stage3_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state89_pp2_stage4_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state90_pp2_stage5_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state91_pp2_stage6_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state92_pp2_stage7_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state93_pp2_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state94_pp2_stage1_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state95_pp2_stage2_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state96_pp2_stage3_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state97_pp2_stage4_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state98_pp2_stage5_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state99_pp2_stage6_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage1_iter1 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_pp1 = (ap_idle_pp1 ^ 1'b1);

assign ap_enable_pp2 = (ap_idle_pp2 ^ 1'b1);

assign ap_enable_pp3 = (ap_idle_pp3 ^ 1'b1);

assign grp_sin_or_cos_double_s_fu_409_ap_start = grp_sin_or_cos_double_s_fu_409_ap_start_reg;

assign icmp_ln317_fu_534_p2 = ((ap_phi_mux_indvar_flatten_phi_fu_193_p4 == 7'd64) ? 1'b1 : 1'b0);

assign icmp_ln320_fu_552_p2 = ((ap_phi_mux_n_0_phi_fu_215_p4 == 4'd8) ? 1'b1 : 1'b0);

assign icmp_ln330_fu_606_p2 = ((ap_phi_mux_indvar_flatten22_phi_fu_226_p4 == 9'd448) ? 1'b1 : 1'b0);

assign icmp_ln332_fu_624_p2 = ((ap_phi_mux_indvar_flatten6_phi_fu_248_p4 == 8'd64) ? 1'b1 : 1'b0);

assign icmp_ln335_fu_652_p2 = ((ap_phi_mux_n2_0_phi_fu_270_p4 == 4'd8) ? 1'b1 : 1'b0);

assign icmp_ln345_fu_797_p2 = ((ap_phi_mux_indvar_flatten61_phi_fu_281_p4 == 9'd448) ? 1'b1 : 1'b0);

assign icmp_ln347_fu_815_p2 = ((ap_phi_mux_indvar_flatten29_phi_fu_303_p4 == 8'd64) ? 1'b1 : 1'b0);

assign icmp_ln350_fu_843_p2 = ((ap_phi_mux_n5_0_phi_fu_325_p4 == 4'd8) ? 1'b1 : 1'b0);

assign icmp_ln360_fu_1010_p2 = ((ap_phi_mux_indvar_flatten142_phi_fu_336_p4 == 12'd3136) ? 1'b1 : 1'b0);

assign icmp_ln362_fu_1028_p2 = ((ap_phi_mux_indvar_flatten100_phi_fu_358_p4 == 10'd448) ? 1'b1 : 1'b0);

assign icmp_ln364_fu_1068_p2 = ((ap_phi_mux_indvar_flatten68_phi_fu_380_p4 == 8'd64) ? 1'b1 : 1'b0);

assign icmp_ln367_fu_1056_p2 = ((ap_phi_mux_n7_0_phi_fu_402_p4 == 4'd8) ? 1'b1 : 1'b0);

assign k_fu_1022_p2 = (4'd1 + ap_phi_mux_k_0_phi_fu_347_p4);

assign l_fu_1170_p2 = (4'd1 + select_ln360_reg_1511);

assign m_14_fu_664_p2 = (4'd1 + select_ln330_fu_630_p3);

assign m_15_fu_855_p2 = (4'd1 + select_ln345_fu_821_p3);

assign m_16_fu_1112_p2 = (4'd1 + select_ln362_fu_1086_p3);

assign m_fu_546_p2 = (ap_phi_mux_m_0_phi_fu_204_p4 + 4'd1);

assign mul_ln338_fu_751_p0 = mul_ln338_fu_751_p00;

assign mul_ln338_fu_751_p00 = select_ln330_1_reg_1356;

assign mul_ln338_fu_751_p1 = mul_ln338_fu_751_p10;

assign mul_ln338_fu_751_p10 = or_ln338_fu_741_p2;

assign mul_ln338_fu_751_p2 = (mul_ln338_fu_751_p0 * mul_ln338_fu_751_p1);

assign mul_ln353_1_fu_943_p0 = mul_ln353_1_fu_943_p00;

assign mul_ln353_1_fu_943_p00 = select_ln345_1_reg_1424;

assign mul_ln353_1_fu_943_p1 = mul_ln353_1_fu_943_p10;

assign mul_ln353_1_fu_943_p10 = or_ln353_2_fu_933_p2;

assign mul_ln353_1_fu_943_p2 = (mul_ln353_1_fu_943_p0 * mul_ln353_1_fu_943_p1);

assign mul_ln353_fu_791_p0 = mul_ln353_fu_791_p00;

assign mul_ln353_fu_791_p00 = or_ln353_fu_781_p2;

assign mul_ln353_fu_791_p1 = mul_ln353_fu_791_p10;

assign mul_ln353_fu_791_p10 = ap_phi_mux_v3_0_phi_fu_292_p4;

assign mul_ln353_fu_791_p2 = (mul_ln353_fu_791_p0 * mul_ln353_fu_791_p1);

assign mul_ln370_1_fu_1272_p0 = mul_ln370_1_fu_1272_p00;

assign mul_ln370_1_fu_1272_p00 = or_ln370_1_fu_1262_p2;

assign mul_ln370_1_fu_1272_p1 = zext_ln362_1_fu_1243_p1;

assign mul_ln370_1_fu_1272_p2 = (mul_ln370_1_fu_1272_p0 * mul_ln370_1_fu_1272_p1);

assign mul_ln370_2_fu_1208_p0 = mul_ln370_2_fu_1208_p00;

assign mul_ln370_2_fu_1208_p00 = or_ln370_3_fu_1198_p2;

assign mul_ln370_2_fu_1208_p1 = zext_ln360_1_fu_1158_p1;

assign mul_ln370_2_fu_1208_p2 = (mul_ln370_2_fu_1208_p0 * mul_ln370_2_fu_1208_p1);

assign mul_ln370_fu_1004_p0 = mul_ln370_fu_1004_p00;

assign mul_ln370_fu_1004_p00 = or_ln370_fu_994_p2;

assign mul_ln370_fu_1004_p1 = mul_ln370_fu_1004_p10;

assign mul_ln370_fu_1004_p10 = ap_phi_mux_k_0_phi_fu_347_p4;

assign mul_ln370_fu_1004_p2 = (mul_ln370_fu_1004_p0 * mul_ln370_fu_1004_p1);

assign n_1_fu_762_p2 = (4'd1 + select_ln338_reg_1363);

assign n_2_fu_967_p2 = (4'd1 + select_ln353_reg_1441);

assign n_3_fu_1283_p2 = (4'd1 + select_ln370_reg_1547);

assign n_fu_601_p2 = (select_ln323_reg_1327 + 4'd1);

assign or_ln338_1_fu_670_p2 = (icmp_ln332_fu_624_p2 | and_ln330_fu_658_p2);

assign or_ln338_fu_741_p2 = (shl_ln338_fu_736_p2 | 4'd1);

assign or_ln353_1_fu_861_p2 = (icmp_ln347_fu_815_p2 | and_ln345_fu_849_p2);

assign or_ln353_2_fu_933_p2 = (shl_ln353_1_fu_928_p2 | 4'd1);

assign or_ln353_fu_781_p2 = (shl_ln353_fu_775_p2 | 4'd1);

assign or_ln362_1_fu_1100_p2 = (xor_ln362_fu_1094_p2 | icmp_ln362_fu_1028_p2);

assign or_ln362_fu_1080_p2 = (icmp_ln362_fu_1028_p2 | and_ln360_1_fu_1074_p2);

assign or_ln370_1_fu_1262_p2 = (shl_ln370_2_fu_1257_p2 | 4'd1);

assign or_ln370_2_fu_1118_p2 = (and_ln362_fu_1106_p2 | and_ln360_1_fu_1074_p2);

assign or_ln370_3_fu_1198_p2 = (shl_ln370_1_fu_1193_p2 | 4'd1);

assign or_ln370_4_fu_1124_p2 = (or_ln370_2_fu_1118_p2 | icmp_ln362_fu_1028_p2);

assign or_ln370_fu_994_p2 = (shl_ln370_fu_988_p2 | 4'd1);

assign select_ln323_1_fu_566_p3 = ((icmp_ln320_fu_552_p2[0:0] === 1'b1) ? m_fu_546_p2 : ap_phi_mux_m_0_phi_fu_204_p4);

assign select_ln323_fu_558_p3 = ((icmp_ln320_fu_552_p2[0:0] === 1'b1) ? 4'd0 : ap_phi_mux_n_0_phi_fu_215_p4);

assign select_ln330_1_fu_638_p3 = ((icmp_ln332_fu_624_p2[0:0] === 1'b1) ? v_fu_618_p2 : ap_phi_mux_v_0_phi_fu_237_p4);

assign select_ln330_fu_630_p3 = ((icmp_ln332_fu_624_p2[0:0] === 1'b1) ? 4'd0 : ap_phi_mux_m1_0_phi_fu_259_p4);

assign select_ln332_fu_725_p3 = ((icmp_ln332_fu_624_p2[0:0] === 1'b1) ? 8'd1 : add_ln332_1_fu_719_p2);

assign select_ln338_1_fu_684_p3 = ((and_ln330_fu_658_p2[0:0] === 1'b1) ? m_14_fu_664_p2 : select_ln330_fu_630_p3);

assign select_ln338_fu_676_p3 = ((or_ln338_1_fu_670_p2[0:0] === 1'b1) ? 4'd0 : ap_phi_mux_n2_0_phi_fu_270_p4);

assign select_ln345_1_fu_829_p3 = ((icmp_ln347_fu_815_p2[0:0] === 1'b1) ? v_5_fu_809_p2 : ap_phi_mux_v3_0_phi_fu_292_p4);

assign select_ln345_2_fu_922_p3 = ((icmp_ln347_reg_1418[0:0] === 1'b1) ? zext_ln345_2_fu_919_p1 : mul_ln353_reg_1399);

assign select_ln345_fu_821_p3 = ((icmp_ln347_fu_815_p2[0:0] === 1'b1) ? 4'd0 : ap_phi_mux_m4_0_phi_fu_314_p4);

assign select_ln347_fu_961_p3 = ((icmp_ln347_reg_1418[0:0] === 1'b1) ? 8'd1 : add_ln347_1_reg_1456);

assign select_ln353_1_fu_875_p3 = ((and_ln345_fu_849_p2[0:0] === 1'b1) ? m_15_fu_855_p2 : select_ln345_fu_821_p3);

assign select_ln353_2_fu_949_p3 = ((and_ln345_reg_1431[0:0] === 1'b1) ? mul_ln353_1_fu_943_p2 : select_ln345_2_fu_922_p3);

assign select_ln353_fu_867_p3 = ((or_ln353_1_fu_861_p2[0:0] === 1'b1) ? 4'd0 : ap_phi_mux_n5_0_phi_fu_325_p4);

assign select_ln360_1_fu_1042_p3 = ((icmp_ln362_fu_1028_p2[0:0] === 1'b1) ? k_fu_1022_p2 : ap_phi_mux_k_0_phi_fu_347_p4);

assign select_ln360_2_fu_1164_p3 = ((icmp_ln362_reg_1505[0:0] === 1'b1) ? zext_ln360_2_fu_1161_p1 : mul_ln370_reg_1486);

assign select_ln360_fu_1034_p3 = ((icmp_ln362_fu_1028_p2[0:0] === 1'b1) ? 4'd1 : ap_phi_mux_l_0_phi_fu_369_p4);

assign select_ln362_1_fu_1175_p3 = ((and_ln360_1_reg_1524[0:0] === 1'b1) ? l_fu_1170_p2 : select_ln360_reg_1511);

assign select_ln362_2_fu_1181_p3 = ((and_ln360_1_reg_1524[0:0] === 1'b1) ? zext_ln360_1_fu_1158_p1 : select_ln360_2_fu_1164_p3);

assign select_ln362_3_fu_1226_p3 = ((icmp_ln362_reg_1505[0:0] === 1'b1) ? 10'd1 : add_ln362_1_reg_1559);

assign select_ln362_fu_1086_p3 = ((or_ln362_fu_1080_p2[0:0] === 1'b1) ? 4'd0 : ap_phi_mux_m6_0_phi_fu_391_p4);

assign select_ln364_fu_1144_p3 = ((or_ln362_fu_1080_p2[0:0] === 1'b1) ? 8'd1 : add_ln364_1_fu_1138_p2);

assign select_ln370_1_fu_1188_p3 = ((and_ln362_reg_1535[0:0] === 1'b1) ? m_16_reg_1541 : select_ln362_reg_1530);

assign select_ln370_2_fu_1214_p3 = ((and_ln362_reg_1535[0:0] === 1'b1) ? mul_ln370_2_fu_1208_p2 : select_ln362_2_fu_1181_p3);

assign select_ln370_fu_1130_p3 = ((or_ln370_4_fu_1124_p2[0:0] === 1'b1) ? 4'd0 : ap_phi_mux_n7_0_phi_fu_402_p4);

assign shl_ln338_fu_736_p2 = select_ln338_reg_1363 << 4'd1;

assign shl_ln353_1_fu_928_p2 = m_15_reg_1436 << 4'd1;

assign shl_ln353_fu_775_p2 = ap_phi_mux_m4_0_phi_fu_314_p4 << 4'd1;

assign shl_ln370_1_fu_1193_p2 = m_16_reg_1541 << 4'd1;

assign shl_ln370_2_fu_1257_p2 = select_ln370_reg_1547 << 4'd1;

assign shl_ln370_fu_988_p2 = ap_phi_mux_m6_0_phi_fu_391_p4 << 4'd1;

assign tmp_76_fu_574_p3 = {{select_ln323_1_fu_566_p3}, {3'd0}};

assign tmp_77_fu_692_p3 = {{select_ln338_1_fu_684_p3}, {3'd0}};

assign tmp_78_fu_972_p3 = {{select_ln345_1_reg_1424_pp2_iter5_reg}, {3'd0}};

assign tmp_79_fu_883_p3 = {{select_ln353_1_fu_875_p3}, {3'd0}};

assign tmp_80_fu_1232_p3 = {{select_ln360_1_reg_1517}, {3'd0}};

assign tmp_81_fu_1288_p3 = {{select_ln370_1_reg_1570_pp3_iter3_reg}, {3'd0}};

assign v_5_fu_809_p2 = (4'd1 + ap_phi_mux_v3_0_phi_fu_292_p4);

assign v_fu_618_p2 = (4'd1 + ap_phi_mux_v_0_phi_fu_237_p4);

assign xor_ln330_fu_646_p2 = (icmp_ln332_fu_624_p2 ^ 1'd1);

assign xor_ln345_fu_837_p2 = (icmp_ln347_fu_815_p2 ^ 1'd1);

assign xor_ln360_fu_1050_p2 = (icmp_ln362_fu_1028_p2 ^ 1'd1);

assign xor_ln362_fu_1094_p2 = (icmp_ln364_fu_1068_p2 ^ 1'd1);

assign zext_ln321_fu_582_p1 = tmp_76_fu_574_p3;

assign zext_ln323_1_fu_596_p1 = add_ln323_fu_590_p2;

assign zext_ln323_fu_586_p1 = select_ln323_fu_558_p3;

assign zext_ln330_1_fu_767_p1 = select_ln330_1_reg_1356_pp1_iter5_reg;

assign zext_ln332_fu_700_p1 = tmp_77_fu_692_p3;

assign zext_ln338_1_fu_714_p1 = add_ln338_fu_708_p2;

assign zext_ln338_3_fu_757_p1 = mul_ln338_fu_751_p2;

assign zext_ln338_fu_704_p1 = select_ln338_fu_676_p3;

assign zext_ln345_2_fu_919_p1 = v_5_reg_1413;

assign zext_ln353_1_fu_979_p1 = tmp_78_fu_972_p3;

assign zext_ln353_2_fu_891_p1 = tmp_79_fu_883_p3;

assign zext_ln353_4_fu_956_p1 = select_ln353_2_fu_949_p3;

assign zext_ln353_5_fu_895_p1 = select_ln353_fu_867_p3;

assign zext_ln353_6_fu_905_p1 = add_ln353_fu_899_p2;

assign zext_ln360_1_fu_1158_p1 = select_ln360_1_reg_1517;

assign zext_ln360_2_fu_1161_p1 = k_reg_1500;

assign zext_ln362_1_fu_1243_p1 = select_ln362_1_reg_1564;

assign zext_ln362_fu_1239_p1 = tmp_80_fu_1232_p3;

assign zext_ln370_1_fu_1252_p1 = add_ln370_fu_1246_p2;

assign zext_ln370_2_fu_1295_p1 = tmp_81_fu_1288_p3;

assign zext_ln370_4_fu_1221_p1 = select_ln370_2_fu_1214_p3;

assign zext_ln370_5_fu_1299_p1 = select_ln370_reg_1547_pp3_iter4_reg;

assign zext_ln370_7_fu_1278_p1 = mul_ln370_1_fu_1272_p2;

assign zext_ln370_8_fu_1308_p1 = add_ln370_1_fu_1302_p2;

always @ (posedge ap_clk) begin
    dct_addr_1_reg_1394[5:4] <= 2'b00;
    dct_addr_2_reg_1476[2:0] <= 3'b000;
end

endmodule //DCT
